*** Settings ***
Documentation     This test suite tests PABROS and RAYMAN
Suite Setup       Suite Setup
Suite Teardown    Suite Teardown
Test Teardown     Test Case Teardown
Force Tags        Product_Backlog_ID-xxx_1R_M1    EFS_ID-RNC_EFS_xxx    owner-I_EXT_MBB_WCDMA_SWD3_TEAM_O2@internal.nsn.com    exec_type-automatic    type-FUT    HW_TYPE-BCN_A1    BCN_STEP-BCN_S0
...               Phase-CRT    PRB-PABROS    PRB-RAYMAN    PRB-FOOLIB
Default Tags      ready-for-a-team-jenkins
Library           Collections
Library           resources/metadata_test_framework.py
Library           resources/XML_utils.py
Library           resources/parameter_utils.py
Library           resources/log_utils.py
Variables         resources/TestResources.py    ${TEST_BENCH}
Library           OperatingSystem
Resource          resources/common_kws.txt    # Resource    IpaMml.html

*** Variables ***
${TEST_BENCH}     ${HOST}    # ${TEST_BENCH}    pate56    ${TEST_BENCH}    jokeri    ${TEST_BENCH}    bcn114
${WCEL_STATE_LOCK}    0
${WCEL_STATE_UNLOCK}    1

*** Test Cases ***
WSMLC WANE CMOB IPQM IUR WRAB IPNB TQM IUO PFL: Download Full
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    WSMLC    create_object_itself=${False}    # None of these objects require any other than RNC-all, so one set-up is enough
    ${obj_plan_file_list}=    Create List    RNWPLAND_WSMLC.XML    RNWPLAND_WANE.XML    RNWPLAND_CMOB.XML    RNWPLAND_IPQM.XML    RNWPLAND_IUR.XML
    ...    RNWPLAND_WRAB.XML    RNWPLAND_IPNB.XML    RNWPLAND_TQM.XML    RNWPLAND_IUO.XML    RNWPLAND_PFL.XML
    ${dist_names_dict}=    combine_plans    ${obj_plan_file_list}    test_plan.xml    ${CURDIR}${/}test_files
    upload_a_file    test_plan.xml
    Download Upload Compare Multiple Objects    test_plan.xml    ${dist_names_dict}

WSMLC WANE CMOB IPQM IUR WRAB IPNB TQM IUO PFL: Modify Upload and Compare
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    WSMLC    create_object_itself=${True}    # None of these objects require any other than RNC-all, so one set-up is enough
    ${obj_plan_file_list}=    Create List    RNWPLAND_WSMLC.XML    RNWPLAND_WANE.XML    RNWPLAND_CMOB.XML    RNWPLAND_IPQM.XML    RNWPLAND_IUR.XML
    ...    RNWPLAND_WRAB.XML    RNWPLAND_IPNB.XML    RNWPLAND_TQM.XML    RNWPLAND_IUO.XML    RNWPLAND_PFL.XML
    ${dist_names_dict}=    combine_plans    ${obj_plan_file_list}    test_plan.xml    ${CURDIR}${/}test_files
    upload_a_file    test_plan.xml
    Download Upload Compare Multiple Objects    test_plan.xml    ${dist_names_dict}

WSMLC WANE CMOB IPQM IUR WRAB IPNB TQM IUO PFL: Delete
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    WSMLC    create_object_itself=${True}    # None of these objects require any other than RNC-all, so one set-up is enough
    ${obj_plan_file_list}=    Create List    RNWPLAND_WSMLC_delete.XML    RNWPLAND_WANE_delete.XML    RNWPLAND_CMOB_delete.XML    RNWPLAND_IPQM_delete.XML    RNWPLAND_IUR_delete.XML
    ...    RNWPLAND_WRAB_delete.XML    RNWPLAND_IPNB_delete.XML    RNWPLAND_TQM_delete.XML    RNWPLAND_IUO_delete.XML    RNWPLAND_PFL_delete.XML
    ${dist_names_dict}=    combine_plans    ${obj_plan_file_list}    test_plan.xml    ${CURDIR}${/}test_files
    upload_a_file    test_plan.xml
    Delete Plan Multiple Objects    test_plan.xml    ${dist_names_dict}

FMCS: Create Upload and Compare with the original upload plan
    [Tags]    ready-for-a-team-jenkins
    [Setup]    create_base_config_for_object    FMCS    create_object_itself=${False}
    Create Upload and Compare With Original    FMCS    ${RNC-ID}/FMCS-1

FMCS: Directactivate Create
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    FMCS    create_object_itself=${False}
    Directactivate Full    FMCS    ${RNC-ID}/FMCS-1

FMCS: Directactivate Modify
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    FMCS    create_object_itself=${True}
    Directactivate Modify    FMCS    ${RNC-ID}/FMCS-1

FMCS: Directactivate Delete
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    FMCS    create_object_itself=${True}
    Directactivate Delete    FMCS    ${RNC-ID}/FMCS-1

FMCS: modification not needed (DA)
    [Documentation]    Tests that RAYMAN notices that FMCS object was is not changed
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    FMCS    create_object_itself=${False}
    Modification Not Needed (DA)    FMCS

ADJD: Create Upload and Compare with the original upload plan
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    ADJD    create_object_itself=${False}
    Create Upload and Compare With Original    ADJD    ${RNC-ID}/WBTS-1/WCEL-1/ADJD-1

ADJD: Modify Upload and Compare
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    ADJD    create_object_itself=${True}
    Download Upload Compare    ADJD    ${RNC-ID}/WBTS-1/WCEL-1/ADJD-1

ADJD: Download full
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    ADJD    create_object_itself=${False}
    Download Upload Compare    ADJD    ${RNC-ID}/WBTS-1/WCEL-1/ADJD-1

ADJD: Directactivate Create
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    ADJD    create_object_itself=${False}
    Directactivate Full    ADJD    ${RNC-ID}/WBTS-1/WCEL-1/ADJD-1

ADJD: Directactivate Modify
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    ADJD    create_object_itself=${True}
    Directactivate Modify    ADJD    ${RNC-ID}/WBTS-1/WCEL-1/ADJD-1

ADJD: Directactivate Delete
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    ADJD    create_object_itself=${True}
    Directactivate Delete    ADJD    ${RNC-ID}/WBTS-1/WCEL-1/ADJD-1

ADJD: Delete
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    ADJD    create_object_itself=${True}
    Delete Plan    ADJD    ${RNC-ID}/WBTS-1/WCEL-1/ADJD-1

ADJD: Feature Not Enabled (Download)
    [Documentation]    Test that RAYMAN skips the whole object object when the feature is not enabled
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    ADJD    create_object_itself=${True}
    ${featureList} =    Create List    68
    Feature Not Enabled (Download)    ADJD    ${featureList}    ADJD CREATION SKIPPED: NEEDED OPTION NOT SUPPORTED: Soft Handover Based on Detected Set Reporting
    [Teardown]    License Check Teardown

ADJD: Feature Not Enabled (DA)
    [Documentation]    Test that RAYMAN skips the whole object object when the feature is not enabled
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    ADJD    create_object_itself=${True}
    ${featureList} =    Create List    68
    Feature Not Enabled (DA)    ADJD    ${featureList}    ADJD CREATION SKIPPED: NEEDED OPTION NOT SUPPORTED: Soft Handover Based on Detected Set Reporting
    [Teardown]    License Check Teardown

ADJD: Feature Not Enabled (Upload)
    [Documentation]    Test that RAYMAN skips the whole object object in upload when the feature is not enabled
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    ADJD    create_object_itself=${True}
    ${featureList} =    Create List    68
    Feature Not Enabled (Upload)    ADJD    ${featureList}
    [Teardown]    License Check Teardown

ADJD: modification not needed (DA)
    [Documentation]    Tests that RAYMAN notices that ADJD object was is not changed
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    ADJD    create_object_itself=${False}
    Modification Not Needed (DA)    ADJD

ADJG: Create Upload and Compare with the original upload plan
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    ADJG    create_object_itself=${False}
    Create Upload and Compare With Original    ADJG    ${RNC-ID}/WBTS-1/WCEL-1/ADJG-1

ADJG: Modify Upload and Compare
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    ADJG    create_object_itself=${True}
    Download Upload Compare    ADJG    ${RNC-ID}/WBTS-1/WCEL-1/ADJG-1

ADJG: Download full
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    ADJG    create_object_itself=${False}
    Download Upload Compare    ADJG    ${RNC-ID}/WBTS-1/WCEL-1/ADJG-1

ADJG: Directactivate Create
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    ADJG    create_object_itself=${False}
    Directactivate Full    ADJG    ${RNC-ID}/WBTS-1/WCEL-1/ADJG-1

ADJG: Directactivate Modify
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    ADJG    create_object_itself=${True}
    Directactivate Modify    ADJG    ${RNC-ID}/WBTS-1/WCEL-1/ADJG-1    different_plans=${True}

ADJG: Directactivate Delete
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    ADJG    create_object_itself=${True}
    Directactivate Delete    ADJG    ${RNC-ID}/WBTS-1/WCEL-1/ADJG-1

ADJG: Delete
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    ADJG    create_object_itself=${True}
    Delete Plan    ADJG    ${RNC-ID}/WBTS-1/WCEL-1/ADJG-1

ADJG: Feature Not Enabled (Download)
    [Documentation]    Test that RAYMAN skips the whole object object when the feature is not enabled
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    ADJG    create_object_itself=${True}
    ${featureList} =    Create List    0    83
    Feature Not Enabled (Download)    ADJG    ${featureList}    ADJG CREATION SKIPPED: NEEDED OPTION NOT SUPPORTED: UTRAN-GAN Interworking
    [Teardown]    License Check Teardown

ADJG: Feature Not Enabled (DA)
    [Documentation]    Test that RAYMAN skips the whole object object when the feature is not enabled
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    ADJG    create_object_itself=${True}
    ${featureList} =    Create List    0    83
    Feature Not Enabled (DA)    ADJG    ${featureList}    ADJG CREATION SKIPPED: NEEDED OPTION NOT SUPPORTED: UTRAN-GAN Interworking
    [Teardown]    License Check Teardown

ADJG: Feature Not Enabled (Upload)
    [Documentation]    Test that RAYMAN skips the whole object object in upload when the feature is not enabled
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    ADJG    create_object_itself=${True}
    ${featureList} =    Create List    0    83
    Feature Not Enabled (Upload)    ADJG    ${featureList}
    [Teardown]    License Check Teardown

ADJG: modification not needed (DA)
    [Documentation]    Tests that RAYMAN notices that ADJG object was is not changed
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    ADJG    create_object_itself=${False}
    Modification Not Needed (DA)    ADJG    different_plans=${True}

ADJE: Create Upload and Compare with the original upload plan
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    ADJE    create_object_itself=${False}
    Create Upload and Compare With Original    ADJE    ${RNC-ID}/WBTS-1/WCEL-1/ADJE-1

ADJE: Modify Upload and Compare
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    ADJE    create_object_itself=${True}
    Download Upload Compare    ADJE    ${RNC-ID}/WBTS-1/WCEL-1/ADJE-1

ADJE: Download full
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    ADJE    create_object_itself=${False}
    Download Upload Compare    ADJE    ${RNC-ID}/WBTS-1/WCEL-1/ADJE-1

ADJE: Directactivate Create
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    ADJE    create_object_itself=${False}
    Directactivate Full    ADJE    ${RNC-ID}/WBTS-1/WCEL-1/ADJE-1

ADJE: Directactivate Modify
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    ADJE    create_object_itself=${True}
    Directactivate Modify    ADJE    ${RNC-ID}/WBTS-1/WCEL-1/ADJE-1

ADJE: Directactivate Delete
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    ADJE    create_object_itself=${True}
    Directactivate Delete    ADJE    ${RNC-ID}/WBTS-1/WCEL-1/ADJE-1

ADJE: Delete
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    ADJE    create_object_itself=${True}
    Delete Plan    ADJE    ${RNC-ID}/WBTS-1/WCEL-1/ADJE-1

ADJE: modification not needed (DA)
    [Documentation]    Tests that RAYMAN notices that ADJE object was is not changed
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    ADJE    create_object_itself=${False}
    Modification Not Needed (DA)    ADJE

ADJI: Create Upload and Compare with the original upload plan
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    ADJI    create_object_itself=${False}
    Create Upload and Compare With Original    ADJI    ${RNC-ID}/WBTS-1/WCEL-1/ADJI-1

ADJI: Modify Upload and Compare
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    ADJI    ${True}
    Download Upload Compare    ADJI    ${RNC-ID}/WBTS-1/WCEL-1/ADJI-1

ADJI: Download full
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    ADJI    ${False}
    Download Upload Compare    ADJI    ${RNC-ID}/WBTS-1/WCEL-1/ADJI-1

ADJI: Directactivate Create
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    ADJI    ${False}
    Directactivate Full    ADJI    ${RNC-ID}/WBTS-1/WCEL-1/ADJI-1

ADJI: Directactivate Modify
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    ADJI    create_object_itself=${True}
    Directactivate Modify    ADJI    ${RNC-ID}/WBTS-1/WCEL-1/ADJI-1

ADJI: Directactivate Delete
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    ADJI    create_object_itself=${True}
    Directactivate Delete    ADJI    ${RNC-ID}/WBTS-1/WCEL-1/ADJI-1

ADJI: Delete
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    ADJI    ${True}
    Delete Plan    ADJI    ${RNC-ID}/WBTS-1/WCEL-1/ADJI-1

ADJI: modification not needed (DA)
    [Documentation]    Tests that RAYMAN notices that ADJI object was is not changed
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    ADJI    create_object_itself=${False}
    Modification Not Needed (DA)    ADJI

ADJS: Create Upload and Compare with the original upload plan
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    ADJS    create_object_itself=${False}
    Create Upload and Compare With Original    ADJS    ${RNC-ID}/WBTS-1/WCEL-1/ADJS-1

ADJS: Modify Upload and Compare
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    ADJS    ${True}
    Download Upload Compare    ADJS    ${RNC-ID}/WBTS-1/WCEL-1/ADJS-1

ADJS: Download full
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    ADJS    ${False}
    Download Upload Compare    ADJS    ${RNC-ID}/WBTS-1/WCEL-1/ADJS-1

ADJS: Directactivate Create
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    ADJS    ${False}
    Directactivate Full    ADJS    ${RNC-ID}/WBTS-1/WCEL-1/ADJS-1

ADJS: Directactivate Modify
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    ADJS    ${True}
    Directactivate Modify    ADJS    ${RNC-ID}/WBTS-1/WCEL-1/ADJS-1

ADJS: Directactivate Delete
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    ADJS    ${True}
    Directactivate Delete    ADJS    ${RNC-ID}/WBTS-1/WCEL-1/ADJS-1

ADJS: Delete
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    ADJS    ${True}
    Delete Plan    ADJS    ${RNC-ID}/WBTS-1/WCEL-1/ADJS-1

ADJS: modification not needed (DA)
    [Documentation]    Tests that RAYMAN notices that ADJS object was is not changed
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    ADJS    create_object_itself=${False}
    Modification Not Needed (DA)    ADJS

ADJL: Create Upload and Compare with the original upload plan
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    ADJL    create_object_itself=${False}
    Create Upload and Compare With Original    ADJL    ${RNC-ID}/WBTS-1/WCEL-1/ADJL-1

ADJL: Modify Upload and Compare
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    ADJL    ${True}
    Download Upload Compare    ADJL    ${RNC-ID}/WBTS-1/WCEL-1/ADJL-1

ADJL: Download full
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    ADJL    ${False}
    Download Upload Compare    ADJL    ${RNC-ID}/WBTS-1/WCEL-1/ADJL-1

ADJL: Directactivate Create
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    ADJL    ${False}
    Directactivate Full    ADJL    ${RNC-ID}/WBTS-1/WCEL-1/ADJL-1

ADJL: Directactivate Modify
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    ADJL    ${True}
    Directactivate Modify    ADJL    ${RNC-ID}/WBTS-1/WCEL-1/ADJL-1

ADJL: Directactivate Delete
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    ADJL    ${True}
    Directactivate Delete    ADJL    ${RNC-ID}/WBTS-1/WCEL-1/ADJL-1

ADJL: Delete
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    ADJL    ${True}
    Delete Plan    ADJL    ${RNC-ID}/WBTS-1/WCEL-1/ADJL-1

ADJL: Feature Not Enabled (Download)
    [Documentation]    Test that RAYMAN skips the whole object object when the feature is not enabled
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    ADJL    create_object_itself=${True}
    ${featureList} =    Create List    107
    Feature Not Enabled (Download)    ADJL    ${featureList}    ADJL CREATION SKIPPED: NEEDED OPTION NOT SUPPORTED: LTE Interworking-Cell Reselection to LTE
    [Teardown]    License Check Teardown

ADJL: Feature Not Enabled (DA)
    [Documentation]    Test that RAYMAN skips the whole object object when the feature is not enabled
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    ADJL    create_object_itself=${True}
    ${featureList} =    Create List    107
    Feature Not Enabled (DA)    ADJL    ${featureList}    ADJL CREATION SKIPPED: NEEDED OPTION NOT SUPPORTED: LTE Interworking-Cell Reselection to LTE
    [Teardown]    License Check Teardown

ADJL: Feature Not Enabled (Upload)
    [Documentation]    Test that RAYMAN skips the whole object object in upload when the feature is not enabled
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    ADJL    create_object_itself=${True}
    ${featureList} =    Create List    107
    Feature Not Enabled (Upload)    ADJL    ${featureList}
    [Teardown]    License Check Teardown

ADJL: modification not needed (DA)
    [Documentation]    Tests that RAYMAN notices that ADJL object was is not changed
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    ADJL    create_object_itself=${False}
    Modification Not Needed (DA)    ADJL

WCEL: Create Upload and Compare with the original upload plan
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    Run Keywords    clean_all_except_rnc_objs_from_db    AND    create_base_config_for_object    WCEL    create_object_itself=${False}
    # If WCEL object has existed before OMU reset (which is executed by the setup), RAKTOR will add wcel_state_t_bl_init_c bit to wcel_state:
    # upload returns wcel state 67, although wcel_state is 3 in the db
    # If WCEL is a "fresh" one, upload returns wcel state 3
    # OMU reset affects also to MaxDLPowerCapability
    # As solution, these system-set parameters are ignored by this test case
    ${ignored_params_list}=    Create List    WCelState    MaxDLPowerCapability
    Create Upload and Compare With Original    WCEL    ${RNC-ID}/WBTS-1/WCEL-1    ignored_params=${ignored_params_list}

WCEL: Modify Upload and Compare
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    WCEL    create_object_itself=${True}
    Download Upload Compare    WCEL    ${RNC-ID}/WBTS-1/WCEL-1

WCEL: Download full
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    WCEL    create_object_itself=${False}
    Download Upload Compare    WCEL    ${RNC-ID}/WBTS-1/WCEL-1

WCEL: Directactivate Create
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    WCEL    create_object_itself=${False}
    Directactivate Full    WCEL    ${RNC-ID}/WBTS-1/WCEL-1

WCEL: Directactivate Modify
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    WCEL    create_object_itself=${True}
    ${ignored_params_list}=    Create List    AdminCellState
    Directactivate Modify    WCEL    ${RNC-ID}/WBTS-1/WCEL-1    different_plans=${True}    ignored_params=${ignored_params_list}

WCEL: Directactivate Delete
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    WCEL    create_object_itself=${True}
    object_exists_in_db    WCEL    act
    object_exists_in_db    WCEL    new
    Directactivate Delete    WCEL    ${RNC-ID}/WBTS-1/WCEL-1

WCEL: Delete
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    WCEL    create_object_itself=${True}
    Delete Plan    WCEL    ${RNC-ID}/WBTS-1/WCEL-1

WCEL: Delete - ADJx Are Also Deleted
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    WCEL    create_object_itself=${True}
    # Create ADJx
    download_plan    RNWPLAND_HOPI_minimal.XML
    download_plan    RNWPLAND_HOPS_minimal.XML
    download_plan    RNWPLAND_ADJD_minimal.XML
    download_plan    RNWPLAND_ADJI_minimal.XML
    download_plan    RNWPLAND_ADJS_minimal.XML
    # Now delete WCEL --> all ADJD/ADJI/ADJS should be deleted as well
    ${output} =    download_plan    RNWPLAND_WCEL_delete.XML    should_succeed=${True}
    Should Contain    ${output}    WCEL DELETION SUCCESSFULLY COMPLETED
    # RNW database shouldn't contain ADJD/ADJI/ADJS objects
    ${found} =    object_exists_in_db    ADJD    act
    Should Be True    ${found}==False
    ${found} =    object_exists_in_db    ADJD    new
    Should Be True    ${found}==False
    ${found} =    object_exists_in_db    ADJI    act
    Should Be True    ${found}==False
    ${found} =    object_exists_in_db    ADJI    new
    Should Be True    ${found}==False
    ${found} =    object_exists_in_db    ADJS    act
    Should Be True    ${found}==False
    ${found} =    object_exists_in_db    ADJS    new
    Should Be True    ${found}==False

WCEL: Create - WAC Is Also Created
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    WCEL    create_object_itself=${False}
    # Delete WAC
    ${output} =    download_plan    RNWPLAND_WAC_delete.XML    should_succeed=${True}
    # Now create WCEL
    ${output} =    download_plan    RNWPLAND_WCEL_minimal.XML
    Should Contain    ${output}    WAC CREATION SUCCESSFULLY COMPLETED

WCEL: modification not needed (DA)
    [Documentation]    Tests that RAYMAN notices that WCEL object was is not changed
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    WCEL    create_object_itself=${False}
    Modification Not Needed (DA)    WCEL    different_plans=${True}

WCEL: Cell Unlocking In Modify Operation
    [Tags]    ready-for-a-team-jenkins    
    [Setup]    create_base_config_for_object    WCEL    create_object_itself=${True}
    Create WCEL Plan    ${WCEL_STATE_UNLOCK}    update
    ${output} =    direct_activate    testplan.xml
    sleep    10
    ${state} =    check_wcel_state    ${WCEL_STATE_UNLOCK}
    ${ismcRNC} =    ismcRNC
    Run Keyword If    ${ismcRNC}==True    Should Contain    ${output}    WCEL UNLOCKING SUCCESSFULLY COMPLETED
    download_plan    RNWPLAND_WCEL_delete.XML

WCEL: Cell Locking In Modify Operation
    [Tags]    ready-for-a-team-jenkins
    [Setup]    create_base_config_for_object    WCEL    create_object_itself=${True}
    Create WCEL Plan    ${WCEL_STATE_LOCK}    update
    ${output} =    direct_activate    testplan.xml
    sleep    10
    ${state} =    check_wcel_state    ${WCEL_STATE_LOCK}
    ${ismcRNC} =    ismcRNC
    Run Keyword If    ${ismcRNC}==True    Should Contain    ${output}    WCEL LOCKING SUCCESSFULLY COMPLETED
    download_plan    RNWPLAND_WCEL_delete.XML

WCEL: Cell Unlocking In Create Operation
    [Tags]    ready-for-a-team-jenkins
    [Setup]    create_base_config_for_object    WCEL    create_object_itself=${False}
    Create WCEL Plan    ${WCEL_STATE_UNLOCK}    create
    ${output} =    direct_activate    testplan.xml
    sleep    10
    ${state} =    check_wcel_state    ${WCEL_STATE_UNLOCK}
    ${ismcRNC} =    ismcRNC
    Run Keyword If    ${ismcRNC}==True    Should Contain    ${output}    WCEL UNLOCKING SUCCESSFULLY COMPLETED
    download_plan    RNWPLAND_WCEL_delete.XML

WCEL: Cell Locking In Delete Operation
    [Tags]    ready-for-a-team-jenkins
    [Setup]    create_base_config_for_object    WCEL    create_object_itself=${True}
    Create WCEL Plan    ${WCEL_STATE_UNLOCK}    update
    ${output} =    direct_activate    testplan.xml
    sleep    10
    ${state} =    check_wcel_state    ${WCEL_STATE_UNLOCK}
    ${output} =    download_plan    RNWPLAND_WCEL_delete.XML
    ${ismcRNC} =    ismcRNC
    Run Keyword If    ${ismcRNC}==True    Should Contain    ${output}    WCEL LOCKING SUCCESSFULLY COMPLETED

WCEL: Cell Locking and Unlocking in DA modification - AdminCellState is the only parameter in the plan
    [Tags]    ready-for-a-team-jenkins
    [Setup]    create_base_config_for_object    WCEL    create_object_itself=${True}
    # Lock the WCEL
    Generate WCELL AdminCellState plan    ${WCEL_STATE_LOCK}
    ${output}=    direct_activate    testplan.xml
    sleep    5
    ${ismcRNC} =    ismcRNC
    Run Keyword If    ${ismcRNC}==True    Should Contain    ${output}    WCEL LOCKING SUCCESSFULLY COMPLETED
    Run Keyword If    ${ismcRNC}==True    Should Contain    ${output}    WCEL MODIFICATION SUCCESSFULLY COMPLETED
    ${state} =    check_wcel_state    ${WCEL_STATE_LOCK}
    # Unlock the WCEL
    Generate WCELL AdminCellState plan    ${WCEL_STATE_UNLOCK}
    ${output}=    direct_activate    testplan.xml
    sleep    5
    ${ismcRNC} =    ismcRNC
    Run Keyword If    ${ismcRNC}==True    Should Contain    ${output}    WCEL UNLOCKING SUCCESSFULLY COMPLETED
    Run Keyword If    ${ismcRNC}==True    Should Contain    ${output}    WCEL MODIFICATION SUCCESSFULLY COMPLETED
    ${state} =    check_wcel_state    ${WCEL_STATE_UNLOCK}
    # Lock the WCEL
    Generate WCELL AdminCellState plan    ${WCEL_STATE_LOCK}
    ${output}=    direct_activate    testplan.xml
    sleep    5
    ${ismcRNC} =    ismcRNC
    Run Keyword If    ${ismcRNC}==True    Should Contain    ${output}    WCEL LOCKING SUCCESSFULLY COMPLETED
    Run Keyword If    ${ismcRNC}==True    Should Contain    ${output}    WCEL MODIFICATION SUCCESSFULLY COMPLETED
    ${state} =    check_wcel_state    ${WCEL_STATE_LOCK}
    # Delete the WCEL
    ${output} =    download_plan    RNWPLAND_WCEL_delete.XML

VCEL: Create Upload and Compare with the original upload plan
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    VCEL    ${False}
    Create Upload and Compare With Original    VCEL    ${RNC-ID}/VBTS-1/VCEL-1

VCEL: Modify Upload and Compare
    [Setup]    create_base_config_for_object    VCEL    ${True}
    Download Upload Compare    VCEL    ${RNC-ID}/VBTS-1/VCEL-1

VCEL: Download full
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    VCEL    ${False}
    Download Upload Compare    VCEL    ${RNC-ID}/VBTS-1/VCEL-1

VCEL: Directactivate create
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    VCEL    ${False}
    Directactivate Full    VCEL    ${RNC-ID}/VBTS-1/VCEL-1

VCEL: Directactivate modify
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    VCEL    create_object_itself=${True}
    Directactivate Modify    VCEL    ${RNC-ID}/VBTS-1/VCEL-1

VCEL: Directactivate delete
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    VCEL    create_object_itself=${True}
    Directactivate delete    VCEL    ${RNC-ID}/VBTS-1/VCEL-1

VCEL: Delete
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    VCEL    ${True}
    Delete Plan    VCEL    ${RNC-ID}/VBTS-1/VCEL-1

VCEL: Feature Not Enabled (Download)
    [Documentation]    Test that RAYMAN skips the whole object object when the feature is not enabled
    [Tags]    ready-for-a-team-jenkins    nightly-test    Fails-with-org    # because of different feedback msg
    [Setup]    create_base_config_for_object    VCEL    create_object_itself=${True}
    ${featureList} =    Create List    88    56
    # This is the output with org: VCEL CREATION SKIPPED: NEEDED OPTION NOT SUPPORTED: IBTS Sharing
    Feature Not Enabled (Download)    VCEL    ${featureList}    VCEL CREATION SKIPPED: NEEDED OPTION NOT SUPPORTED: HSPA Inter-RNC Cell Change
    [Teardown]    License Check Teardown

VCEL: Feature Not Enabled (DA)
    [Documentation]    Test that RAYMAN skips the whole object object when the feature is not enabled
    [Tags]    ready-for-a-team-jenkins    nightly-test    Fails-with-org    # because old RAYMAN DA implementation checks the feature only after checking the parameters
    [Setup]    create_base_config_for_object    VCEL    create_object_itself=${False}
    ${featureList} =    Create List    88    56
    Feature Not Enabled (DA)    VCEL    ${featureList}    VCEL CREATION SKIPPED: NEEDED OPTION NOT SUPPORTED: HSPA Inter-RNC Cell Change
    [Teardown]    License Check Teardown

VCEL: Feature Not Enabled (Upload)
    [Documentation]    Test that RAYMAN skips the whole object object in upload when the feature is not enabled
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    VCEL    create_object_itself=${True}
    ${featureList} =    Create List    88    56
    Feature Not Enabled (Upload)    VCEL    ${featureList}
    [Teardown]    License Check Teardown

VCEL: modification not needed (DA)
    [Documentation]    Tests that RAYMAN notices that VCEL object was is not changed
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    VCEL    create_object_itself=${False}
    Modification Not Needed (DA)    VCEL

RNC: Create Upload and Compare with the original upload plan
    [Tags]    ready-for-a-team-jenkins    
    [Setup]    create_base_config_for_object    RNC    create_object_itself=${False}
    # RncOptions is ignored because we have more options enabled that we had when the original plan we uploaded
    ${ignored_params_list}=    Create List    RNCIPAddress    RncOptions    ActivePRNC    OMSIpAddress
    Create Upload and Compare With Original    RNC    ${RNC-ID}    ignored_params=${ignored_params_list}

RNC: Modify Upload and Compare
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    RNC    create_object_itself=${True}
    Download Upload Compare    RNC    ${RNC-ID}    ignored_params=RNCIPAddress

RNC: Download full
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    RNC    create_object_itself=${False}
    Download Upload Compare    RNC    ${RNC-ID}    ignored_params=RNCIPAddress

RNC: Directactivate Create
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    RNC    create_object_itself=${False}
    Directactivate Full    RNC    ${RNC-ID}    ignored_params=RNCIPAddress

RNC: Directactivate Modify
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    RNC    create_object_itself=${True}
    Directactivate Modify    RNC    ${RNC-ID}

RNC: Directactivate Delete
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    RNC    create_object_itself=${True}
    Invalid Directactivate Delete    RNC    ${RNC-ID}

RNC: delete
    [Tags]    ready-for-a-team-jenkins    nightly-test    Fails-with-org    # because of a different feedback message
    [Setup]    create_base_config_for_object    RNC    create_object_itself=${True}
    ${output} =    download_plan    RNWPLAND_RNC_delete.XML    should_succeed=${false}
    Should Contain    ${output}    ${RNC-ID}\ \ -> 15409 - RNC HANDLING FAILED: ILLEGAL OPERATION FOR RNC OBJECT IN RNW PLAN
    Should Contain    ${output}    Error in RNW Plan download:
    Should Contain    ${output}    15409 - RNC HANDLING FAILED: ILLEGAL OPERATION FOR RNC OBJECT IN RNW PLAN

RNC: modification not needed (DA)
    [Documentation]    Tests that RAYMAN notices that RNC object was is not changed
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    RNC    create_object_itself=${True}
    Modification Not Needed (DA)    RNC

RNAC: Create Upload and Compare with the original upload plan
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    RNAC    create_object_itself=${False}
    Create Upload and Compare With Original    RNAC    ${RNC-ID}/RNAC-1

RNAC: Modify Upload and Compare
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    RNAC    create_object_itself=${True}
    Download Upload Compare    RNAC    ${RNC-ID}/RNAC-1

RNAC: Download full
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    RNAC    create_object_itself=${False}
    Download Upload Compare    RNAC    ${RNC-ID}/RNAC-1

RNAC: Directactivate Create
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    RNAC    create_object_itself=${False}
    Directactivate Full    RNAC    ${RNC-ID}/RNAC-1

RNAC: Directactivate Modify
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    RNAC    create_object_itself=${True}
    Directactivate Modify    RNAC    ${RNC-ID}/RNAC-1

RNAC: Directactivate Delete
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    RNAC    create_object_itself=${True}
    Invalid Directactivate Delete    RNAC    ${RNC-ID}/RNAC-1

RNAC: Delete
    [Tags]    ready-for-a-team-jenkins    nightly-test    Fails-with-org    # because of a different feedback message
    [Setup]    create_base_config_for_object    RNAC    create_object_itself=${True}
    Invalid Delete Plan    RNAC

RNAC: modification not needed (DA)
    [Documentation]    Tests that RAYMAN notices that RNAC object was is not changed
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    RNAC    create_object_itself=${False}
    Modification Not Needed (DA)    RNAC

RNPS: Create Upload and Compare with the original upload plan
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    RNPS    create_object_itself=${False}
    Create Upload and Compare With Original    RNPS    ${RNC-ID}/RNPS-1

RNPS: Modify Upload and Compare
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    RNPS    create_object_itself=${True}
    Download Upload Compare    RNPS    ${RNC-ID}/RNPS-1

RNPS: Download full
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    RNPS    create_object_itself=${False}
    Download Upload Compare    RNPS    ${RNC-ID}/RNPS-1

RNPS: Directactivate Create
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    RNPS    create_object_itself=${False}
    Directactivate Full    RNPS    ${RNC-ID}/RNPS-1

RNPS: Directactivate Modify
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    RNPS    create_object_itself=${True}
    Directactivate Modify    RNPS    ${RNC-ID}/RNPS-1

RNPS: Directactivate Delete
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    RNPS    create_object_itself=${True}
    Invalid Directactivate Delete    RNPS    ${RNC-ID}/RNPS-1

RNPS: Delete
    [Tags]    ready-for-a-team-jenkins    nightly-test    Fails-with-org    # because of a different feedback message
    [Setup]    create_base_config_for_object    RNPS    create_object_itself=${True}
    Invalid Delete Plan    RNPS

RNPS: modification not needed (DA)
    [Documentation]    Tests that RAYMAN notices that RNPS object was is not changed
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    RNPS    create_object_itself=${False}
    Modification Not Needed (DA)    RNPS

RNHSPA: Create Upload and Compare with the original upload plan
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    RNHSPA    create_object_itself=${False}
    Create Upload and Compare With Original    RNHSPA    ${RNC-ID}/RNHSPA-1

RNHSPA: Modify Upload and Compare
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    RNHSPA    create_object_itself=${True}
    Download Upload Compare    RNHSPA    ${RNC-ID}/RNHSPA-1

RNHSPA: Download full
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    RNHSPA    create_object_itself=${False}
    Download Upload Compare    RNHSPA    ${RNC-ID}/RNHSPA-1

RNHSPA: Directactivate Create
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    RNHSPA    create_object_itself=${False}
    Directactivate Full    RNHSPA    ${RNC-ID}/RNHSPA-1

RNHSPA: Directactivate Modify
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    RNHSPA    create_object_itself=${True}
    Directactivate Modify    RNHSPA    ${RNC-ID}/RNHSPA-1

RNHSPA: Directactivate Delete
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    RNHSPA    create_object_itself=${True}
    Invalid Directactivate Delete    RNHSPA    ${RNC-ID}/RNHSPA-1

RNHSPA: Delete
    [Tags]    ready-for-a-team-jenkins    nightly-test    Fails-with-org    # because of a different feedback message
    [Setup]    create_base_config_for_object    RNHSPA    create_object_itself=${True}
    Invalid Delete Plan    RNHSPA

RNHSPA: modification not needed (DA)
    [Documentation]    Tests that RAYMAN notices that RNHSPA object was is not changed
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    RNHSPA    create_object_itself=${False}
    Modification Not Needed (DA)    RNHSPA

RNRLC: Create Upload and Compare with the original upload plan
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    RNRLC    create_object_itself=${False}
    Create Upload and Compare With Original    RNRLC    ${RNC-ID}/RNRLC-1

RNRLC: Modify Upload and Compare
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    RNRLC    create_object_itself=${True}
    Download Upload Compare    RNRLC    ${RNC-ID}/RNRLC-1

RNRLC: Download full
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    RNRLC    create_object_itself=${False}
    Download Upload Compare    RNRLC    ${RNC-ID}/RNRLC-1

RNRLC: Directactivate Create
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    RNRLC    create_object_itself=${False}
    Directactivate Full    RNRLC    ${RNC-ID}/RNRLC-1

RNRLC: Directactivate Modify
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    RNRLC    create_object_itself=${True}
    Directactivate Modify    RNRLC    ${RNC-ID}/RNRLC-1

RNRLC: Directactivate Delete
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    RNRLC    create_object_itself=${True}
    Invalid Directactivate Delete    RNRLC    ${RNC-ID}/RNRLC-1

RNRLC: Delete
    [Tags]    ready-for-a-team-jenkins    nightly-test    Fails-with-org    # because of a different feedback message
    [Setup]    create_base_config_for_object    RNRLC    create_object_itself=${True}
    Invalid Delete Plan    RNRLC

RNRLC: modification not needed (DA)
    [Documentation]    Tests that RAYMAN notices that RNRLC object was is not changed
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    RNRLC    create_object_itself=${False}
    Modification Not Needed (DA)    RNRLC

RNTRM: Create Upload and Compare with the original upload plan
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    RNTRM    create_object_itself=${False}
    Create Upload and Compare With Original    RNTRM    ${RNC-ID}/RNTRM-1

RNTRM: Modify Upload and Compare
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    RNTRM    create_object_itself=${True}
    Download Upload Compare    RNTRM    ${RNC-ID}/RNTRM-1

RNTRM: Download full
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    RNTRM    create_object_itself=${False}
    Download Upload Compare    RNTRM    ${RNC-ID}/RNTRM-1

RNTRM: Directactivate Create
    [Tags]    ready-for-a-team-jenkins
    [Setup]    create_base_config_for_object    RNTRM    create_object_itself=${False}
    Directactivate Full    RNTRM    ${RNC-ID}/RNTRM-1

RNTRM: Directactivate Modify
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    RNTRM    create_object_itself=${True}
    Directactivate Modify    RNTRM    ${RNC-ID}/RNTRM-1

RNTRM: Directactivate Delete
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    RNTRM    create_object_itself=${True}
    Invalid Directactivate Delete    RNTRM    ${RNC-ID}/RNTRM-1

RNTRM: Delete
    [Tags]    ready-for-a-team-jenkins    nightly-test    Fails-with-org    # because of a different feedback message
    [Setup]    create_base_config_for_object    RNTRM    create_object_itself=${True}
    Invalid Delete Plan    RNTRM

RNTRM: modification not needed (DA)
    [Documentation]    Tests that RAYMAN notices that RNTRM object was is not changed
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    RNTRM    create_object_itself=${False}
    Modification Not Needed (DA)    RNTRM

RNMOBI: Create Upload and Compare with the original upload plan
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    RNMOBI    create_object_itself=${False}
    Create Upload and Compare With Original    RNMOBI    ${RNC-ID}/RNMOBI-1

RNMOBI: Modify Upload and Compare
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    RNMOBI    create_object_itself=${True}
    Download Upload Compare    RNMOBI    ${RNC-ID}/RNMOBI-1

RNMOBI: Download full
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    RNMOBI    create_object_itself=${False}
    Download Upload Compare    RNMOBI    ${RNC-ID}/RNMOBI-1

RNMOBI: Directactivate Create
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    RNMOBI    create_object_itself=${False}
    Directactivate Full    RNMOBI    ${RNC-ID}/RNMOBI-1

RNMOBI: Directactivate Modify
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    RNMOBI    create_object_itself=${True}
    Directactivate Modify    RNMOBI    ${RNC-ID}/RNMOBI-1

RNMOBI: Directactivate Delete
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    RNMOBI    create_object_itself=${True}
    Invalid Directactivate Delete    RNMOBI    ${RNC-ID}/RNMOBI-1

RNMOBI: Delete
    [Tags]    ready-for-a-team-jenkins    nightly-test    Fails-with-org    # because of a different feedback message
    [Setup]    create_base_config_for_object    RNMOBI    create_object_itself=${True}
    Invalid Delete Plan    RNMOBI

RNMOBI: modification not needed (DA)
    [Documentation]    Tests that RAYMAN notices that RNMOBI object was is not changed
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    RNMOBI    create_object_itself=${False}
    Modification Not Needed (DA)    RNMOBI

RNFC: Create Upload and Compare with the original upload plan
    [Tags]    add-201412    # Waiting new RAKTOR with support for RAN3086 CSFB with RIM (available after CCL day 14.10.2014)
    [Setup]    create_base_config_for_object    RNFC    create_object_itself=${False}
    # [Tags]    ready-for-a-team-jenkins    nightly-test
    Create Upload and Compare With Original    RNFC    ${RNC-ID}/RNFC-1

RNFCModify Upload and Compare
    [Tags]    add-201412    # Waiting new RAKTOR with support for RAN3086 CSFB with RIM (available after CCL day 14.10.2014)
    [Setup]    create_base_config_for_object    RNFC    create_object_itself=${True}
    # [Tags]    ready-for-a-team-jenkins    nightly-test
    Download Upload Compare    RNFC    ${RNC-ID}/RNFC-1

RNFC: Download full
    [Tags]    add-201412    # Waiting new RAKTOR with support for RAN3086 CSFB with RIM (available after CCL day 14.10.2014)
    [Setup]    create_base_config_for_object    RNFC    create_object_itself=${False}
    # [Tags]    ready-for-a-team-jenkins    nightly-test
    Download Upload Compare    RNFC    ${RNC-ID}/RNFC-1

RNFC: Directactivate Create
    [Tags]    add-201412    # Waiting new RAKTOR with support for RAN3086 CSFB with RIM (available after CCL day 14.10.2014)
    [Setup]    create_base_config_for_object    RNFC    create_object_itself=${False}
    # [Tags]    ready-for-a-team-jenkins    nightly-test
    Directactivate Full    RNFC    ${RNC-ID}/RNFC-1

RNFC: Directactivate Modify
    [Tags]    add-201412    # Waiting new RAKTOR with support for RAN3086 CSFB with RIM (available after CCL day 14.10.2014)
    [Setup]    create_base_config_for_object    RNFC    create_object_itself=${True}
    # [Tags]    ready-for-a-team-jenkins    nightly-test
    Directactivate Modify    RNFC    ${RNC-ID}/RNFC-1

RNFC: Directactivate Delete
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    RNFC    create_object_itself=${True}
    Invalid Directactivate Delete    RNFC    ${RNC-ID}/RNFC-1

RNFC: RNFC delete
    [Tags]    ready-for-a-team-jenkins    nightly-test    Fails-with-org    # because of a different feedback message
    [Setup]    create_base_config_for_object    RNFC    create_object_itself=${True}
    Invalid Delete Plan    RNFC

RNFC: modification not needed (DA)
    [Documentation]    Tests that RAYMAN notices that RNFC object was is not changed
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    RNFC    create_object_itself=${False}
    Modification Not Needed (DA)    RNFC

RNCERM: Create Upload and Compare with the original upload plan
    [Documentation]    This object exists in mcRNC only
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    RNCERM    create_object_itself=${False}
    ${ismcRNC} =    ismcRNC
    Run Keyword If    ${ismcRNC}==True    Create Upload and Compare With Original    RNCERM    ${RNC-ID}/RNCERM-1

RNCERM: Modify Upload and Compare
    [Documentation]    This object exists in mcRNC only
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    RNCERM    create_object_itself=${True}
    ${ismcRNC} =    ismcRNC
    Run Keyword If    ${ismcRNC}==True    Download Upload Compare    RNCERM    ${RNC-ID}/RNCERM-1

RNCERM: Download full
    [Documentation]    This object exists in mcRNC only
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    RNCERM    create_object_itself=${False}
    ${ismcRNC} =    ismcRNC
    Run Keyword If    ${ismcRNC}==True    Download Upload Compare    RNCERM    ${RNC-ID}/RNCERM-1

RNCERM: Directactivate Create
    [Documentation]    This object exists in mcRNC only
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    RNCERM    create_object_itself=${False}
    ${ismcRNC} =    ismcRNC
    Run Keyword If    ${ismcRNC}==True    Directactivate Full    RNCERM    ${RNC-ID}/RNCERM-1

RNCERM: Directactivate Modify
    [Documentation]    This object exists in mcRNC only
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    RNCERM    create_object_itself=${True}
    ${ismcRNC} =    ismcRNC
    Run Keyword If    ${ismcRNC}==True    Directactivate Modify    RNCERM    ${RNC-ID}/RNCERM-1

RNCERM: Directactivate Delete
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    RNCERM    create_object_itself=${True}
    ${ismcRNC} =    ismcRNC
    Run Keyword If    ${ismcRNC}==True    Directactivate Delete    RNCERM    ${RNC-ID}/RNCERM-1

RNCERM: Delete
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    RNCERM    create_object_itself=${True}
    ${ismcRNC} =    ismcRNC
    Run Keyword If    ${ismcRNC}==True    Delete Plan    RNCERM    ${RNC-ID}/RNCERM-1

RNCERM: create delete cRNC
    [Documentation]    This object exists in mcRNC only
    [Tags]    ready-for-a-team-jenkins    nightly-test
    ${ismcRNC} =    ismcRNC
    Run Keyword If    ${ismcRNC}==False    Invalid Create Delete Plan    RNCERM

RNCERM: directactivate cRNC
    [Documentation]    This object exists in mcRNC only
    [Tags]    ready-for-a-team-jenkins    nightly-test
    ${ismcRNC} =    ismcRNC
    Run Keyword If    ${ismcRNC}==False    Invalid Directactivate Plan    RNCERM

RNCERM: modification not needed (DA)
    [Documentation]    Tests that RAYMAN notices that RNCERM object was is not changed
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    RNCERM    create_object_itself=${False}
    ${ismcRNC} =    ismcRNC
    Run Keyword If    ${ismcRNC}==True    Modification Not Needed (DA)    RNCERM

WSMLC: Create Upload and Compare with the original upload plan
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    WSMLC    ${False}
    Create Upload and Compare With Original    WSMLC    ${RNC-ID}/WSMLC-1

WSMLC: Directactivate create
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    WSMLC    ${False}
    Directactivate Full    WSMLC    ${RNC-ID}/WSMLC-1

WSMLC: Directactivate modify
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    WSMLC    create_object_itself=${True}
    Directactivate Modify    WSMLC    ${RNC-ID}/WSMLC-1

WSMLC: Directactivate delete
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    WSMLC    create_object_itself=${True}
    Directactivate delete    WSMLC    ${RNC-ID}/WSMLC-1

WSMLC: Feature Not Enabled (Download)
    [Documentation]    Test that RAYMAN skips the whole object object when feature opt_type_t_lcs_in_use_c (1) is not enabled
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    WSMLC    create_object_itself=${False}
    ${featureList} =    Create List    1
    Feature Not Enabled (Download)    WSMLC    ${featureList}    ${RNC-ID}/DN:WSMLC-1\ \ -> 16056 - WSMLC CREATION SKIPPED: NEEDED OPTION NOT SUPPORTED: LCS
    [Teardown]    License Check Teardown

WSMLC: Feature Not Enabled (DA)
    [Documentation]    Test that RAYMAN skips the whole object object when feature opt_type_t_lcs_in_use_c (1) is not enabled
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    WSMLC    create_object_itself=${False}
    ${featureList} =    Create List    1
    Feature Not Enabled (DA)    WSMLC    ${featureList}    WSMLC CREATION SKIPPED: NEEDED OPTION NOT SUPPORTED: LCS
    [Teardown]    License Check Teardown

WSMLC: Feature Not Enabled (Upload)
    [Documentation]    Test that RAYMAN skips the whole object object in upload when the feature is not enabled
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    WSMLC    create_object_itself=${True}
    ${featureList} =    Create List    1
    Feature Not Enabled (Upload)    WSMLC    ${featureList}
    [Teardown]    License Check Teardown

WSMLC: modification not needed (DA)
    [Documentation]    Tests that RAYMAN notices that WSMLC object was is not changed
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    WSMLC    create_object_itself=${False}
    Modification Not Needed (DA)    WSMLC

WAC: Create Upload and Compare with the original upload plan
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    WAC    ${False}
    Create Upload and Compare With Original    WAC    ${RNC-ID}/WAC-1

WAC: Modify Upload and Compare
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    WAC    ${True}
    Download Upload Compare    WAC    ${RNC-ID}/WAC-1

WAC: Download full
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    WAC    ${False}
    Download Upload Compare    WAC    ${RNC-ID}/WAC-1

WAC: Directactivate create
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    WAC    ${False}
    Directactivate Full    WAC    ${RNC-ID}/WAC-1

WAC: Delete
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    WAC    ${True}
    Delete Plan    WAC    ${RNC-ID}/WAC-1

WAC: Directactivate modify
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    WAC    create_object_itself=${True}
    Directactivate Modify    WAC    ${RNC-ID}/WAC-1

WAC: Directactivate delete
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    WAC    create_object_itself=${True}
    Directactivate delete    WAC    ${RNC-ID}/WAC-1

WAC: modification not needed (DA)
    [Documentation]    Tests that RAYMAN notices that WAC object was is not changed
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    WAC    create_object_itself=${False}
    Modification Not Needed (DA)    WAC

WRAB: Create Upload and Compare with the original upload plan
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    WRAB    ${False}
    Create Upload and Compare With Original    WRAB    ${RNC-ID}/WRAB-1

WRAB: Directactivate create
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    WRAB    ${False}
    Directactivate Full    WRAB    ${RNC-ID}/WRAB-1

WRAB: Directactivate modify
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    WRAB    create_object_itself=${True}
    Directactivate Modify    WRAB    ${RNC-ID}/WRAB-1

WRAB: Directactivate delete
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    WRAB    create_object_itself=${True}
    Directactivate delete    WRAB    ${RNC-ID}/WRAB-1

WRAB: modification not needed (DA)
    [Documentation]    Tests that RAYMAN notices that WRAB object was is not changed
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    WRAB    create_object_itself=${False}
    Modification Not Needed (DA)    WRAB

IUO: Create Upload and Compare with the original upload plan
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    IUO    ${False}
    Create Upload and Compare With Original    IUO    ${RNC-ID}/IUO-1

IUO: Directactivate Create
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    IUO    ${False}
    Directactivate Full    IUO    ${RNC-ID}/IUO-1

IUO: Directactivate Modify
    [Tags]    ready-for-a-team-jenkins
    [Setup]    create_base_config_for_object    IUO    ${True}
    Directactivate Modify    IUO    ${RNC-ID}/IUO-1

IUO: Directactivate Delete
    [Tags]    ready-for-a-team-jenkins
    [Setup]    create_base_config_for_object    IUO    create_object_itself=${True}
    Directactivate delete    IUO    ${RNC-ID}/IUO-1

IUO: modification not needed (DA)
    [Documentation]    Tests that RAYMAN notices that IUO object was is not changed
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    IUO    create_object_itself=${False}
    Modification Not Needed (DA)    IUO

BKPRNC: Create Upload and Compare with the original upload plan
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    BKPRNC    create_object_itself=${False}
    ${ismcRNC} =    ismcRNC
    Run Keyword If    ${ismcRNC}==False    Create Upload and Compare With Original    BKPRNC    ${RNC-ID}/BKP${RNC-ID}

BKPRNC: Modify Upload and Compare
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    BKPRNC    create_object_itself=${True}
    ${ismcRNC} =    ismcRNC
    Run Keyword If    ${ismcRNC}==False    Download Upload Compare    BKPRNC    ${RNC-ID}/BKP${RNC-ID}

BKPRNC: Download full
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    BKPRNC    create_object_itself=${False}
    ${ismcRNC} =    ismcRNC
    Run Keyword If    ${ismcRNC}==False    Download Upload Compare    BKPRNC    ${RNC-ID}/BKP${RNC-ID}

BKPRNC: Directactivate Create
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    BKPRNC    create_object_itself=${False}
    ${ismcRNC} =    ismcRNC
    Run Keyword If    ${ismcRNC}==False    Directactivate Full    BKPRNC    ${RNC-ID}/BKP${RNC-ID}

BKPRNC: Directactivate Modify
    [Tags]    ready-for-a-team-jenkins
    [Setup]    create_base_config_for_object    BKPRNC    create_object_itself=${True}
    ${ismcRNC} =    ismcRNC
    Run Keyword If    ${ismcRNC}==False    Directactivate Modify    BKPRNC    ${RNC-ID}/BKP${RNC-ID}

BKPRNC: Directactivate Delete
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    BKPRNC    create_object_itself=${True}
    ${ismcRNC} =    ismcRNC
    Run Keyword If    ${ismcRNC}==False    Directactivate Delete    BKPRNC    ${RNC-ID}/BKP${RNC-ID}

BKPRNC: Delete
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    BKPRNC    create_object_itself=${True}
    ${ismcRNC} =    ismcRNC
    Run Keyword If    ${ismcRNC}==False    Delete Plan    BKPRNC    ${RNC-ID}/BKP${RNC-ID}

BKPRNC: create delete mcRNC
    [Documentation]    This object exists in mcRNC only
    [Tags]    ready-for-a-team-jenkins    nightly-test    obsolete
    [Setup]    create_base_config_for_object    BKPRNC    create_object_itself=${False}
    ${ismcRNC} =    ismcRNC
    Run Keyword If    ${ismcRNC}==True    Invalid Create Delete Plan    BKPRNC

BKPRNC: directactivate mcRNC
    [Documentation]    This object exists in mcRNC only
    [Tags]    ready-for-a-team-jenkins    nightly-test    obsolete
    [Setup]    create_base_config_for_object    BKPRNC    create_object_itself=${False}
    ${ismcRNC} =    ismcRNC
    Run Keyword If    ${ismcRNC}==True    Invalid Directactivate Plan    BKPRNC

BKPRNC: Feature Not Enabled (Download)
    [Documentation]    Test that RAYMAN skips the whole object object when the feature is not enabled
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    BKPRNC    create_object_itself=${True}
    ${ismcRNC} =    ismcRNC
    ${featureList} =    Create List    146
    Run Keyword If    ${ismcRNC}==False    Feature Not Enabled (Download)    BKPRNC    ${featureList}    BKPRNC CREATION SKIPPED: NEEDED OPTION NOT SUPPORTED: RNC Resiliency
    [Teardown]    License Check Teardown

BKPRNC: Feature Not Enabled (DA)
    [Documentation]    Test that RAYMAN skips the whole object object when the feature is not enabled
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    BKPRNC    create_object_itself=${True}
    ${ismcRNC} =    ismcRNC
    ${featureList} =    Create List    146
    Run Keyword If    ${ismcRNC}==False    Feature Not Enabled (DA)    BKPRNC    ${featureList}    BKPRNC CREATION SKIPPED: NEEDED OPTION NOT SUPPORTED: RNC Resiliency
    [Teardown]    License Check Teardown

BKPRNC: Feature Not Enabled (Upload)
    [Documentation]    Test that RAYMAN skips the whole object object in upload when the feature is not enabled
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    BKPRNC    create_object_itself=${True}
    ${ismcRNC} =    ismcRNC
    ${featureList} =    Create List    146
    Run Keyword If    ${ismcRNC}==False    Feature Not Enabled (Upload)    BKPRNC    ${featureList}
    [Teardown]    License Check Teardown

BKPRNC: modification not needed (DA)
    [Documentation]    Tests that RAYMAN notices that BKPRNC object was is not changed
    [Tags]    ready-for-a-team-jenkins
    [Setup]    create_base_config_for_object    BKPRNC    create_object_itself=${True}
    ${ismcRNC} =    ismcRNC
    Run Keyword If    ${ismcRNC}==False    Modification Not Needed (DA)    BKPRNC

IPNB: Create Upload and Compare with the original upload plan
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    IPNB    create_object_itself=${False}
    # New parameters which were not implemented with old code
    # XXX these should be tested, values returned may not be correct
    ${ignored_params_list}=    Create List    NBAPCSPUIndex    NBAPEIPUIndex    NBAPQNIUBIndex    CNBAPICSUIndex    DNBAPICSUIndex
    Create Upload and Compare With Original    IPNB    ${RNC-ID}/IPNB-1    ignored_params=${ignored_params_list}

IPNB: Directactivate Create
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    IPNB    create_object_itself=${False}
    Directactivate Full    IPNB    ${RNC-ID}/IPNB-1

IPNB: Directactivate Modify
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    IPNB    create_object_itself=${True}
    Directactivate Modify    IPNB    ${RNC-ID}/IPNB-1    different_plans=${True}

IPNB: Directactivate Delete
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    IPNB    create_object_itself=${True}
    Directactivate Delete    IPNB    ${RNC-ID}/IPNB-1

IPNB: Feature Not Enabled (Download)
    [Documentation]    Test that RAYMAN skips the whole object object when the feature is not enabled
    [Tags]    ready-for-a-team-jenkins    nightly-test    Fails-with-org    # because of a different feedback message
    [Setup]    create_base_config_for_object    IPNB    create_object_itself=${True}
    ${featureList} =    Create List    75
    # This is the output with org version: IPNB CREATION SKIPPED: NEEDED OPTION NOT SUPPORTED: IP based
    Feature Not Enabled (Download)    IPNB    ${featureList}    IPNB CREATION SKIPPED: NEEDED OPTION NOT SUPPORTED: IP Based
    [Teardown]    License Check Teardown

IPNB: Feature Not Enabled (DA)
    [Documentation]    Test that RAYMAN skips the whole object object when the feature is not enabled
    [Tags]    ready-for-a-team-jenkins    nightly-test    Fails-with-org    # because of a different feedback message
    [Setup]    create_base_config_for_object    IPNB    create_object_itself=${True}
    ${featureList} =    Create List    75
    # This is the output with org version: IPNB CREATION SKIPPED: NEEDED OPTION NOT SUPPORTED: IP based
    Feature Not Enabled (DA)    IPNB    ${featureList}    IPNB CREATION SKIPPED: NEEDED OPTION NOT SUPPORTED: IP Based
    [Teardown]    License Check Teardown

IPNB: Feature Not Enabled (Upload)
    [Documentation]    Test that RAYMAN skips the whole object object in upload when the feature is not enabled
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    IPNB    create_object_itself=${True}
    ${featureList} =    Create List    75
    Feature Not Enabled (Upload)    IPNB    ${featureList}
    [Teardown]    License Check Teardown

IPNB: modification not needed (DA)
    [Documentation]    Tests that RAYMAN notices that IPNB object was is not changed
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    IPNB    create_object_itself=${False}
    Modification Not Needed (DA)    IPNB    different_plans=${True}

IPQM: Create Upload and Compare with the original upload plan
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    IPQM    create_object_itself=${False}
    Create Upload and Compare With Original    IPQM    ${RNC-ID}/IPQM-1

IPQM: Directactivate Create
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    IPQM    create_object_itself=${False}
    Directactivate Full    IPQM    ${RNC-ID}/IPQM-1

IPQM: Directactivate Modify
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    IPQM    create_object_itself=${True}
    Directactivate Modify    IPQM    ${RNC-ID}/IPQM-1

IPQM: Directactivate Delete
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    IPQM    create_object_itself=${True}
    Directactivate Delete    IPQM    ${RNC-ID}/IPQM-1

IPQM: modification not needed (DA)
    [Documentation]    Tests that RAYMAN notices that IPQM object was is not changed
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    IPQM    create_object_itself=${False}
    Modification Not Needed (DA)    IPQM

TQM: Create Upload and Compare with the original upload plan
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    TQM    create_object_itself=${False}
    Create Upload and Compare With Original    TQM    ${RNC-ID}/TQM-1

TQM: Directactivate Create
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    TQM    create_object_itself=${False}
    Directactivate Full    TQM    ${RNC-ID}/TQM-1

TQM: Directactivate Modify
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    TQM    create_object_itself=${True}
    Directactivate Modify    TQM    ${RNC-ID}/TQM-1    different_plans=${True}

TQM: Directactivate Delete
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    TQM    create_object_itself=${True}
    Directactivate Delete    TQM    ${RNC-ID}/TQM-1

TQM: Feature Not Enabled (Download)
    [Documentation]    Test that RAYMAN skips the whole TQM object when the feature is not enabled
    [Tags]    ready-for-a-team-jenkins    nightly-test    Fails-with-org    # because of a different feedback message
    [Setup]    create_base_config_for_object    TQM    create_object_itself=${True}
    ${featureList} =    Create List    81
    # This is the output with org: TQM CREATION SKIPPED: NEEDED OPTION NOT SUPPORTED: IP based
    Feature Not Enabled (Download)    TQM    ${featureList}    TQM CREATION SKIPPED: NEEDED OPTION NOT SUPPORTED: Iub Transport QoS
    [Teardown]    License Check Teardown

TQM: Feature Not Enabled (DA)
    [Documentation]    Test that RAYMAN skips the whole object object when the feature is not enabled
    [Tags]    ready-for-a-team-jenkins    nightly-test    Fails-with-org    # because of a different feedback message
    [Setup]    create_base_config_for_object    TQM    create_object_itself=${True}
    ${featureList} =    Create List    81
    # This is the output with org: TQM CREATION SKIPPED: NEEDED OPTION NOT SUPPORTED: IP based
    Feature Not Enabled (DA)    TQM    ${featureList}    TQM CREATION SKIPPED: NEEDED OPTION NOT SUPPORTED: Iub Transport QoS
    [Teardown]    License Check Teardown

TQM: Feature Not Enabled (Upload)
    [Documentation]    Test that RAYMAN skips the whole object object in upload when the feature is not enabled
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    TQM    create_object_itself=${True}
    ${featureList} =    Create List    81
    Feature Not Enabled (Upload)    TQM    ${featureList}
    [Teardown]    License Check Teardown

TQM: modification not needed (DA)
    [Documentation]    Tests that RAYMAN notices that TQM object was is not changed
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    TQM    create_object_itself=${False}
    Modification Not Needed (DA)    TQM    different_plans=${True}

IUCS: Create Upload and Compare with the original upload plan
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    IUCS    create_object_itself=${False}
    Create Upload and Compare With Original    IUCS    ${RNC-ID}/IUCS-1

IUCS: Directactivate Create
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    IUCS    create_object_itself=${False}
    Directactivate Full    IUCS    ${RNC-ID}/IUCS-1

IUCS: Directactivate Modify
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    IUCS    create_object_itself=${True}
    Directactivate Modify    IUCS    ${RNC-ID}/IUCS-1

IUCS: Directactivate Delete
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    IUCS    create_object_itself=${True}
    Directactivate Delete    IUCS    ${RNC-ID}/IUCS-1

IUCS: modification not needed (DA)
    [Documentation]    Tests that RAYMAN notices that IUCS object was is not changed
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    IUCS    create_object_itself=${False}
    Modification Not Needed (DA)    IUCS

IUPS: Create Upload and Compare with the original upload plan
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    IUPS    create_object_itself=${False}
    Create Upload and Compare With Original    IUPS    ${RNC-ID}/IUPS-1

IUPS: Directactivate Create
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    IUPS    create_object_itself=${False}
    Directactivate Full    IUPS    ${RNC-ID}/IUPS-1

IUPS: Directactivate Modify
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    IUPS    create_object_itself=${True}
    Directactivate Modify    IUPS    ${RNC-ID}/IUPS-1

IUPS: Directactivate Delete
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    IUPS    create_object_itself=${True}
    Directactivate Delete    IUPS    ${RNC-ID}/IUPS-1

IUPS: modification not needed (DA)
    [Documentation]    Tests that RAYMAN notices that IUPS object was is not changed
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    IUPS    create_object_itself=${False}
    Modification Not Needed (DA)    IUPS

IUCSIP: Create Upload and Compare with the original upload plan
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    IUCSIP    create_object_itself=${False}
    Create Upload and Compare With Original    IUCSIP    ${RNC-ID}/IUCS-1/IUCSIP-1

IUCSIP: Directactivate Create
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    IUCSIP    create_object_itself=${False}
    Directactivate Full    IUCSIP    ${RNC-ID}/IUCS-1/IUCSIP-1

IUCSIP: Directactivate Modify
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    IUCSIP    create_object_itself=${True}
    Directactivate Modify    IUCSIP    ${RNC-ID}/IUCS-1/IUCSIP-1

IUCSIP: Directactivate Delete
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    IUCSIP    create_object_itself=${True}
    Directactivate Delete    IUCSIP    ${RNC-ID}/IUCS-1/IUCSIP-1

IUCSIP: modification not needed (DA)
    [Documentation]    Tests that RAYMAN notices that IUCSIP object was is not changed
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    IUCSIP    create_object_itself=${False}
    Modification Not Needed (DA)    IUCSIP

IUCSIP: Feature Not Enabled (Download)
    [Documentation]    CRNC: Test that RAYMAN skips the whole object when the feature is not enabled mcRNC: No feature check
    [Tags]    ready-for-a-team-jenkins    nightly-test    Fails-with-org    # Old RAYMAN does not check the license
    [Setup]    create_base_config_for_object    IUCSIP    create_object_itself=${True}
    ${featureList} =    Create List    61
    ${ismcRNC} =    ismcRNC
    Run Keyword If    ${ismcRNC}==False    Feature Not Enabled (Download)    IUCSIP    ${featureList}    IUCSIP CREATION SKIPPED: NEEDED OPTION NOT SUPPORTED: IP based Iu-CS
    Run Keyword If    ${ismcRNC}==True    Feature Not Enabled (Download)    IUCSIP    ${featureList}    IUCSIP MODIFICATION SUCCESSFULLY COMPLETED
    [Teardown]    License Check Teardown

IUCSIP: Feature Not Enabled (DA)
    [Documentation]    CRNC: Test that RAYMAN skips the whole object when the feature is not enabled mcRNC: No feature check
    [Tags]    ready-for-a-team-jenkins    nightly-test    Fails-with-org    # Old RAYMAN does not check the license
    [Setup]    create_base_config_for_object    IUCSIP    create_object_itself=${False}
    ${featureList} =    Create List    61
    ${ismcRNC} =    ismcRNC
    Run Keyword If    ${ismcRNC}==False    Feature Not Enabled (DA)    IUCSIP    ${featureList}    IUCSIP CREATION SKIPPED: NEEDED OPTION NOT SUPPORTED: IP based Iu-CS
    Run Keyword If    ${ismcRNC}==True    Disable List Of Features    ${featureList}
    ${output}=    Run Keyword If    ${ismcRNC}==True    direct_activate    RNWPLAND_IUCSIP.XML    should_succeed=${true}
    Run Keyword If    ${ismcRNC}==True    Should Contain    ${output}    IUCSIP CREATION SUCCESSFULLY COMPLETED
    [Teardown]    License Check Teardown

IUCSIP: Feature Not Enabled (Upload)
    [Documentation]    CRNC: Test that RAYMAN skips the whole object when the feature is not enabled mcRNC: No feature check
    [Tags]    ready-for-a-team-jenkins    nightly-test    Fails-with-org    # Old RAYMAN does not check the license
    [Setup]    create_base_config_for_object    IUCSIP    create_object_itself=${True}
    ${featureList} =    Create List    61
    ${ismcRNC} =    ismcRNC
    Run Keyword If    ${ismcRNC}==False    Feature Not Enabled (Upload)    IUCSIP    ${featureList}
    Run Keyword If    ${ismcRNC}==True    Disable List Of Features    ${featureList}
    ${ul_xml} =    Run Keyword If    ${ismcRNC}==True    upload_plan
    Run Keyword If    ${ismcRNC}==True    Should Contain    ${ul_xml}    IUCSIP
    [Teardown]    License Check Teardown

IUPSIP: Create Upload and Compare with the original upload plan
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    IUPSIP    create_object_itself=${False}
    Create Upload and Compare With Original    IUPSIP    ${RNC-ID}/IUPS-1/IUPSIP-1

IUPSIP: Directactivate Create
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    IUPSIP    create_object_itself=${False}
    Directactivate Full    IUPSIP    ${RNC-ID}/IUPS-1/IUPSIP-1

IUPSIP: Directactivate Modify
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    IUPSIP    create_object_itself=${True}
    Directactivate Modify    IUPSIP    ${RNC-ID}/IUPS-1/IUPSIP-1

IUPSIP: Directactivate Delete
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    IUPSIP    create_object_itself=${True}
    Directactivate Delete    IUPSIP    ${RNC-ID}/IUPS-1/IUPSIP-1

IUPSIP: modification not needed (DA)
    [Documentation]    Tests that RAYMAN notices that IUPSIP object was is not changed
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    IUPSIP    create_object_itself=${False}
    Modification Not Needed (DA)    IUPSIP

IUPS IUPSIP: Download Full
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    IUPS    create_object_itself=${False}
    ${obj_plan_file_list}=    Create List    RNWPLAND_IUPS.XML    RNWPLAND_IUPSIP.XML
    ${dist_names_dict}=    combine_plans    ${obj_plan_file_list}    test_plan.xml    ${CURDIR}${/}test_files
    upload_a_file    test_plan.xml
    Download Upload Compare Multiple Objects    test_plan.xml    ${dist_names_dict}

IUPS IUPSIP: Modify Upload and Compare
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    IUPSIP    create_object_itself=${True}
    ${obj_plan_file_list}=    Create List    RNWPLAND_IUPS.XML    RNWPLAND_IUPSIP.XML
    ${dist_names_dict}=    combine_plans    ${obj_plan_file_list}    test_plan.xml    ${CURDIR}${/}test_files
    upload_a_file    test_plan.xml
    Download Upload Compare Multiple Objects    test_plan.xml    ${dist_names_dict}

IUPS IUPSIP: Delete
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    IUPSIP    create_object_itself=${True}
    ${obj_plan_file_list}=    Create List    RNWPLAND_IUPS_delete.XML    RNWPLAND_IUPSIP_delete.XML
    ${dist_names_dict}=    combine_plans    ${obj_plan_file_list}    test_plan.xml    ${CURDIR}${/}test_files
    upload_a_file    test_plan.xml
    Delete Plan Multiple Objects    test_plan.xml    ${dist_names_dict}

IUCS IUCSIP: Download Full
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    IUCS    create_object_itself=${False}
    ${obj_plan_file_list}=    Create List    RNWPLAND_IUCS.XML    RNWPLAND_IUCSIP.XML
    ${dist_names_dict}=    combine_plans    ${obj_plan_file_list}    test_plan.xml    ${CURDIR}${/}test_files
    upload_a_file    test_plan.xml
    Download Upload Compare Multiple Objects    test_plan.xml    ${dist_names_dict}

IUCS IUCSIP: Modify Upload and Compare
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    IUCSIP    create_object_itself=${True}
    ${obj_plan_file_list}=    Create List    RNWPLAND_IUCS.XML    RNWPLAND_IUCSIP.XML
    ${dist_names_dict}=    combine_plans    ${obj_plan_file_list}    test_plan.xml    ${CURDIR}${/}test_files
    upload_a_file    test_plan.xml
    Download Upload Compare Multiple Objects    test_plan.xml    ${dist_names_dict}

IUCS IUCSIP: Delete
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    IUCSIP    create_object_itself=${True}
    ${obj_plan_file_list}=    Create List    RNWPLAND_IUCS_delete.XML    RNWPLAND_IUCSIP_delete.XML
    ${dist_names_dict}=    combine_plans    ${obj_plan_file_list}    test_plan.xml    ${CURDIR}${/}test_files
    upload_a_file    test_plan.xml
    Delete Plan Multiple Objects    test_plan.xml    ${dist_names_dict}

HOPS: Create Upload and Compare with the original upload plan
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    HOPS    create_object_itself=${False}
    Create Upload and Compare With Original    HOPS    ${RNC-ID}/HOPS-1

HOPS: Directactivate Create
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    HOPS    create_object_itself=${False}
    Directactivate Full    HOPS    ${RNC-ID}/HOPS-1

HOPS: Directactivate Modify
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    HOPS    create_object_itself=${True}
    Directactivate Modify    HOPS    ${RNC-ID}/HOPS-1

HOPS: Directactivate Delete
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    HOPS    create_object_itself=${True}
    Directactivate Delete    HOPS    ${RNC-ID}/HOPS-1

HOPS: modification not needed (DA)
    [Documentation]    Tests that RAYMAN notices that HOPS object was is not changed
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    HOPS    create_object_itself=${False}
    Modification Not Needed (DA)    HOPS

HOPL: Create Upload and Compare with the original upload plan
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    HOPL    create_object_itself=${False}
    Create Upload and Compare With Original    HOPL    ${RNC-ID}/HOPL-1

HOPL: Directactivate Create
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    HOPL    create_object_itself=${False}
    Directactivate Full    HOPL    ${RNC-ID}/HOPL-1

HOPL: Directactivate Modify
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    HOPL    create_object_itself=${True}
    Directactivate Modify    HOPL    ${RNC-ID}/HOPL-1

HOPL: Directactivate Delete
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    HOPL    create_object_itself=${True}
    Directactivate Delete    HOPL    ${RNC-ID}/HOPL-1

HOPL: Feature Not Enabled (Download)
    [Documentation]    Test that RAYMAN skips the whole object object when the feature is not enabled
    [Tags]    ready-for-a-team-jenkins    nightly-test    Fails-with-org    # because of a different feedback message
    [Setup]    create_base_config_for_object    HOPL    create_object_itself=${True}
    ${featureList} =    Create List    107
    # This is the output with org: HOPL CREATION SKIPPED: NEEDED OPTION NOT SUPPORTED: LTE_CELL_RESELECT
    Feature Not Enabled (Download)    HOPL    ${featureList}    HOPL CREATION SKIPPED: NEEDED OPTION NOT SUPPORTED: LTE Interworking-Cell Reselection to LTE
    [Teardown]    License Check Teardown

HOPL: Feature Not Enabled (DA)
    [Documentation]    Test that RAYMAN skips the whole object object when the feature is not enabled
    [Tags]    ready-for-a-team-jenkins    nightly-test    Fails-with-org    # because of a different feedback message
    [Setup]    create_base_config_for_object    HOPL    create_object_itself=${True}
    ${featureList} =    Create List    107
    # This is the output with org: HOPL CREATION SKIPPED: NEEDED OPTION NOT SUPPORTED: LTE_INTER
    Feature Not Enabled (DA)    HOPL    ${featureList}    HOPL CREATION SKIPPED: NEEDED OPTION NOT SUPPORTED: LTE Interworking-Cell Reselection to LTE
    [Teardown]    License Check Teardown

HOPL: Feature Not Enabled (Upload)
    [Documentation]    Test that RAYMAN skips the whole object object in upload when the feature is not enabled
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    HOPL    create_object_itself=${True}
    ${featureList} =    Create List    107
    Feature Not Enabled (Upload)    HOPL    ${featureList}
    [Teardown]    License Check Teardown

HOPL: modification not needed (DA)
    [Documentation]    Tests that RAYMAN notices that HOPL object was is not changed
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    HOPL    create_object_itself=${False}
    Modification Not Needed (DA)    HOPL

HOPI: Create Upload and Compare with the original upload plan
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    HOPI    create_object_itself=${False}
    Create Upload and Compare With Original    HOPI    ${RNC-ID}/HOPI-1

HOPI: Directactivate Create
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    HOPI    create_object_itself=${False}
    Directactivate Full    HOPI    ${RNC-ID}/HOPI-1

HOPI: Directactivate Modify
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    HOPI    create_object_itself=${True}
    Directactivate Modify    HOPI    ${RNC-ID}/HOPI-1    different_plans=${True}

HOPI: Directactivate Delete
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    HOPI    create_object_itself=${True}
    Directactivate Delete    HOPI    ${RNC-ID}/HOPI-1

HOPI: modification not needed (DA)
    [Documentation]    Tests that RAYMAN notices that HOPI object was is not changed
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    HOPI    create_object_itself=${False}
    Modification Not Needed (DA)    HOPI    different_plans=${True}

HOPG: Create Upload and Compare with the original upload plan
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    HOPG    create_object_itself=${False}
    Create Upload and Compare With Original    HOPG    ${RNC-ID}/HOPG-1

HOPG: Directactivate Create
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    HOPG    create_object_itself=${False}
    Directactivate Full    HOPG    ${RNC-ID}/HOPG-1

HOPG: Directactivate Modify
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    HOPG    create_object_itself=${True}
    Directactivate Modify    HOPG    ${RNC-ID}/HOPG-1    different_plans=${True}

HOPG: Directactivate Delete
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    HOPG    create_object_itself=${True}
    Directactivate Delete    HOPG    ${RNC-ID}/HOPG-1

HOPG: Feature Not Enabled (Download)
    [Documentation]    Test that RAYMAN skips the whole object object when the feature is not enabled
    [Tags]    ready-for-a-team-jenkins    nightly-test    Fails-with-org    # because of a different feedback message
    [Setup]    create_base_config_for_object    HOPG    create_object_itself=${True}
    ${featureList} =    Create List    0
    # This is the output with org: HOPG CREATION SKIPPED: NEEDED OPTION NOT SUPPORTED: GSM_ISHO
    Feature Not Enabled (Download)    HOPG    ${featureList}    HOPG CREATION SKIPPED: NEEDED OPTION NOT SUPPORTED: WCDMA - GSM Inter-system Handover
    [Teardown]    License Check Teardown

HOPG: Feature Not Enabled (DA)
    [Documentation]    Test that RAYMAN skips the whole object object when the feature is not enabled
    [Tags]    ready-for-a-team-jenkins    nightly-test    Fails-with-org    # because of a different feedback message
    [Setup]    create_base_config_for_object    HOPG    create_object_itself=${True}
    ${featureList} =    Create List    0
    # This is the output with org: HOPG CREATION SKIPPED: NEEDED OPTION NOT SUPPORTED: GSM_ISHO
    Feature Not Enabled (DA)    HOPG    ${featureList}    HOPG CREATION SKIPPED: NEEDED OPTION NOT SUPPORTED: WCDMA - GSM Inter-system Handover
    [Teardown]    License Check Teardown

HOPG: Feature Not Enabled (Upload)
    [Documentation]    Test that RAYMAN skips the whole object object in upload when the feature is not enabled
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    HOPG    create_object_itself=${True}
    ${featureList} =    Create List    0
    Feature Not Enabled (Upload)    HOPG    ${featureList}
    [Teardown]    License Check Teardown

HOPG: modification not needed (DA)
    [Documentation]    Tests that RAYMAN notices that HOPG object was is not changed
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    HOPG    create_object_itself=${False}
    Modification Not Needed (DA)    HOPG    different_plans=${True}

HOPx: Download Full
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    Run Keywords    create_base_config_for_object    HOPS    create_object_itself=${False}    AND    create_base_config_for_object
    ...    HOPI    create_object_itself=${False}    AND    create_base_config_for_object    HOPG    create_object_itself=${False}
    ...    AND    create_base_config_for_object    HOPL    create_object_itself=${False}
    ${obj_plan_file_list}=    Create List    RNWPLAND_HOPS.XML    RNWPLAND_HOPI.XML    RNWPLAND_HOPG.XML    RNWPLAND_HOPL.XML
    ${dist_names_dict}=    combine_plans    ${obj_plan_file_list}    test_plan.xml    ${CURDIR}${/}test_files
    upload_a_file    test_plan.xml
    Download Upload Compare Multiple Objects    test_plan.xml    ${dist_names_dict}

HOPx: Modify Upload and Compare
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    Run Keywords    create_base_config_for_object    HOPS    create_object_itself=${True}    AND    create_base_config_for_object
    ...    HOPI    create_object_itself=${True}    AND    create_base_config_for_object    HOPG    create_object_itself=${True}
    ...    AND    create_base_config_for_object    HOPL    create_object_itself=${True}
    ${obj_plan_file_list}=    Create List    RNWPLAND_HOPS.XML    RNWPLAND_HOPI.XML    RNWPLAND_HOPG.XML    RNWPLAND_HOPL.XML
    ${dist_names_dict}=    combine_plans    ${obj_plan_file_list}    test_plan.xml    ${CURDIR}${/}test_files
    upload_a_file    test_plan.xml
    Download Upload Compare Multiple Objects    test_plan.xml    ${dist_names_dict}

HOPx: Delete
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    Run Keywords    create_base_config_for_object    HOPS    create_object_itself=${True}    AND    create_base_config_for_object
    ...    HOPI    create_object_itself=${True}    AND    create_base_config_for_object    HOPG    create_object_itself=${True}
    ...    AND    create_base_config_for_object    HOPL    create_object_itself=${True}
    ${obj_plan_file_list}=    Create List    RNWPLAND_HOPS_delete.XML    RNWPLAND_HOPI_delete.XML    RNWPLAND_HOPG_delete.XML    RNWPLAND_HOPL_delete.XML
    ${dist_names_dict}=    combine_plans    ${obj_plan_file_list}    test_plan.xml    ${CURDIR}${/}test_files
    upload_a_file    test_plan.xml
    Delete Plan Multiple Objects    test_plan.xml    ${dist_names_dict}

FMCG: Create Upload and Compare with the original upload plan
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    FMCG    create_object_itself=${False}
    Create Upload and Compare With Original    FMCG    ${RNC-ID}/FMCG-1

FMCG: Directactivate Create
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    FMCG    create_object_itself=${False}
    Directactivate Full    FMCG    ${RNC-ID}/FMCG-1

FMCG: Directactivate Modify
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    FMCG    create_object_itself=${True}
    Directactivate Modify    FMCG    ${RNC-ID}/FMCG-1

FMCG: Directactivate Delete
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    FMCG    create_object_itself=${True}
    Directactivate Delete    FMCG    ${RNC-ID}/FMCG-1

FMCG: Feature Not Enabled (Download)
    [Documentation]    Test that RAYMAN skips the whole object object when the feature is not enabled
    [Tags]    ready-for-a-team-jenkins    nightly-test    Fails-with-org    # because of a different feedback message
    [Setup]    create_base_config_for_object    FMCG    create_object_itself=${True}
    ${featureList} =    Create List    0
    # This is the output with org: FMCG CREATION SKIPPED: NEEDED OPTION NOT SUPPORTED: GSM_ISHO
    Feature Not Enabled (Download)    FMCG    ${featureList}    FMCG CREATION SKIPPED: NEEDED OPTION NOT SUPPORTED: WCDMA - GSM Inter-system Handover
    [Teardown]    License Check Teardown

FMCG: Feature Not Enabled (DA)
    [Documentation]    Test that RAYMAN skips the whole object object when the feature is not enabled
    [Tags]    ready-for-a-team-jenkins    nightly-test    Fails-with-org    # because of a different feedback message
    [Setup]    create_base_config_for_object    FMCG    create_object_itself=${True}
    ${featureList} =    Create List    0
    Feature Not Enabled (DA)    FMCG    ${featureList}    FMCG CREATION SKIPPED: NEEDED OPTION NOT SUPPORTED: WCDMA - GSM Inter-system Handover
    [Teardown]    License Check Teardown

FMCG: Feature Not Enabled (Upload)
    [Documentation]    Test that RAYMAN skips the whole object object in upload when the feature is not enabled
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    FMCG    create_object_itself=${True}
    ${featureList} =    Create List    0
    Feature Not Enabled (Upload)    FMCG    ${featureList}
    [Teardown]    License Check Teardown

FMCG: modification not needed (DA)
    [Documentation]    Tests that RAYMAN notices that FMCG object was is not changed
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    FMCG    create_object_itself=${False}
    Modification Not Needed (DA)    FMCG

FMCI: Create Upload and Compare with the original upload plan
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    FMCI    create_object_itself=${False}
    Create Upload and Compare With Original    FMCI    ${RNC-ID}/FMCI-1

FMCI: Directactivate Create
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    FMCI    create_object_itself=${False}
    Directactivate Full    FMCI    ${RNC-ID}/FMCI-1

FMCI: Directactivate Modify
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    FMCI    create_object_itself=${True}
    Directactivate Modify    FMCI    ${RNC-ID}/FMCI-1

FMCI: Directactivate Delete
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    FMCI    create_object_itself=${True}
    Directactivate Delete    FMCI    ${RNC-ID}/FMCI-1

FMCI: modification not needed (DA)
    [Documentation]    Tests that RAYMAN notices that FMCI object was is not changed
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    FMCI    create_object_itself=${False}
    Modification Not Needed (DA)    FMCI

FMCL: Create Upload and Compare with the original upload plan
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    FMCL    create_object_itself=${False}
    Create Upload and Compare With Original    FMCL    ${RNC-ID}/FMCL-1

FMCL: Directactivate Create
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    FMCL    create_object_itself=${False}
    Directactivate Full    FMCL    ${RNC-ID}/FMCL-1

FMCL: Directactivate Modify
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    FMCL    create_object_itself=${True}
    Directactivate Modify    FMCL    ${RNC-ID}/FMCL-1

FMCL: Directactivate Delete
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    FMCL    create_object_itself=${True}
    Directactivate Delete    FMCL    ${RNC-ID}/FMCL-1

FMCL: modification not needed (DA)
    [Documentation]    Tests that RAYMAN notices that FMCL object was is not changed
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    FMCL    create_object_itself=${False}
    Modification Not Needed (DA)    FMCL

FMCx: Download Full
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    Run Keywords    create_base_config_for_object    FMCS    create_object_itself=${False}    AND    create_base_config_for_object
    ...    FMCI    create_object_itself=${False}    AND    create_base_config_for_object    FMCG    create_object_itself=${False}
    ...    AND    create_base_config_for_object    FMCL    create_object_itself=${False}
    ${obj_plan_file_list}=    Create List    RNWPLAND_FMCG.XML    RNWPLAND_FMCI.XML    RNWPLAND_FMCL.XML    RNWPLAND_FMCS.XML
    ${dist_names_dict}=    combine_plans    ${obj_plan_file_list}    test_plan.xml    ${CURDIR}${/}test_files
    upload_a_file    test_plan.xml
    Download Upload Compare Multiple Objects    test_plan.xml    ${dist_names_dict}

FMCx: Modify Upload and Compare
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    Run Keywords    create_base_config_for_object    FMCS    create_object_itself=${True}    AND    create_base_config_for_object
    ...    FMCI    create_object_itself=${True}    AND    create_base_config_for_object    FMCG    create_object_itself=${True}
    ...    AND    create_base_config_for_object    FMCL    create_object_itself=${True}
    ${obj_plan_file_list}=    Create List    RNWPLAND_FMCG.XML    RNWPLAND_FMCI.XML    RNWPLAND_FMCL.XML    RNWPLAND_FMCS.XML
    ${dist_names_dict}=    combine_plans    ${obj_plan_file_list}    test_plan.xml    ${CURDIR}${/}test_files
    upload_a_file    test_plan.xml
    Download Upload Compare Multiple Objects    test_plan.xml    ${dist_names_dict}

FMCx: Delete
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    Run Keywords    create_base_config_for_object    FMCS    create_object_itself=${True}    AND    create_base_config_for_object
    ...    FMCI    create_object_itself=${True}    AND    create_base_config_for_object    FMCG    create_object_itself=${True}
    ...    AND    create_base_config_for_object    FMCL    create_object_itself=${True}
    ${obj_plan_file_list}=    Create List    RNWPLAND_FMCG_delete.XML    RNWPLAND_FMCI_delete.XML    RNWPLAND_FMCL_delete.XML    RNWPLAND_FMCS_delete.XML
    ${dist_names_dict}=    combine_plans    ${obj_plan_file_list}    test_plan.xml    ${CURDIR}${/}test_files
    upload_a_file    test_plan.xml
    Delete Plan Multiple Objects    test_plan.xml    ${dist_names_dict}

PREBTS: Create Upload and Compare with the original upload plan
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    PREBTS    create_object_itself=${False}
    ${ismcRNC} =    ismcRNC
    Run Keyword If    ${ismcRNC}==False    Create Upload and Compare With Original    PREBTS    ${RNC-ID}/PREBTS-1

PREBTS: Modify Upload and Compare
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    PREBTS    create_object_itself=${True}
    ${ismcRNC} =    ismcRNC
    Run Keyword If    ${ismcRNC}==False    Download Upload Compare    PREBTS    ${RNC-ID}/PREBTS-1

PREBTS: Download full
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    PREBTS    create_object_itself=${False}
    ${ismcRNC} =    ismcRNC
    Run Keyword If    ${ismcRNC}==False    Download Upload Compare    PREBTS    ${RNC-ID}/PREBTS-1

PREBTS: Directactivate Create
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    PREBTS    create_object_itself=${False}
    ${ismcRNC} =    ismcRNC
    Run Keyword If    ${ismcRNC}==False    Directactivate Full    PREBTS    ${RNC-ID}/PREBTS-1

PREBTS: Directactivate Modify
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    PREBTS    create_object_itself=${True}
    ${ismcRNC} =    ismcRNC
    Run Keyword If    ${ismcRNC}==False    Directactivate Modify    PREBTS    ${RNC-ID}/PREBTS-1    different_plans=${True}

PREBTS: Directactivate Delete
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    PREBTS    create_object_itself=${True}
    ${ismcRNC} =    ismcRNC
    Run Keyword If    ${ismcRNC}==False    Directactivate Delete    PREBTS    ${RNC-ID}/PREBTS-1

PREBTS: Delete
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    PREBTS    create_object_itself=${True}
    ${ismcRNC} =    ismcRNC
    Run Keyword If    ${ismcRNC}==False    Delete Plan    PREBTS    ${RNC-ID}/PREBTS-1

PREBTS: Feature Not Enabled (Download)
    [Documentation]    Test that RAYMAN skips the whole PREBTS object when the feature is not enabled
    [Tags]    ready-for-a-team-jenkins    nightly-test    Fails-with-org    # because of a different feedback message
    [Setup]    create_base_config_for_object    PREBTS    create_object_itself=${True}
    ${ismcRNC} =    ismcRNC
    ${featureList} =    Create List    102
    # This is the output with org: PREBTS CREATION SKIPPED: NEEDED OPTION NOT SUPPORTED: BTS AutoConnection
    Run Keyword If    ${ismcRNC}==False    Feature Not Enabled (Download)    PREBTS    ${featureList}    PREBTS CREATION SKIPPED: NEEDED OPTION NOT SUPPORTED: BTS Auto Connection
    [Teardown]    License Check Teardown

PREBTS: Feature Not Enabled (DA)
    [Documentation]    Test that RAYMAN skips the whole object object when the feature is not enabled
    [Tags]    ready-for-a-team-jenkins    nightly-test    Fails-with-org    # because of a different feedback message
    [Setup]    create_base_config_for_object    PREBTS    create_object_itself=${True}
    ${ismcRNC} =    ismcRNC
    ${featureList} =    Create List    102
    # This is the output with org: PREBTS CREATION SKIPPED: NEEDED OPTION NOT SUPPORTED: BTS AutoConnection
    Run Keyword If    ${ismcRNC}==False    Feature Not Enabled (DA)    PREBTS    ${featureList}    PREBTS CREATION SKIPPED: NEEDED OPTION NOT SUPPORTED: BTS Auto Connection
    [Teardown]    License Check Teardown

PREBTS: Feature Not Enabled (Upload)
    [Documentation]    Test that RAYMAN skips the whole object object in upload when the feature is not enabled
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    PREBTS    create_object_itself=${True}
    ${ismcRNC} =    ismcRNC
    ${featureList} =    Create List    102
    Run Keyword If    ${ismcRNC}==False    Feature Not Enabled (Upload)    PREBTS    ${featureList}
    [Teardown]    License Check Teardown

PREBTS: modification not needed (DA)
    [Documentation]    Tests that RAYMAN notices that PREBTS object was is not changed
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    PREBTS    create_object_itself=${False}
    ${ismcRNC} =    ismcRNC
    Run Keyword If    ${ismcRNC}==False    Modification Not Needed (DA)    PREBTS    different_plans=${True}

PFL: Create Upload and Compare with the original upload plan
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    PFL    create_object_itself=${False}
    Create Upload and Compare With Original    PFL    ${RNC-ID}/PFL-1

PFL: Directactivate Create
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    PFL    create_object_itself=${False}
    Directactivate Full    PFL    ${RNC-ID}/PFL-1

PFL: Directactivate Modify
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    PFL    create_object_itself=${True}
    Directactivate Modify    PFL    ${RNC-ID}/PFL-1

PFL: Directactivate Delete
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    PFL    create_object_itself=${True}
    Directactivate Delete    PFL    ${RNC-ID}/PFL-1

PFL: Feature Not Enabled (Download)
    [Documentation]    Test that RAYMAN skips the whole object object when the feature is not enabled
    [Tags]    ready-for-a-team-jenkins    nightly-test    Fails-with-org    # because of a different feedback message
    [Setup]    create_base_config_for_object    PFL    create_object_itself=${True}
    ${featureList} =    Create List    111
    # This is the output with org: PFL CREATION SKIPPED: NEEDED OPTION NOT SUPPORTED: MULTI_BAND_HANDOVER
    Feature Not Enabled (Download)    PFL    ${featureList}    PFL CREATION SKIPPED: NEEDED OPTION NOT SUPPORTED: Multi-Band Load Balancing
    [Teardown]    License Check Teardown

PFL: Feature Not Enabled (DA)
    [Documentation]    Test that RAYMAN skips the whole object object when the feature is not enabled
    [Tags]    ready-for-a-team-jenkins    nightly-test    Fails-with-org    # because of a different feedback message
    [Setup]    create_base_config_for_object    PFL    create_object_itself=${True}
    ${featureList} =    Create List    111
    # This is the output with org: PFL CREATION SKIPPED: NEEDED OPTION NOT SUPPORTED: MULTI_BAND_HANDOVER
    Feature Not Enabled (DA)    PFL    ${featureList}    PFL CREATION SKIPPED: NEEDED OPTION NOT SUPPORTED: Multi-Band Load Balancing
    [Teardown]    License Check Teardown

PFL: Feature Not Enabled (Upload)
    [Documentation]    Test that RAYMAN skips the whole object object in upload when the feature is not enabled
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    PFL    create_object_itself=${True}
    ${featureList} =    Create List    111
    Feature Not Enabled (Upload)    PFL    ${featureList}
    [Teardown]    License Check Teardown

PFL: modification not needed (DA)
    [Documentation]    Tests that RAYMAN notices that PFL object was is not changed
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    PFL    create_object_itself=${False}
    Modification Not Needed (DA)    PFL

WBTS: Create Upload and Compare with the original upload plan
    [Tags]    ready-for-a-team-jenkins
    [Setup]    create_base_config_for_object    WBTS    create_object_itself=${False}
    # Ignore NEType/NBAPCommMode, which depend on the HW type (eNB/sNB, etc)
    ${ignored_params_list}=    Create List    NBAPCommMode    NEType
    Create Upload and Compare With Original    WBTS    ${RNC-ID}/WBTS-1    ${ignored_params_list}

WBTS: Modify Upload and Compare
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    WBTS    create_object_itself=${True}
    ${ignored_params_list}=    Create List    MaxBTSOMFrameSize    NESWVersion
    Download Upload Compare    WBTS    ${RNC-ID}/WBTS-1    ${ignored_params_list}

WBTS: Download full
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    WBTS    create_object_itself=${False}
    ${ignored_params_list}=    Create List    MaxBTSOMFrameSize    NESWVersion
    Download Upload Compare    WBTS    ${RNC-ID}/WBTS-1    ${ignored_params_list}

WBTS: Directactivate Create
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    WBTS    create_object_itself=${False}
    ${ignored_params_list}=    Create List    MaxBTSOMFrameSize    NESWVersion
    Directactivate Full    WBTS    ${RNC-ID}/WBTS-1    ${ignored_params_list}

WBTS: Directactivate Modify
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    WBTS    create_object_itself=${True}
    Directactivate Modify    WBTS    ${RNC-ID}/WBTS-1    different_plans=${True}

WBTS: Directactivate Delete
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    WBTS    create_object_itself=${True}
    Directactivate Delete    WBTS    ${RNC-ID}/WBTS-1

WBTS: Delete
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    WBTS    create_object_itself=${True}
    Delete Plan    WBTS    ${RNC-ID}/WBTS-1

WBTS: modification not needed (DA)
    [Documentation]    Tests that RAYMAN notices that WBTS object was is not changed
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    WBTS    create_object_itself=${False}
    Modification Not Needed (DA)    WBTS    different_plans=${True}

COCO: Create Upload and Compare with the original upload plan
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    COCO    create_object_itself=${False}
    # XXX minimal coco plan may require that coco does not exist in the DB
    ${ismcRNC} =    ismcRNC
    Run Keyword If    ${ismcRNC}==${false}    COCO_atm_interface_creation
    Run Keyword If    ${ismcRNC}==${false}    Create Upload and Compare With Original    COCO    ${RNC-ID}/COCO-1

COCO: Modify Upload and Compare
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    COCO    create_object_itself=${False}
    ${ismcRNC} =    ismcRNC
    # minimal plan cannot be activated in the test setup, because it requires the VPI/VCI release and ATM interface creation first
    Run Keyword If    ${ismcRNC}==${false}    COCO_atm_interface_creation
    Run Keyword If    ${ismcRNC}==${false}    download_plan    RNWPLAND_COCO_minimal.XML
    # these are ignored because two first are unmodifiable
    # and CDVTs are calculated by system when CalculateCDVT is enabled (which is default)
    # A2EA and path ids are set by system when GenerateAAL2Num is enabled
    ${ignored_params_list}=    Create List    CalculateCDVT    GenerateAAL2Num    VPLTPCDVT01Egr    CNBAPCDVT01Egr    CNBAPCDVT01Ing
    ...    DNBAPCDVT01Egr    DNBAPCDVT01Ing    AAL2SigCDVT01Egr    AAL2SigCDVT01Ing    AAL2UPCDVT01Egr    AAL2UPCDVT01Ing
    ...    CNBAPPartialPacketDiscard    AAL2SigPartialPacketDiscard    AAL2PathId    COCOA2EA
    Run Keyword If    ${ismcRNC}==${false}    create_atm_interface_if_needed
    Run Keyword If    ${ismcRNC}==${false}    Download Upload Compare    COCO    ${RNC-ID}/COCO-1    ${ignored_params_list}

COCO: Download full
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    COCO    create_object_itself=${False}
    ${ismcRNC} =    ismcRNC
    Run Keyword If    ${ismcRNC}==${false}    COCO_atm_interface_creation
    Run Keyword If    ${ismcRNC}==${false}    Download Upload Compare    COCO    ${RNC-ID}/COCO-1

COCO: Directactivate create
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    COCO    create_object_itself=${False}
    ${ismcRNC} =    ismcRNC
    Run Keyword If    ${ismcRNC}==${false}    COCO_atm_interface_creation
    # these are ignored because two first are unmodifiable
    # A2EA and path ids are set by system when GenerateAAL2Num is enabled
    ${ignored_params_list}=    Create List    GenerateAAL2Num    AAL2PathId    COCOA2EA
    Run Keyword If    ${ismcRNC}==${false}    Directactivate Full    COCO    ${RNC-ID}/COCO-1    ${ignored_params_list}

COCO: Directactivate modify
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    COCO    create_object_itself=${False}
    ${ismcRNC} =    ismcRNC
    # minimal plan cannot be activated in the test setup, because it requires the VPI/VCI release and ATM interface creation first
    Run Keyword If    ${ismcRNC}==${false}    COCO_atm_interface_creation
    Run Keyword If    ${ismcRNC}==${false}    download_plan    RNWPLAND_COCO_minimal.XML
    # these are ignored because two first are unmodifiable
    # and CDVTs are calculated by system when CalculateCDVT is enabled (which is default)
    # A2EA and path ids are set by system when GenerateAAL2Num is enabled
    ${ignored_params_list}=    Create List    CalculateCDVT    GenerateAAL2Num    VPLTPCDVT01Egr    CNBAPCDVT01Egr    CNBAPCDVT01Ing
    ...    DNBAPCDVT01Egr    DNBAPCDVT01Ing    AAL2SigCDVT01Egr    AAL2SigCDVT01Ing    AAL2UPCDVT01Egr    AAL2UPCDVT01Ing
    ...    CNBAPPartialPacketDiscard    AAL2SigPartialPacketDiscard    AAL2PathId    COCOA2EA
    Run Keyword If    ${ismcRNC}==${false}    Directactivate Modify    COCO    ${RNC-ID}/COCO-1    ${ignored_params_list}    different_plans=${True}

COCO: Directactivate delete
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    COCO    create_object_itself=${False}
    ${ismcRNC} =    ismcRNC
    # minimal plan cannot be activated in the test setup, because it requires the VPI/VCI release and ATM interface creation first
    Run Keyword If    ${ismcRNC}==${false}    COCO_atm_interface_creation
    Run Keyword If    ${ismcRNC}==${false}    download_plan    RNWPLAND_COCO_minimal.XML
    Run Keyword If    ${ismcRNC}==${false}    Directactivate delete    COCO    ${RNC-ID}/COCO-1

COCO: create delete mcRNC
    [Documentation]    This object exists in cRNC only
    [Tags]    ready-for-a-team-jenkins    nightly-test    Fails-with-org    # because of a different feedback message
    ${ismcRNC} =    ismcRNC
    Run Keyword If    ${ismcRNC}==${true}    Invalid Create Delete Plan    COCO

COCO: COCO directactivate mcRNC
    [Documentation]    This object exists in cRNC only
    [Tags]    ready-for-a-team-jenkins    nightly-test    Fails-with-org    # because of a different feedback message
    ${ismcRNC} =    ismcRNC
    Run Keyword If    ${ismcRNC}==${true}    Invalid Directactivate Plan    COCO

COCO: delete
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    COCO    create_object_itself=${False}
    ${ismcRNC} =    ismcRNC
    # XXX cannot load minimal coco if coco is already in DB, validation fails...
    Run Keyword If    ${ismcRNC}==${false}    COCO_atm_interface_creation
    Run Keyword If    ${ismcRNC}==${false}    download_plan    RNWPLAND_COCO_minimal.XML
    Run Keyword If    ${ismcRNC}==${false}    Delete Plan    COCO    ${RNC-ID}/COCO-1

COCO: modification not needed (DA)
    [Documentation]    Tests that RAYMAN notices that COCO object was is not changed
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    COCO    create_object_itself=${False}
    ${ismcRNC} =    ismcRNC
    Run Keyword If    ${ismcRNC}==${false}    COCO_atm_interface_creation
    Run Keyword If    ${ismcRNC}==${false}    Modification Not Needed (DA)    COCO    different_plans=${True}

IUR: Create Upload and Compare with the original upload plan
    [Tags]    ready-for-a-team-jenkins
    [Setup]    create_base_config_for_object    IUR    create_object_itself=${False}
    Create Upload and Compare With Original    IUR    ${RNC-ID}/IUR-1

IUR: Directactivate create
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    IUR    create_object_itself=${False}
    Directactivate Full    IUR    ${RNC-ID}/IUR-1

IUR: Directactivate modify
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    IUR    create_object_itself=${True}
    Directactivate Modify    IUR    ${RNC-ID}/IUR-1

IUR: Directactivate delete
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    IUR    create_object_itself=${True}
    Directactivate delete    IUR    ${RNC-ID}/IUR-1

IUR: modification not needed (DA)
    [Documentation]    Tests that RAYMAN notices that IUR object was is not changed
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    IUR    create_object_itself=${False}
    Modification Not Needed (DA)    IUR

CBCI: Create Upload and Compare with the original upload plan
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    CBCI    ${False}
    ${ignored_params_list}=    Create List    ICSUforCBC
    Create Upload and Compare With Original    CBCI    ${RNC-ID}/CBCI-1    ${ignored_params_list}

CBCI: Modify Upload and Compare
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    CBCI    ${True}
    Download Upload Compare    CBCI    ${RNC-ID}/CBCI-1

CBCI: Download full
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    CBCI    ${False}
    Download Upload Compare    CBCI    ${RNC-ID}/CBCI-1

CBCI: Directactivate create
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    CBCI    ${False}
    Directactivate Full    CBCI    ${RNC-ID}/CBCI-1

CBCI: Delete
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    CBCI    ${True}
    Delete Plan    CBCI    ${RNC-ID}/CBCI-1

CBCI: Directactivate modify
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    CBCI    create_object_itself=${True}
    Directactivate Modify    CBCI    ${RNC-ID}/CBCI-1

CBCI: Directactivate delete
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    CBCI    create_object_itself=${True}
    Directactivate delete    CBCI    ${RNC-ID}/CBCI-1

CBCI: modification not needed (DA)
    [Documentation]    Tests that RAYMAN notices that CBCI object was is not changed
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    CBCI    create_object_itself=${False}
    Modification Not Needed (DA)    CBCI

WANE: Create Upload and Compare with the original upload plan
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    WANE    ${False}
    Create Upload and Compare With Original    WANE    ${RNC-ID}/WANE-1

WANE: Directactivate create
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    WANE    ${False}
    Directactivate Full    WANE    ${RNC-ID}/WANE-1

WANE: Directactivate modify
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    WANE    create_object_itself=${True}
    Directactivate Modify    WANE    ${RNC-ID}/WANE-1

WANE: Directactivate delete
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    WANE    create_object_itself=${True}
    Directactivate delete    WANE    ${RNC-ID}/WANE-1

WANE: Feature Not Enabled (Download)
    [Documentation]    Test that RAYMAN skips the whole object object when feature opt_type_t_imsi_ho_in_use_c (2) is not enabled
    [Tags]    ready-for-a-team-jenkins    nightly-test    Fails-with-org    # because of a different feedback message
    [Setup]    create_base_config_for_object    WANE    create_object_itself=${False}
    ${featureList} =    Create List    2
    Feature Not Enabled (Download)    WANE    ${featureList}    WANE CREATION SKIPPED: NEEDED OPTION NOT SUPPORTED: IMSI Based Handover
    [Teardown]    License Check Teardown

WANE: Feature Not Enabled (DA)
    [Documentation]    Test that RAYMAN skips the whole object object when feature opt_type_t_imsi_ho_in_use_c (2) is not enabled
    [Tags]    ready-for-a-team-jenkins    nightly-test    Fails-with-org    # because of a different feedback message
    [Setup]    create_base_config_for_object    WANE    create_object_itself=${False}
    ${featureList} =    Create List    2
    Feature Not Enabled (DA)    WANE    ${featureList}    WANE CREATION SKIPPED: NEEDED OPTION NOT SUPPORTED: IMSI Based Handover
    [Teardown]    License Check Teardown

WANE: Feature Not Enabled (Upload)
    [Documentation]    Test that RAYMAN skips the whole object object in upload when the feature is not enabled
    [Tags]    ready-for-a-team-jenkins    nightly-test    Fails-with-org    # because of a different feedback message
    [Setup]    create_base_config_for_object    WANE    create_object_itself=${True}
    ${featureList} =    Create List    2
    Feature Not Enabled (Upload)    WANE    ${featureList}
    [Teardown]    License Check Teardown

WANE: modification not needed (DA)
    [Documentation]    Tests that RAYMAN notices that WANE object was is not changed
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    WANE    create_object_itself=${False}
    Modification Not Needed (DA)    WANE

WSG: Create Upload and Compare with the original upload plan
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    WSG    ${False}
    Create Upload and Compare With Original    WSG    ${RNC-ID}/WSG-1

WSG: Modify Upload and Compare
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    WSG    ${True}
    Download Upload Compare    WSG    ${RNC-ID}/WSG-1

WSG: Download full
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    WSG    ${False}
    Download Upload Compare    WSG    ${RNC-ID}/WSG-1

WSG: Directactivate create
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    WSG    ${False}
    Directactivate Full    WSG    ${RNC-ID}/WSG-1

WSG: Delete
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    WSG    ${True}
    Delete Plan    WSG    ${RNC-ID}/WSG-1

WSG: Directactivate modify
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    WSG    create_object_itself=${True}
    Directactivate Modify    WSG    ${RNC-ID}/WSG-1

WSG: Directactivate delete
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    WSG    create_object_itself=${True}
    Directactivate delete    WSG    ${RNC-ID}/WSG-1

WSG: Feature Not Enabled (Download)
    [Documentation]    Test that RAYMAN skips the whole object object when the feature is not enabled
    [Tags]    ready-for-a-team-jenkins    nightly-test    Fails-with-org    # because of a different feedback message
    [Setup]    create_base_config_for_object    WSG    create_object_itself=${True}
    ${featureList} =    Create List    2
    # This is the output with org: WSG CREATION SKIPPED: NEEDED OPTION NOT SUPPORTED: IMSI HO
    Feature Not Enabled (Download)    WSG    ${featureList}    WSG CREATION SKIPPED: NEEDED OPTION NOT SUPPORTED: IMSI Based Handover
    [Teardown]    License Check Teardown

WSG: Feature Not Enabled (DA)
    [Documentation]    Test that RAYMAN skips the whole object object when the feature is not enabled
    [Tags]    ready-for-a-team-jenkins    nightly-test    Fails-with-org    # because of a different feedback message
    [Setup]    create_base_config_for_object    WSG    create_object_itself=${True}
    ${featureList} =    Create List    2
    # This is the output with org: WSG CREATION SKIPPED: NEEDED OPTION NOT SUPPORTED: IMSI HO
    Feature Not Enabled (DA)    WSG    ${featureList}    WSG CREATION SKIPPED: NEEDED OPTION NOT SUPPORTED: IMSI Based Handover
    [Teardown]    License Check Teardown

WSG: Feature Not Enabled (Upload)
    [Documentation]    Test that RAYMAN skips the whole object object in upload when the feature is not enabled
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    WSG    create_object_itself=${True}
    ${featureList} =    Create List    2
    Feature Not Enabled (Upload)    WSG    ${featureList}
    [Teardown]    License Check Teardown

WSG: modification not needed (DA)
    [Documentation]    Tests that RAYMAN notices that WSG object was is not changed
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    WSG    create_object_itself=${False}
    Modification Not Needed (DA)    WSG

VBTS: Create Upload and Compare with the original upload plan
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    VBTS    ${False}
    Create Upload and Compare With Original    VBTS    ${RNC-ID}/VBTS-1

VBTS: Modify Upload and Compare
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    VBTS    ${True}
    Download Upload Compare    VBTS    ${RNC-ID}/VBTS-1

VBTS: Download full
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    VBTS    ${False}
    Download Upload Compare    VBTS    ${RNC-ID}/VBTS-1

VBTS: Directactivate create
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    VBTS    ${False}
    Directactivate Full    VBTS    ${RNC-ID}/VBTS-1

VBTS: Directactivate modify
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    VBTS    create_object_itself=${True}
    Directactivate Modify    VBTS    ${RNC-ID}/VBTS-1

VBTS: Directactivate delete
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    VBTS    create_object_itself=${True}
    Directactivate delete    VBTS    ${RNC-ID}/VBTS-1

VBTS: Delete
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    VBTS    ${True}
    Delete Plan    VBTS    ${RNC-ID}/VBTS-1

VBTS: Feature Not Enabled (Download)
    [Documentation]    Test that RAYMAN skips the whole object object when the feature is not enabled
    [Tags]    ready-for-a-team-jenkins    nightly-test    Fails-with-org    # because of a different feedback message
    [Setup]    create_base_config_for_object    VBTS    create_object_itself=${True}
    ${featureList} =    Create List    88    56
    # This is the output with org: VBTS CREATION SKIPPED: NEEDED OPTION NOT SUPPORTED: I-BTS sharing
    # XXX there are two features which control this and feedback returns only one of them, assuming that RAYMAN returns this feature but it could change depending how foolib works
    Feature Not Enabled (Download)    VBTS    ${featureList}    VBTS CREATION SKIPPED: NEEDED OPTION NOT SUPPORTED: HSPA Inter-RNC Cell Change
    [Teardown]    License Check Teardown

VBTS: Feature Not Enabled (DA)
    [Documentation]    Test that RAYMAN skips the whole object object when the feature is not enabled
    [Tags]    ready-for-a-team-jenkins    nightly-test    Fails-with-org    # because of a different feedback message
    [Setup]    create_base_config_for_object    VBTS    create_object_itself=${False}
    ${featureList} =    Create List    88    56
    # This is the output with org: VBTS CREATION SKIPPED: NEEDED OPTION NOT SUPPORTED: I-BTS sharing
    # XXX there are two features which control this and feedback returns only one of them, assuming that RAYMAN returns this feature but it could change depending how foolib works
    Feature Not Enabled (DA)    VBTS    ${featureList}    VBTS CREATION SKIPPED: NEEDED OPTION NOT SUPPORTED: HSPA Inter-RNC Cell Change
    [Teardown]    License Check Teardown

VBTS: Feature Not Enabled (Upload)
    [Documentation]    Test that RAYMAN skips the whole object object in upload when the feature is not enabled
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    VBTS    create_object_itself=${True}
    ${featureList} =    Create List    88    56
    Feature Not Enabled (Upload)    VBTS    ${featureList}
    [Teardown]    License Check Teardown

VBTS: modification not needed (DA)
    [Documentation]    Tests that RAYMAN notices that VBTS object was is not changed
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    VBTS    create_object_itself=${False}
    Modification Not Needed (DA)    VBTS

WLCSE: Create Upload and Compare with the original upload plan
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    WLCSE    ${False}
    Create Upload and Compare With Original    WLCSE    ${RNC-ID}/WLCSE-1

WLCSE: Modify Upload and Compare
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    WLCSE    ${True}
    Download Upload Compare    WLCSE    ${RNC-ID}/WLCSE-1

WLCSE: Download full
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    WLCSE    ${False}
    Download Upload Compare    WLCSE    ${RNC-ID}/WLCSE-1

WLCSE: Directactivate Create
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    WLCSE    ${False}
    Directactivate Full    WLCSE    ${RNC-ID}/WLCSE-1

WLCSE: Directactivate Modify
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    WLCSE    ${True}
    Directactivate Modify    WLCSE    ${RNC-ID}/WLCSE-1

WLCSE: Directactivate Detete
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    WLCSE    ${True}
    Directactivate Delete    WLCSE    ${RNC-ID}/WLCSE-1

WLCSE: Delete
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    WLCSE    ${True}
    Delete Plan    WLCSE    ${RNC-ID}/WLCSE-1

WLCSE: Feature Not Enabled (Download)
    [Documentation]    Test that RAYMAN skips the whole object object when the feature is not enabled
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    WLCSE    create_object_itself=${True}
    ${featureList} =    Create List    1
    Feature Not Enabled (Download)    WLCSE    ${featureList}    WLCSE CREATION SKIPPED: NEEDED OPTION NOT SUPPORTED: LCS
    [Teardown]    License Check Teardown

WLCSE: Feature Not Enabled (DA)
    [Documentation]    Test that RAYMAN skips the whole object object when the feature is not enabled
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    WLCSE    create_object_itself=${True}
    ${featureList} =    Create List    1
    Feature Not Enabled (DA)    WLCSE    ${featureList}    WLCSE CREATION SKIPPED: NEEDED OPTION NOT SUPPORTED: LCS
    [Teardown]    License Check Teardown

WLCSE: Feature Not Enabled (Upload)
    [Documentation]    Test that RAYMAN skips the whole object object in upload when the feature is not enabled
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    WLCSE    create_object_itself=${True}
    ${featureList} =    Create List    1
    Feature Not Enabled (Upload)    WLCSE    ${featureList}
    [Teardown]    License Check Teardown

WLCSE: modification not needed (DA)
    [Documentation]    Tests that RAYMAN notices that WLCSE object was is not changed
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    WLCSE    create_object_itself=${False}
    Modification Not Needed (DA)    WLCSE

CMOB: Create Upload and Compare with the original upload plan
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    CMOB    ${False}
    Create Upload and Compare With Original    CMOB    ${RNC-ID}/CMOB-4

CMOB: Directactivate create
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    CMOB    ${False}
    Directactivate Full    CMOB    ${RNC-ID}/CMOB-4

CMOB: Directactivate modify
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    CMOB    create_object_itself=${True}
    Directactivate Modify    CMOB    ${RNC-ID}/CMOB-4

CMOB: Directactivate delete
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    CMOB    create_object_itself=${True}
    Directactivate delete    CMOB    ${RNC-ID}/CMOB-4

CMOB: Feature Not Enabled (Download)
    [Documentation]    Test that RAYMAN skips the whole object object when feature opt_type_t_rnar_in_use_C (26) is not enabled
    [Tags]    ready-for-a-team-jenkins    nightly-test    Fails-with-org    # because of a different feedback message
    [Setup]    create_base_config_for_object    CMOB    create_object_itself=${False}
    ${featureList} =    Create List    26
    # This is the output with org: ${RNC-ID}/DN:CMOB-4\ \ -> 16056 - CMOB CREATION SKIPPED: NEEDED OPTION NOT SUPPORTED: RNAR
    Feature Not Enabled (Download)    CMOB    ${featureList}    ${RNC-ID}/DN:CMOB-4\ \ -> 16056 - CMOB CREATION SKIPPED: NEEDED OPTION NOT SUPPORTED: Radio Network Access Regulation Function
    [Teardown]    License Check Teardown

CMOB: Feature Not Enabled (DA)
    [Documentation]    Test that RAYMAN skips the whole object object when feature opt_type_t_rnar_in_use_C (26) is not enabled
    [Tags]    ready-for-a-team-jenkins    nightly-test    Fails-with-org    # because of a different feedback message
    [Setup]    create_base_config_for_object    CMOB    create_object_itself=${False}
    ${featureList} =    Create List    26
    # This is the output with org: CMOB CREATION SKIPPED: NEEDED OPTION NOT SUPPORTED: RNAR
    Feature Not Enabled (DA)    CMOB    ${featureList}    CMOB CREATION SKIPPED: NEEDED OPTION NOT SUPPORTED: Radio Network Access Regulation Function
    [Teardown]    License Check Teardown

CMOB: Feature Not Enabled (Upload)
    [Documentation]    Test that RAYMAN skips the whole object object in upload when the feature is not enabled
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    CMOB    create_object_itself=${True}
    ${featureList} =    Create List    26
    Feature Not Enabled (Upload)    CMOB    ${featureList}
    [Teardown]    License Check Teardown

CMOB: modification not needed (DA)
    [Documentation]    Tests that RAYMAN notices that CMOB object was is not changed
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    CMOB    create_object_itself=${False}
    Modification Not Needed (DA)    CMOB
    #############################################################################

Invalid plan: incorrect raml version
    [Documentation]    Test that PABROS notices the incorrect raml version (should be 2.1)
    [Tags]    ready-for-a-team-jenkins    nightly-test
    ${plan} =    generate_empty_download_plan    RNC    ${RNC-ID}    update    raml_version=2.0    xmlns=raml21.xsd
    Log    ${plan}
    Create File    testplan.xml    ${plan}
    upload_a_file    testplan.xml
    ${output} =    download_plan    testplan.xml    should_succeed=${false}
    Should Contain    ${output}    17447 - RNW PLAN DOWNLOAD FAILED: INCORRECT RAML VERSION IN XML PLAN
    ${plan} =    generate_empty_download_plan    RNC    ${RNC-ID}    update    raml_version=2    xmlns=raml21.xsd
    Log    ${plan}
    Create File    testplan.xml    ${plan}
    upload_a_file    testplan.xml
    ${output} =    download_plan    testplan.xml    should_succeed=${false}
    Should Contain    ${output}    17447 - RNW PLAN DOWNLOAD FAILED: INCORRECT RAML VERSION IN XML PLAN

Invalid plan: incorrect xmlns
    [Documentation]    Test that PABROS notices the incorrect xmlns (should be raml21.xsd)
    [Tags]    ready-for-a-team-jenkins    nightly-test
    ${plan} =    generate_empty_download_plan    RNC    ${RNC-ID}    update    raml_version=2.1    xmlns=raml20.xsd
    Log    ${plan}
    Create File    testplan.xml    ${plan}
    upload_a_file    testplan.xml
    ${output} =    download_plan    testplan.xml    should_succeed=${false}
    Should Contain    ${output}    17447 - RNW PLAN DOWNLOAD FAILED: INCORRECT RAML VERSION IN XML PLAN
    ${plan} =    generate_empty_download_plan    RNC    ${RNC-ID}    update    raml_version=2.1    xmlns=r
    Log    ${plan}
    Create File    testplan.xml    ${plan}
    upload_a_file    testplan.xml
    ${output} =    download_plan    testplan.xml    should_succeed=${false}
    Should Contain    ${output}    17447 - RNW PLAN DOWNLOAD FAILED: INCORRECT RAML VERSION IN XML PLAN

Invalid plan: operation missing
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    RNAC    create_object_itself=${True}
    ${output} =    download_plan    RNWPLAND_RNAC_operation_missing.XML    should_succeed=${false}
    Should Contain    ${output}    No feedbacks received, no changes applied.
    Should Contain    ${output}    Error in RNW Plan download:
    Should Contain    ${output}    14444 - RNW PLAN DOWNLOAD FAILED: ATTRIBUTE NOT FOUND

Invalid plan: invalid operation
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    RNAC    create_object_itself=${True}
    ${output} =    download_plan    RNWPLAND_RNAC_operation_invalid.XML    should_succeed=${false}
    Should Contain    ${output}    No feedbacks received, no changes applied.
    Should Contain    ${output}    Error in RNW Plan download:
    Should Contain    ${output}    17451 - RNW PLAN DOWNLOAD FAILED: RNW OBJECT OPERATION IS NOT CORRECT IN XML PLAN FILE

Invalid plan: class missing
    [Tags]    ready-for-a-team-jenkins    nightly-test
    ${output} =    download_plan    RNWPLAND_class_missing.XML    should_succeed=${false}
    Should Contain    ${output}    No feedbacks received, no changes applied.
    Should Contain    ${output}    Error in RNW Plan download:
    Should Contain    ${output}    14444 - RNW PLAN DOWNLOAD FAILED: ATTRIBUTE NOT FOUND

Invalid plan: unknown object
    [Tags]    ready-for-a-team-jenkins    nightly-test
    ${output} =    download_plan    RNWPLAND_puppu.XML    should_succeed=${false}
    Should Contain    ${output}    No feedbacks received, no changes applied.
    Should Contain    ${output}    Error in RNW Plan download:
    Should Contain    ${output}    17449 - RNW PLAN DOWNLOAD FAILED: UNKNOWN RNW OBJECT NAME IN XML PLAN FILE

Invalid plan: unknown object after valid object
    [Documentation]    Plan contains two objects. First of them is a valid object, but the second one is unknown.
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    RNC    create_object_itself=${True}
    ${plan} =    generate_empty_download_plan    RNC    ${RNC-ID}    update
    add_plan_mo    ${plan}    PUPPU    ${RNC-ID}/PUPPU-1
    Log    ${plan}
    Create File    testplan.xml    ${plan}
    upload_a_file    testplan.xml
    ${output} =    download_plan    testplan.xml    should_succeed=${false}
    Should Contain    ${output}    17449 - RNW PLAN DOWNLOAD FAILED: UNKNOWN RNW OBJECT NAME IN XML PLAN FILE

Invalid plan: unknown object after valid object (COCO in mcRNC, RNCERM in CRNC)
    [Documentation]    Plan contains two objects. First of them is a valid object, but the second one is unknown in this network element environment.
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    RNC    create_object_itself=${True}
    ${ismcRNC} =    ismcRNC
    ${plan} =    generate_empty_download_plan    RNC    ${RNC-ID}    update
    Run Keyword If    ${ismcRNC}==${true}    add_plan_mo    ${plan}    COCO    ${RNC-ID}/COCO-1
    Run Keyword If    ${ismcRNC}==${false}    add_plan_mo    ${plan}    RNCERM    ${RNC-ID}/RNCERM-1
    Log    ${plan}
    Create File    testplan.xml    ${plan}
    ${output} =    download_plan    testplan.xml    should_succeed=${false}
    Should Contain    ${output}    17449 - RNW PLAN DOWNLOAD FAILED: UNKNOWN RNW OBJECT NAME IN XML PLAN FILE

Invalid plan: distName missing
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    RNAC    create_object_itself=${True}
    ${output} =    download_plan    RNWPLAND_RNAC_distName_missing.XML    should_succeed=${false}
    Should Contain    ${output}    No feedbacks received, no changes applied.
    Should Contain    ${output}    Error in RNW Plan download:
    Should Contain    ${output}    15427 - RNW PLAN DOWNLOAD FAILED: RNW OBJECT ID ATTRIBUTE NOT FOUND IN RNW PLAN

Invalid plan: invalid distName
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    RNAC    create_object_itself=${True}
    ${output} =    download_plan    RNWPLAND_RNAC_distName_invalid.XML    should_succeed=${false}
    Should Contain    ${output}    No feedbacks received, no changes applied.
    Should Contain    ${output}    Error in RNW Plan download:
    Should Contain    ${output}    15426 - RNW PLAN DOWNLOAD FAILED: RNW OBJECT ID VALUE REJECTED IN RNW PLAN

Invalid plan: name missing from p element
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    RNAC    create_object_itself=${True}
    ${output} =    download_plan    RNWPLAND_RNAC_p_name_missing.XML    should_succeed=${false}
    Should Contain    ${output}    No feedbacks received, no changes applied.
    Should Contain    ${output}    Error in RNW Plan download:
    Should Contain    ${output}    14444 - RNW PLAN DOWNLOAD FAILED: ATTRIBUTE NOT FOUND

Invalid plan: name missing from list p element
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    RNAC    create_object_itself=${True}
    ${output} =    download_plan    RNWPLAND_RNAC_list_p_name_missing.XML    should_succeed=${false}
    Should Contain    ${output}    No feedbacks received, no changes applied.
    Should Contain    ${output}    Error in RNW Plan download:
    Should Contain    ${output}    14444 - RNW PLAN DOWNLOAD FAILED: ATTRIBUTE NOT FOUND

Invalid plan: name missing from list element
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    RNAC    create_object_itself=${True}
    ${output} =    download_plan    RNWPLAND_RNAC_list_name_missing.XML    should_succeed=${false}
    Should Contain    ${output}    No feedbacks received, no changes applied.
    Should Contain    ${output}    Error in RNW Plan download:
    Should Contain    ${output}    14444 - RNW PLAN DOWNLOAD FAILED: ATTRIBUTE NOT FOUND

Invalid plan: unknown element
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    RNAC    create_object_itself=${True}
    ${output} =    download_plan    RNWPLAND_RNAC_unknown_element.XML    should_succeed=${false}
    Should Contain    ${output}    No feedbacks received, no changes applied.
    Should Contain    ${output}    Error in RNW Plan download:
    Should Contain    ${output}    14449 - RNW PLAN DOWNLOAD FAILED: XML PARSING ERROR

Invalid plan: parameter value missing
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    RNAC    create_object_itself=${True}
    ${output} =    download_plan    RNWPLAND_RNAC_parameter_value_missing.XML    should_succeed=${true}

Invalid plan: unknown parameter
    [Tags]    ready-for-a-team-jenkins
    [Setup]    create_base_config_for_object    RNAC    create_object_itself=${True}
    ${output} =    download_plan    RNWPLAND_RNAC_unknown_parameter.XML    should_succeed=${true}
    Should Contain    ${output}    15410 - RNW PLAN DOWNLOAD NOTICE: UNKNOWN ELEMENT IN XML PLAN FILE: puppu

Empty object in plan
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    RNAC    create_object_itself=${True}
    ${output} =    download_plan    RNWPLAND_RNAC_empty_object.XML    should_succeed=${true}

Empty Plan
    [Documentation]    No managed objects in the download plan
    [Tags]    ready-for-a-team-jenkins    nightly-test
    ${output} =    download_plan    RNWPLAND_EMPTY.XML    should_succeed=${true}

Invalid plan: parameter contains invalid value
    [Documentation]    Pabros cannot add parameters to the tree because of illegal values (string to int). As result of this the plan is not rejected, only invalid parameters are removed from the plan
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    RNAC    create_object_itself=${True}
    ${output} =    download_plan    RNWPLAND_RNAC_invalid_values.XML    should_succeed=${true}
    Should Contain    ${output}    15420 - RNW PLAN DOWNLOAD NOTICE: REJECTED VALUE ELEMENT FOR PARAMETER IN RNW PLAN: AMRLoadTxPower
    Should Contain    ${output}    15420 - RNW PLAN DOWNLOAD NOTICE: REJECTED VALUE ELEMENT FOR PARAMETER IN RNW PLAN: AMRNumofReconf

Invalid plan: plan validation fails because of illegal values
    [Documentation]    Parameter value is invalid in the plan
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    RNAC    create_object_itself=${True}
    ${output} =    download_plan    RNWPLAND_RNAC_illegal_values.XML    should_succeed=${false}
    Should Contain    ${output}    15384 - RNAC PARAMETER CHECKING FAILED: ILLEGAL VALUES FOR RNW OBJECT PARAMETERS IN RNW PLAN

Download plan with upload-only parameter
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    RNAC    create_object_itself=${True}
    ${output} =    download_plan    RNWPLAND_RNAC_uploadonly_parameter.XML    should_succeed=${true}
    Should Contain    ${output}    16441 - RNW PLAN DOWNLOAD NOTICE: PARAMETERS THAT BELONG ONLY TO UPLOAD PLAN DISCOVERED IN DOWNLOADED PLAN: RNACChangeOrigin

Invalid plan: incorrect RNC id in RNPS MOID
    [Documentation]    RNC-id is in correct in in MOID. It is RNC-2/RNPS-1, when it should be ${RNC-ID}/RNPS-1
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    RNPS    create_object_itself=${True}
    ${output} =    download_plan    RNWPLAND_RNPS_incorrect_RNCid.XML    should_succeed=${false}
    Should Contain    ${output}    * No feedbacks received, no changes applied.
    Should Contain    ${output}    16070 - RNW PLAN DOWNLOAD FAILED: WRONG RNC ID IN RNW PLAN

Invalid plan: too many list items
    [Tags]    ready-for-a-team-jenkins    nightly-test    Fails-with-org    # because of a different feedback message
    [Setup]    create_base_config_for_object    RNHSPA    create_object_itself=${True}
    ${output} =    download_plan    RNWPLAND_RNHSPA_too_many_list_items.XML    should_succeed=${false}
    Should Contain    ${output}    17645 - RNHSPA PARAMETER CHECKING FAILED: TOO MANY ITEMS IN LIST PARAMETER

Update plan with unmodifiable parameter
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    RNAC    create_object_itself=${True}
    ${output} =    download_plan    RNWPLAND_RNAC_unmodifiable_parameter.XML    should_succeed=${true}
    # No feedback from this

Same parameter twice in the download plan
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    RNAC    create_object_itself=${False}
    ${output} =    download_plan    RNWPLAND_RNAC_parameter_twice.XML    should_succeed=${true}
    # No feedback from this

License check fails for one parameter
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    RNAC    create_object_itself=${False}
    disable_optionality    19
    ${output} =    download_plan    RNWPLAND_RNAC.XML    should_succeed=${true}
    Should Contain    ${output}    ${RNC-ID}/DN:RNAC-1\ \ -> Parameter LoadBasedAMRCodecMode skipped because of missing license
    [Teardown]    License Check Teardown

Directactivate error case - parameter validation fails
    [Tags]    ready-for-a-team-jenkins    Fails-with-org    nightly-test    # because of a different feedback message
    [Setup]    create_base_config_for_object    RNAC    create_object_itself=${true}
    ${output}=    direct_activate    RNWPLAND_RNAC_illegal_values.XML    should_succeed=${false}
    Should Contain    ${output}    RNAC MODIFICATION FAILED: ILLEGAL VALUES FOR RNW OBJECT PARAMETERS IN RNW PLAN:HSFACHResetTimer
    Should Contain    ${output}    RNAC MODIFICATION FAILED: ILLEGAL VALUES FOR RNW OBJECT PARAMETERS IN RNW PLAN:GainFactorDataPartPRACHmessage PrachBetaD60
    Should Contain    ${output}    RNW DIRECT ACTIVATION FAILED: ILLEGAL VALUES FOR RNW OBJECT PARAMETERS IN RNW PLAN

Directactivate - new db contains plan which is not activated - newdb update is not allowed
    [Documentation]    Direct activation should also update new db if it contains a plan which is not activated yet.
    [Tags]    ready-for-a-team-jenkins
    [Setup]    create_base_config_for_object    IUO    create_object_itself=${False}
    # The rnfc contains parameter AutomDLPlanUpdEnabled which defines if directactivation also updates
    # the newdb.
    ${plan} =    generate_empty_download_plan    RNFC    ${RNC-ID}/RNFC-1    update
    add_plan_param    ${plan}    <p name="AutomDLPlanUpdEnabled">0</p>
    Log    ${plan}
    Create File    testplan.xml    ${plan}
    upload_a_file    testplan.xml
    download_plan    testplan.xml
    # IUO can't be deleted if IUO Id is used by IUCS and/or IUPS. So delete IUCS & IUPS objects first
    # delete_object_from_db    IUPS
    # delete_object_from_db    IUCS
    # delete_object_from_db    IUO
    download_plan    RNWPLAND_IUO_minimal.XML    activate=${false}
    direct_activate    RNWPLAND_IUO.XML
    activate_plan
    Upload and Compare With Original    IUO    ${RNC-ID}/IUO-1

Directactivate - new db contains plan which is not activated - newdb update is allowed
    [Documentation]    Direct activation should also update new db if it contains a plan which is not activated yet.
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    IUO    create_object_itself=${False}
    # The rnfc contains parameter AutomDLPlanUpdEnabled which defines if directactivation also updates
    # the newdb.
    # First we have to modify that parameter to enabled value
    ${plan} =    generate_empty_download_plan    RNFC    ${RNC-ID}/RNFC-1    update
    add_plan_param    ${plan}    <p name="AutomDLPlanUpdEnabled">1</p>
    Log    ${plan}
    Create File    testplan.xml    ${plan}
    upload_a_file    testplan.xml
    download_plan    testplan.xml
    download_plan    RNWPLAND_IUO_minimal.XML    activate=${false}
    direct_activate    RNWPLAND_IUO.XML
    activate_plan
    Upload And Compare Plan    ${XML_PATH}/RNWPLAND_IUO.XML    IUO    ${RNC-ID}/IUO-1

Mandatory parameter missing in create operation
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    RNC    create_object_itself=${False}
    ${plan} =    generate_empty_download_plan    RNC    ${RNC-ID}
    Log    ${plan}
    Create File    testplan.xml    ${plan}
    upload_a_file    testplan.xml
    ${output}=    download_plan    testplan.xml    ${false}
    Should Match Regexp    ${output}    ${RNC-ID}.*15383.*RNC PARAMETER CHECKING FAILED: MANDATORY PARAMETERS OF RNW OBJECT MISSING IN RNW PLAN

RNC Object MNC checks - create mnc without length - MNC is skipped
    [Documentation]    If CommonMNCLength is missing in create, MNC value is skipped with feedback. Plan validates ok
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    RNC    create_object_itself=${False}
    ${output}=    Download RNC with MNC    123    ${empty}
    Should Match Regexp    ${output}    CommonMNC skipped as CommonMNCLength missing
    ${ul_xml}=    upload_plan
    ${val}=    get_plan_param_value    ${ul_xml}    ${RNC-ID}    CommonMNC
    Should Be True    ${val}==65535

RNC Object MNC checks - create mnc, length in notdef value - error
    [Documentation]    If CommonMNCLength is in the plan, but the value is notdef (0) validation fails
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    RNC    create_object_itself=${False}
    ${output}=    Download RNC with MNC    123    0    should_succeed=${false}
    Should Match Regexp    ${output}    15384.*Mismatch in CommonMNC and CommonMNCLength values

RNC Object MNC checks - create mnc, length and mnc notdef values
    [Documentation]    Both MNC and length are in the plan and both have not defined value, validates ok
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    RNC    create_object_itself=${False}
    ${output}=    Download RNC with MNC    65535    0    should_succeed=${true}
    ${ul_xml}=    upload_plan
    ${val}=    get_plan_param_value    ${ul_xml}    ${RNC-ID}    CommonMNC
    Should Be True    ${val}==65535

RNC Object MNC checks - create mnc length without mnc - MNC is skipped
    [Documentation]    Only length is in the plan, it is just skipped without feedback
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    RNC    create_object_itself=${False}
    ${output}=    Download RNC with MNC    ${empty}    2
    ${ul_xml}=    upload_plan
    ${val}=    get_plan_param_value    ${ul_xml}    ${RNC-ID}    CommonMNC
    Should Be True    ${val}==65535

RNC Object MNC checks - create mnc length, mnc is not def value - error
    [Documentation]    MNCLength is in the plan, MNC is undefined value, validation fails
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    RNC    create_object_itself=${False}
    ${output}=    Download RNC with MNC    65535    2    should_succeed=${false}
    Should Match Regexp    ${output}    15384.*Mismatch in CommonMNC and CommonMNCLength values

RNC Object MNC checks - create long mnc with short length - error
    [Documentation]    Plan MNC value is long but length is short, validation fails
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    RNC    create_object_itself=${False}
    ${output}=    Download RNC with MNC    200    2    should_succeed=${false}
    Should Match Regexp    ${output}    15384.*Mismatch in CommonMNC and CommonMNCLength values

RNC Object MNC checks - create long mnc with long length
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    RNC    create_object_itself=${False}
    ${output}=    Download RNC with MNC    200    3
    ${ul_xml}=    upload_plan
    ${val}=    get_plan_param_value    ${ul_xml}    ${RNC-ID}    CommonMNC
    Should Be True    ${val}==200

RNC Object MNC checks - modify long mnc with short length - ok case
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    RNC    create_object_itself=${False}
    # create
    ${output}=    Download RNC with MNC    20    3
    # modify
    ${output}=    Download RNC with MNC    ${empty}    2    operation=update
    ${ul_xml}=    upload_plan
    ${val}=    get_plan_param_value    ${ul_xml}    ${RNC-ID}    CommonMNC
    Should Be True    ${val}==20

RNC Object MNC checks - modify long mnc with short length - error
    [Documentation]    Modify MNCLength to short when the configured value is long, validation fails
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    RNC    create_object_itself=${False}
    # create
    ${output}=    Download RNC with MNC    200    3
    # modify
    ${output}=    Download RNC with MNC    ${empty}    2    operation=update    should_succeed=${false}
    Should Match Regexp    ${output}    (?i)Mismatch in Old CommonMNC and New CommonMNCLength values
    ${ul_xml}=    upload_plan
    ${val}=    get_plan_param_value    ${ul_xml}    ${RNC-ID}    CommonMNC
    Should Be True    ${val}==200

RNC Object MNC checks - modify long mnc with short length - short mnc value in plan - ok
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    RNC    create_object_itself=${False}
    # create
    ${output}=    Download RNC with MNC    200    3
    # modify
    ${output}=    Download RNC with MNC    20    2    operation=update
    ${ul_xml}=    upload_plan
    ${val}=    get_plan_param_value    ${ul_xml}    ${RNC-ID}    CommonMNC
    Should Be True    ${val}==20

RNC Object MNC checks - modify short mnc with long length - long mnc value in plan - ok
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    RNC    create_object_itself=${False}
    # create
    ${output}=    Download RNC with MNC    20    2
    # modify
    ${output}=    Download RNC with MNC    203    3    operation=update
    ${ul_xml}=    upload_plan
    ${val}=    get_plan_param_value    ${ul_xml}    ${RNC-ID}    CommonMNC
    Should Be True    ${val}==203

RNC Object MNC checks - modify short mnc with long length
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    RNC    create_object_itself=${False}
    # create
    ${output}=    Download RNC with MNC    20    2
    # modify
    ${output}=    Download RNC with MNC    ${empty}    3    operation=update
    ${ul_xml}=    upload_plan
    ${val}=    get_plan_param_value    ${ul_xml}    ${RNC-ID}    CommonMNC
    Should Be True    ${val}==20

RNC Object MNC checks - modify mnc when old is undefined and length is missing - error
    [Documentation]    Modify only MNC when old value is undefined, because length is not in the plan validation fails
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    RNC    create_object_itself=${False}
    # create
    ${output}=    Download RNC with MNC    ${empty}    ${empty}
    # modify
    ${output}=    Download RNC with MNC    12    ${empty}    operation=update    should_succeed=${false}
    Should Match Regexp    ${output}    (?i)15384.*Mismatch in old CommonMNC and new CommonMNC values
    ${ul_xml}=    upload_plan
    ${val}=    get_plan_param_value    ${ul_xml}    ${RNC-ID}    CommonMNC
    Should Be True    ${val}==65535

RNC Object MNC checks - modify mnc length when old is undefined and mnc is missing - error
    [Documentation]    Modify only length when old value is undefined, mnc not in the plan, validation fails
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    RNC    create_object_itself=${False}
    # create
    ${output}=    Download RNC with MNC    ${empty}    ${empty}
    # modify
    ${output}=    Download RNC with MNC    ${empty}    3    operation=update    should_succeed=${false}
    Should Match Regexp    ${output}    (?i)15384.*Mismatch in Old CommonMNC and New CommonMNCLength values
    ${ul_xml}=    upload_plan
    ${val}=    get_plan_param_value    ${ul_xml}    ${RNC-ID}    CommonMNC
    Should Be True    ${val}==65535

RNC Object MNC checks - modify mnc to notdef when old is undefined and mnclen is missing - ok
    [Documentation]    Modify MNC to undefined value, old value is undefined, length is missing
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    RNC    create_object_itself=${False}
    # create
    ${output}=    Download RNC with MNC    ${empty}    ${empty}
    # modify
    ${output}=    Download RNC with MNC    65535    ${empty}    operation=update    should_succeed=${true}
    ${ul_xml}=    upload_plan
    ${val}=    get_plan_param_value    ${ul_xml}    ${RNC-ID}    CommonMNC
    Should Be True    ${val}==65535

RNC Object MNC checks - modify mnc len to notdef when old is undefined and mnc is missing - ok
    [Documentation]    Modify MNCLength to undefined value while old is undefined, MNC is missing
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    RNC    create_object_itself=${False}
    # create
    ${output}=    Download RNC with MNC    ${empty}    ${empty}
    # modify
    ${output}=    Download RNC with MNC    ${empty}    0    operation=update    should_succeed=${true}
    ${ul_xml}=    upload_plan
    ${val}=    get_plan_param_value    ${ul_xml}    ${RNC-ID}    CommonMNC
    Should Be True    ${val}==65535

RNC Object MNC checks - modify mnc len to notdef, old mnc is defined - error
    [Documentation]    Modify MNCLength to undefined value, old MNC is defined, so validation fails
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    RNC    create_object_itself=${False}
    # create
    ${output}=    Download RNC with MNC    20    2
    # modify
    ${output}=    Download RNC with MNC    ${empty}    0    operation=update    should_succeed=${false}
    Should Match Regexp    ${output}    (?i)15384.*Mismatch in Old CommonMNC and New CommonMNCLength values
    ${ul_xml}=    upload_plan
    ${val}=    get_plan_param_value    ${ul_xml}    ${RNC-ID}    CommonMNC
    Should Be True    ${val}==20

RNC Object RNCIPAddress check
    [Documentation]    In mcRNC: configure IP address with role ssh and check that upload returns correct IP address. In CRNC: check that upload returns the correct IP address already configured to the test bench.
    [Tags]    ready-for-a-team-jenkins    nightly-test    
    [Setup]    create_base_config_for_object    RNC    create_object_itself=${True}
    add_RNCIPAddress
    ${ul_xml} =    upload_plan
    # clear_RNCIPAddress
    ${rncipaddress}=    get_plan_param_value    ${ul_xml}    ${RNC-ID}    RNCIPAddress
    Should Be Equal    ${rncipaddress}    ${IPADDRESS}

RNHSPA Object MaxBitRateNRTMACDFlow check
    [Documentation]    Test that RAYMAN skips the parameter value when the appropriate feature is not enabled
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    RNHSPA    create_object_itself=${False}
    # Create HSDPA plan with MaxBitRateNRTMACDFlow max value
    ${plan} =    generate_empty_download_plan    RNHSPA    ${RNC-ID}/RNHSPA-1    create
    add_plan_param    ${plan}    <p name="MaxBitRateNRTMACDFlow">83968</p>
    Log    ${plan}
    Create File    testplan.xml    ${plan}
    upload_a_file    testplan.xml
    # disable feature opt_type_t_mimo_28mbps_c --> param value value should be skipped
    disable_optionality    104
    ${output}=    download_plan    testplan.xml    should_succeed=${true}
    Should Contain    ${output}    ${RNC-ID}/DN:RNHSPA-1\ \ -> Parameter MaxBitRateNRTMACDFlow skipped because of missing license
    [Teardown]    License Check Teardown

RNFC Object RABFailDueUESTCorr check
    [Documentation]    Test that RAYMAN rejects the parameter, if the parameter has value 15 and the related feature is in state conf
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    RNFC    create_object_itself=${False}
    ${plan} =    generate_empty_download_plan    RNFC    ${RNC-ID}/RNFC-1    create
    add_plan_param    ${plan}    <p name="RABFailDueUESTCorr">15</p>
    Log    ${plan}
    Create File    testplan.xml    ${plan}
    upload_a_file    testplan.xml
    enable_optionality    149    CONF
    ${output}=    download_plan    testplan.xml    should_succeed=${false}
    enable_all_features
    ${output}=    download_plan    testplan.xml    should_succeed=${true}
    upload_plan

Modify RNC with invalid RNC ID
    [Documentation]    Download plan contains invalid RNC ID
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    RNC    create_object_itself=${True}
    ${plan}=    generate_empty_download_plan    RNC    RNC-2    update
    add_plan_param    ${plan}    <p name="AlarmSetforWCELBLINIT">1</p>
    Log    ${plan}
    Create File    testplan.xml    ${plan}
    upload_a_file    testplan.xml
    ${output}=    download_plan    testplan.xml    ${false}
    Should Contain    ${output}    16070 - RNW PLAN DOWNLOAD FAILED: WRONG RNC ID IN RNW PLAN

Modify RNAC with invalid RNAC ID
    [Documentation]    Download plan contains invalid RNAC ID
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    RNAC    create_object_itself=${True}
    ${plan}=    generate_empty_download_plan    RNAC    ${RNC-ID}/RNAC-2    update
    add_plan_param    ${plan}    <p name="AMRLoadTxPower">2</p>
    Log    ${plan}
    Create File    testplan.xml    ${plan}
    upload_a_file    testplan.xml
    ${output}=    download_plan    testplan.xml    ${false}
    Should Match Regexp    ${output}    ${RNC-ID}/DN:RNAC-2.*15384.*RNAC PARAMETER CHECKING FAILED: ILLEGAL VALUES FOR RNW OBJECT PARAMETERS IN RNW PLAN

Create RNAC, RNC not available
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    RNC    create_object_itself=${False}
    ${output}=    download_plan    RNWPLAND_RNAC_minimal.XML    ${false}
    Should Contain    ${output}    1379 - RNW PLAN DOWNLOAD FAILED: RNCGEN NOT FOUND

Create RNC and RNAC in Same Plan
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    RNC    create_object_itself=${False}
    ${plan}=    generate_empty_download_plan    RNC    ${RNC-ID}    create
    add_plan_param    ${plan}    <p name="OMSIpAddress">1.2.3.4</p>
    add_plan_mo    ${plan}    RNAC    ${RNC-ID}/RNAC-1
    add_plan_param    ${plan}    <p name="AMRLoadTxPower">2</p>    ${RNC-ID}/RNAC-1
    Log    ${plan}
    Create File    testplan.xml    ${plan}
    upload_a_file    testplan.xml
    ${output}=    download_plan    testplan.xml
    ${ul_xml}=    upload_plan
    ${val}=    get_plan_param_value    ${ul_xml}    ${RNC-ID}    OMSIpAddress
    Should Be True    "${val}" == "1.2.3.4"
    ${val}=    get_plan_param_value    ${ul_xml}    ${RNC-ID}/RNAC-1    AMRLoadTxPower
    Should Be True    ${val} == 2

Create RNC and RNAC in Same Plan, RNC id invalid in RNAC distname
    [Tags]    ready-for-a-team-jenkins    Fails-with-org    nightly-test    # because of a different feedback message
    [Setup]    create_base_config_for_object    RNC    create_object_itself=${False}
    ${plan}=    generate_empty_download_plan    RNC    ${RNC-ID}    create
    add_plan_param    ${plan}    <p name="OMSIpAddress">1.2.3.4</p>
    add_plan_mo    ${plan}    RNAC    RNC-2/RNAC-1    # Invalid RNC Id
    add_plan_param    ${plan}    <p name="AMRLoadTxPower">2</p>    RNC-2/RNAC-1
    Log    ${plan}
    Create File    testplan.xml    ${plan}
    upload_a_file    testplan.xml
    ${output}=    download_plan    testplan.xml    ${false}
    # Original code gives this error, which I think is not correct: 1379 - RNW PLAN DOWNLOAD FAILED: RNCGEN NOT FOUND
    Should Contain    ${output}    16070 - RNW PLAN DOWNLOAD FAILED: WRONG RNC ID IN RNW PLAN

Directactivation error: Two objects in the same plan
    [Documentation]    Direcactivation plan can contain only one MO
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    RNC    create_object_itself=${True}
    ${new_xml} =    upload_plan
    ${plan}=    generate_empty_download_plan    RNC    ${RNC-ID}    update
    add_plan_param    ${plan}    <p name="OMSIpAddress">9.9.9.9</p>
    add_plan_mo    ${plan}    RNAC    ${RNC-ID}/RNAC-1    update
    add_plan_param    ${plan}    <p name="AMRLoadTxPower">2</p>    ${RNC-ID}/RNAC-1
    Log    ${plan}
    Create File    testplan.xml    ${plan}
    upload_a_file    testplan.xml
    ${output}=    direct_activate    testplan.xml    ${false}
    Should Contain    ${output}    RNW DIRECT ACTIVATION FAILED: TOO MANY OBJECTS IN RNW PLAN FILE

Directactivation error: Create RNC operation when RNC object exists
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    RNC    create_object_itself=${True}
    ${plan}=    generate_empty_download_plan    RNC    ${RNC-ID}    create
    add_plan_param    ${plan}    <p name="OMSIpAddress">1.2.3.4</p>
    Log    ${plan}
    Create File    testplan.xml    ${plan}
    upload_a_file    testplan.xml
    ${output}=    direct_activate    testplan.xml    ${false}
    Should Contain    ${output}    RNW DIRECT ACTIVATION FAILED: RNC ALREADY CREATED

Directactivation error: Update RNC with incorrect ID
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    RNC    create_object_itself=${True}
    ${plan}=    generate_empty_download_plan    RNC    RNC-2    update
    add_plan_param    ${plan}    <p name="OMSIpAddress">2.2.2.2</p>
    Log    ${plan}
    Create File    testplan.xml    ${plan}
    upload_a_file    testplan.xml
    ${output}=    direct_activate    testplan.xml    ${false}
    Should Contain    ${output}    RNW DIRECT ACTIVATION FAILED: WRONG RNC ID IN RNW PLAN

Directactivation error: Create RNAC with invalid RNC ID
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    RNAC    create_object_itself=${False}
    ${plan}=    generate_empty_download_plan    RNAC    RNC-2/RNAC-1    create
    add_plan_param    ${plan}    <p name="AMRLoadTxPower">2</p>    RNC-2/RNAC-1
    Log    ${plan}
    Create File    testplan.xml    ${plan}
    upload_a_file    testplan.xml
    ${output}=    direct_activate    testplan.xml    ${false}
    Should Contain    ${output}    RNW DIRECT ACTIVATION FAILED: WRONG RNC ID IN RNW PLAN

Directactivation error: Create RNAC when RNC is not created
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    RNC    create_object_itself=${False}
    delete_object_from_db    RNC
    ${plan}=    generate_empty_download_plan    RNAC    ${RNC-ID}/RNAC-1    create
    add_plan_param    ${plan}    <p name="AMRLoadTxPower">2</p>    ${RNC-ID}/RNAC-1
    Log    ${plan}
    Create File    testplan.xml    ${plan}
    upload_a_file    testplan.xml
    ${output}=    direct_activate    testplan.xml    ${false}
    Should Contain    ${output}    RNW DIRECT ACTIVATION FAILED: WRONG RNC ID IN RNW PLAN

IUO Object MNC checks - mandatory PLMNid is missing from create
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    IUO    create_object_itself=${False}
    ${plan} =    generate_empty_download_plan    IUO    ${RNC-ID}/IUO-1    create
    Log    ${plan}
    Create File    testplan.xml    ${plan}
    upload_a_file    testplan.xml
    ${output}=    download_plan    testplan.xml    should_succeed=${false}
    Should Contain    ${output}    Total of 1 feedback message(s) received.
    Should contain    ${output}    ${RNC-ID}/DN:IUO-1\ \ -> 15383 - IUO PARAMETER CHECKING FAILED: MANDATORY PARAMETERS OF RNW OBJECT MISSING IN RNW PLAN
    Should contain    ${output}    15398 - RNW PLAN DOWNLOAD FAILED: RNW PLAN MANAGER PROGRAM BLOCK HAS REJECTED THE RNW PLAN

IUO Object MNC checks - mandatory PLMNid/MNC is missing from create
    [Tags]    ready-for-a-team-jenkins    nightly-test    Fails-with-org    # because of a different feedback message
    [Setup]    create_base_config_for_object    IUO    create_object_itself=${False}
    ${plan} =    generate_empty_download_plan    IUO    ${RNC-ID}/IUO-1    create
    add_plan_param    ${plan}    <list name="PLMNid">
    add_plan_param    ${plan}    <item>
    add_plan_param    ${plan}    <p name="MCC">123</p>
    add_plan_param    ${plan}    <p name="MNCLength">2</p>
    add_plan_param    ${plan}    </item>
    add_plan_param    ${plan}    </list>
    Log    ${plan}
    Create File    testplan.xml    ${plan}
    upload_a_file    testplan.xml
    ${output}=    download_plan    testplan.xml    should_succeed=${false}
    Should Contain    ${output}    Total of 1 feedback message(s) received.
    Should Contain    ${output}    ${RNC-ID}/DN:IUO-1\ \ -> 15383 - IUO PARAMETER CHECKING FAILED: MANDATORY PARAMETERS OF RNW OBJECT MISSING IN RNW PLAN
    Should Contain    ${output}    15398 - RNW PLAN DOWNLOAD FAILED: RNW PLAN MANAGER PROGRAM BLOCK HAS REJECTED THE RNW PLAN

IUO Object MNC checks - mandatory PLMNid/MNCLength is missing from create
    [Tags]    ready-for-a-team-jenkins    nightly-test    Fails-with-org    # because of a different feedback message
    [Setup]    create_base_config_for_object    IUO    create_object_itself=${False}
    ${plan} =    generate_empty_download_plan    IUO    ${RNC-ID}/IUO-1    create
    add_plan_param    ${plan}    <list name="PLMNid">
    add_plan_param    ${plan}    <item>
    add_plan_param    ${plan}    <p name="MCC">123</p>
    add_plan_param    ${plan}    <p name="MNC">567</p>
    add_plan_param    ${plan}    </item>
    add_plan_param    ${plan}    </list>
    Log    ${plan}
    Create File    testplan.xml    ${plan}
    upload_a_file    testplan.xml
    ${output}=    download_plan    testplan.xml    should_succeed=${false}
    Should Contain    ${output}    ${RNC-ID}/DN:IUO-1\ \ -> 15383 - IUO PARAMETER CHECKING FAILED: MANDATORY PARAMETERS OF RNW OBJECT MISSING IN RNW PLAN
    Should Contain    ${output}    15398 - RNW PLAN DOWNLOAD FAILED: RNW PLAN MANAGER PROGRAM BLOCK HAS REJECTED THE RNW PLAN

IUO Object MNC checks - SharedAreaPLMNid SharedAreaMNC and SharedAreaMNClength missing
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    IUO    create_object_itself=${False}
    ${plan} =    generate_empty_download_plan    IUO    ${RNC-ID}/IUO-1    create
    add_plan_param    ${plan}    <list name="PLMNid">
    add_plan_param    ${plan}    <item>
    add_plan_param    ${plan}    <p name="MCC">123</p>
    add_plan_param    ${plan}    <p name="MNC">56</p>
    add_plan_param    ${plan}    <p name="MNCLength">2</p>
    add_plan_param    ${plan}    </item>
    add_plan_param    ${plan}    </list>
    add_plan_param    ${plan}    <list name="SharedAreaPLMNid">
    add_plan_param    ${plan}    <item>
    add_plan_param    ${plan}    <p name="SharedAreaMCC">123</p>
    add_plan_param    ${plan}    </item>
    add_plan_param    ${plan}    </list>
    Log    ${plan}
    Create File    testplan.xml    ${plan}
    upload_a_file    testplan.xml
    ${output}=    download_plan    testplan.xml    should_succeed=${true}
    ${ul_xml}=    upload_plan
    ${val}=    get_plan_param_value    ${ul_xml}    ${RNC-ID}/IUO-1    SharedAreaMCC
    Should Be True    ${val}==123
    ${val}=    get_plan_param_value    ${ul_xml}    ${RNC-ID}/IUO-1    SharedAreaMNC
    Should Be True    ${val}==65535
    ${val}=    get_plan_param_value    ${ul_xml}    ${RNC-ID}/IUO-1    SharedAreaMNClength
    Should Be True    ${val}==2

IUO Object MNC checks - SharedAreaPLMNid SharedAreaMNC and SharedAreaMNClength default values
    [Tags]    ready-for-a-team-jenkins
    [Setup]    create_base_config_for_object    IUO    create_object_itself=${False}
    ${plan} =    generate_empty_download_plan    IUO    ${RNC-ID}/IUO-1    create
    add_plan_param    ${plan}    <list name="PLMNid">
    add_plan_param    ${plan}    <item>
    add_plan_param    ${plan}    <p name="MCC">123</p>
    add_plan_param    ${plan}    <p name="MNC">56</p>
    add_plan_param    ${plan}    <p name="MNCLength">2</p>
    add_plan_param    ${plan}    </item>
    add_plan_param    ${plan}    </list>
    add_plan_param    ${plan}    <list name="SharedAreaPLMNid">
    add_plan_param    ${plan}    <item>
    add_plan_param    ${plan}    <p name="SharedAreaMNC">65535</p>
    add_plan_param    ${plan}    <p name="SharedAreaMNCLength">2</p>
    add_plan_param    ${plan}    </item>
    add_plan_param    ${plan}    </list>
    Log    ${plan}
    Create File    testplan.xml    ${plan}
    upload_a_file    testplan.xml
    ${output}=    download_plan    testplan.xml    should_succeed=${true}
    ${ul_xml}=    upload_plan
    ${val}=    get_plan_param_value    ${ul_xml}    ${RNC-ID}/IUO-1    SharedAreaMNC
    Should Be True    ${val}==65535
    ${val}=    get_plan_param_value    ${ul_xml}    ${RNC-ID}/IUO-1    SharedAreaMNClength
    Should Be True    ${val}==2

IUO Object MNC checks - ICRPLMNid MNC and MNClength default values
    [Tags]    ready-for-a-team-jenkins
    [Setup]    create_base_config_for_object    IUO    create_object_itself=${False}
    ${plan} =    generate_empty_download_plan    IUO    ${RNC-ID}/IUO-1    create
    add_plan_param    ${plan}    <list name="PLMNid">
    add_plan_param    ${plan}    <item>
    add_plan_param    ${plan}    <p name="MCC">123</p>
    add_plan_param    ${plan}    <p name="MNC">56</p>
    add_plan_param    ${plan}    <p name="MNCLength">2</p>
    add_plan_param    ${plan}    </item>
    add_plan_param    ${plan}    </list>
    add_plan_param    ${plan}    <list name="ICRPLMNid">
    add_plan_param    ${plan}    <item>
    add_plan_param    ${plan}    <p name="MNC">65535</p>
    add_plan_param    ${plan}    <p name="MNCLength">2</p>
    add_plan_param    ${plan}    </item>
    add_plan_param    ${plan}    </list>
    Log    ${plan}
    Create File    testplan.xml    ${plan}
    upload_a_file    testplan.xml
    ${output}=    download_plan    testplan.xml    should_succeed=${true}
    ${ul_xml}=    upload_plan
    # XXX Todo: fix KW, needs to define list name as well
    ${val}=    get_plan_param_value    ${ul_xml}    ${RNC-ID}/IUO-1    MNC
    Should Be True    ${val}==65535
    ${val}=    get_plan_param_value    ${ul_xml}    ${RNC-ID}/IUO-1    MNCLength
    Should Be True    ${val}==2

Max amount of object instances (IUO)
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    IUO    create_object_itself=${False}
    ${output}=    download_plan    RNWPLAND_IUO_4_instances.XML    should_succeed=${true}
    ${ul_xml}=    upload_plan
    Should Contain    ${ul_xml}    ${RNC-ID}/IUO-2
    Should Contain    ${ul_xml}    ${RNC-ID}/IUO-3
    Should Contain    ${ul_xml}    ${RNC-ID}/IUO-4
    Should Contain    ${ul_xml}    ${RNC-ID}/IUO-255
    ${output}=    download_plan    RNWPLAND_IUO_4_instances_delete.XML    should_succeed=${true}

COCO Object CDVT chekcs - mandatory CDVT parameters are missing
    [Documentation]    When CalculateCDVT=0 and CreateATMTP=1, the CDVT parameters are mandatory
    [Tags]    ready-for-a-team-jenkins    nightly-test    Fails-with-org    # because of a different feedback message
    [Setup]    create_base_config_for_object    COCO    create_object_itself=${False}
    ${ismcRNC} =    ismcRNC
    Run Keyword If    ${ismcRNC}==${false}    COCO_atm_interface_creation
    ${output} =    Run Keyword If    ${ismcRNC}==${false}    download_plan    RNWPLAND_COCO_CDVT_params_missing.XML    should_succeed=${False}
    # This is the command output with the org version
    # Run Keyword If    ${ismcRNC}==${false}    Should Contain    ${output}    ${RNC-ID}/DN:COCO-1\ \ -> 15384 - COCO PARAMETER CHECKING FAILED: ILLEGAL VALUES FOR RNW OBJECT PARAMETERS IN RNW PLAN
    Run KeywordIf    ${ismcRNC}==${false}    Should Contain    ${output}    ${RNC-ID}/DN:COCO-1\ \ -> 15383 - COCO PARAMETER CHECKING FAILED: MANDATORY PARAMETERS OF RNW OBJECT MISSING IN RNW PLAN
    # XXX Should the new version also list the missing mandatory parameters:
    # AAL2SigCDVT01Egr/Ing, AAL2UPCDVT01Egr/Ing, VPLTPCDVT01Egr, CNBAPCDVT01Egr/Ing, DNBAPCDVT01Egr/Ing

COCO Object CDVT check - mandatory CDVT parameters are given
    [Documentation]    When CalculateCDVT=0 and CreateATMTP=1, the CDVT parameters can be given. Test case checks them from the upload plan.
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    COCO    create_object_itself=${False}
    ${ismcRNC} =    ismcRNC
    Run Keyword If    ${ismcRNC}==${false}    COCO_atm_interface_creation
    ${output} =    Run Keyword If    ${ismcRNC}==${false}    download_plan    RNWPLAND_COCO_CDVT_params.XML    should_succeed=${True}
    ${ul_xml} =    Run Keyword If    ${ismcRNC}==${false}    upload_plan
    ${val}=    Run Keyword If    ${ismcRNC}==${false}    get_plan_param_value    ${ul_xml}    ${RNC-ID}/COCO-1    AAL2SigCDVT01Egr
    Run Keyword If    ${ismcRNC}==${false}    Should Be True    ${val}==37000
    ${val}=    Run Keyword If    ${ismcRNC}==${false}    get_plan_param_value    ${ul_xml}    ${RNC-ID}/COCO-1    AAL2SigCDVT01Ing
    Run Keyword If    ${ismcRNC}==${false}    Should Be True    ${val}==39000
    ${val}=    Run Keyword If    ${ismcRNC}==${false}    get_plan_param_value    ${ul_xml}    ${RNC-ID}/COCO-1    AAL2UPCDVT01Egr
    Run Keyword If    ${ismcRNC}==${false}    Should Be True    ${val}==4200
    ${val}=    Run Keyword If    ${ismcRNC}==${false}    get_plan_param_value    ${ul_xml}    ${RNC-ID}/COCO-1    AAL2UPCDVT01Ing
    Run Keyword If    ${ismcRNC}==${false}    Should Be True    ${val}==8200
    ${val}=    Run Keyword If    ${ismcRNC}==${false}    get_plan_param_value    ${ul_xml}    ${RNC-ID}/COCO-1    VPLTPCDVT01Egr
    Run Keyword If    ${ismcRNC}==${false}    Should Be True    ${val}==2000
    ${val}=    Run Keyword If    ${ismcRNC}==${false}    get_plan_param_value    ${ul_xml}    ${RNC-ID}/COCO-1    CNBAPCDVT01Egr
    Run Keyword If    ${ismcRNC}==${false}    Should Be True    ${val}==333000
    ${val}=    Run Keyword If    ${ismcRNC}==${false}    get_plan_param_value    ${ul_xml}    ${RNC-ID}/COCO-1    CNBAPCDVT01Ing
    Run Keyword If    ${ismcRNC}==${false}    Should Be True    ${val}==250000
    ${val}=    Run Keyword If    ${ismcRNC}==${false}    get_plan_param_value    ${ul_xml}    ${RNC-ID}/COCO-1    DNBAPCDVT01Egr
    Run Keyword If    ${ismcRNC}==${false}    Should Be True    ${val}==30000
    ${val}=    Run Keyword If    ${ismcRNC}==${false}    get_plan_param_value    ${ul_xml}    ${RNC-ID}/COCO-1    DNBAPCDVT01Ing
    Run Keyword If    ${ismcRNC}==${false}    Should Be True    ${val}==43000

COCO Object CDVT check - CDVT parameter modification
    [Documentation]    When CalculateCDVT=0 and CreateATMTP=1 in the db, the CDVT parameters can be modified.
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    COCO    create_object_itself=${False}
    ${ismcRNC} =    ismcRNC
    Run Keyword If    ${ismcRNC}==${false}    COCO_atm_interface_creation
    # Download a plan where CalculateCDVT=0 and CreateATMTP=1
    ${output} =    Run Keyword If    ${ismcRNC}==${false}    download_plan    RNWPLAND_COCO_CDVT_params.XML    should_succeed=${True}
    # Modify the CDVT parameters
    ${plan} =    Run Keyword If    ${ismcRNC}==${false}    generate_empty_download_plan    COCO    ${RNC-ID}/COCO-1    update
    Run Keyword If    ${ismcRNC}==${false}    add_plan_param    ${plan}    <list name="CNBAPTP">
    Run Keyword If    ${ismcRNC}==${false}    add_plan_param    ${plan}    <item>
    Run Keyword If    ${ismcRNC}==${false}    add_plan_param    ${plan}    <p name="CNBAPCDVT01Egr">333010</p>
    Run Keyword If    ${ismcRNC}==${false}    add_plan_param    ${plan}    <p name="CNBAPCDVT01Ing">250010</p>
    Run Keyword If    ${ismcRNC}==${false}    add_plan_param    ${plan}    <p name="CNBAPPCR01Egr">3</p>
    Run Keyword If    ${ismcRNC}==${false}    add_plan_param    ${plan}    <p name="CNBAPPCR01Ing">4</p>
    Run Keyword If    ${ismcRNC}==${false}    add_plan_param    ${plan}    <p name="CNBAPTPATMIfId">1</p>
    Run Keyword If    ${ismcRNC}==${false}    add_plan_param    ${plan}    <p name="CNBAPVCI">33</p>
    Run Keyword If    ${ismcRNC}==${false}    add_plan_param    ${plan}    <p name="CNBAPVPI">1</p>
    Run Keyword If    ${ismcRNC}==${false}    add_plan_param    ${plan}    </item>
    Run Keyword If    ${ismcRNC}==${false}    add_plan_param    ${plan}    </list>
    Run Keyword If    ${ismcRNC}==${false}    Log    ${plan}
    Run Keyword If    ${ismcRNC}==${false}    Create File    testplan.xml    ${plan}
    Run Keyword If    ${ismcRNC}==${false}    upload_a_file    testplan.xml
    ${output}=    Run Keyword If    ${ismcRNC}==${false}    download_plan    testplan.xml    should_succeed=${true}
    # Upload and check that the parameter values were modified correctly
    ${ul_xml} =    Run Keyword If    ${ismcRNC}==${false}    upload_plan
    ${val}=    Run Keyword If    ${ismcRNC}==${false}    get_plan_param_value    ${ul_xml}    ${RNC-ID}/COCO-1    CNBAPCDVT01Egr
    Run Keyword If    ${ismcRNC}==${false}    Should Be True    ${val}==333010
    ${val}=    Run Keyword If    ${ismcRNC}==${false}    get_plan_param_value    ${ul_xml}    ${RNC-ID}/COCO-1    CNBAPCDVT01Ing
    Run Keyword If    ${ismcRNC}==${false}    Should Be True    ${val}==250010

COCO Object CDVT check - CDVT parameter modification ignored
    [Documentation]    When not CalculateCDVT=0 and CreateATMTP=1 in the db, modification of CDVT parameters is ignored.
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    COCO    create_object_itself=${False}
    ${ismcRNC} =    ismcRNC
    Run Keyword If    ${ismcRNC}==${false}    COCO_atm_interface_creation
    # Download the minimal plan where default values are set for CalculateCDVT=1 and CreateATMTP=1
    ${output} =    Run Keyword If    ${ismcRNC}==${false}    download_plan    RNWPLAND_COCO_minimal.XML    should_succeed=${True}
    # Modify the CDVT parameters
    ${plan} =    Run Keyword If    ${ismcRNC}==${false}    generate_empty_download_plan    COCO    ${RNC-ID}/COCO-1    update
    Run Keyword If    ${ismcRNC}==${false}    add_plan_param    ${plan}    <list name="CNBAPTP">
    Run Keyword If    ${ismcRNC}==${false}    add_plan_param    ${plan}    <item>
    Run Keyword If    ${ismcRNC}==${false}    add_plan_param    ${plan}    <p name="CNBAPCDVT01Egr">333010</p>
    Run Keyword If    ${ismcRNC}==${false}    add_plan_param    ${plan}    <p name="CNBAPCDVT01Ing">250010</p>
    Run Keyword If    ${ismcRNC}==${false}    add_plan_param    ${plan}    <p name="CNBAPPCR01Egr">3</p>
    Run Keyword If    ${ismcRNC}==${false}    add_plan_param    ${plan}    <p name="CNBAPPCR01Ing">4</p>
    Run Keyword If    ${ismcRNC}==${false}    add_plan_param    ${plan}    <p name="CNBAPTPATMIfId">1</p>
    Run Keyword If    ${ismcRNC}==${false}    add_plan_param    ${plan}    <p name="CNBAPVCI">33</p>
    Run Keyword If    ${ismcRNC}==${false}    add_plan_param    ${plan}    <p name="CNBAPVPI">1</p>
    Run Keyword If    ${ismcRNC}==${false}    add_plan_param    ${plan}    </item>
    Run Keyword If    ${ismcRNC}==${false}    add_plan_param    ${plan}    </list>
    Run Keyword If    ${ismcRNC}==${false}    Log    ${plan}
    Run Keyword If    ${ismcRNC}==${false}    Create File    testplan.xml    ${plan}
    Run Keyword If    ${ismcRNC}==${false}    upload_a_file    testplan.xml
    ${output}=    Run Keyword If    ${ismcRNC}==${false}    download_plan    testplan.xml    should_succeed=${true}
    # Upload and check that the parameter values were not modified
    ${ul_xml} =    Run Keyword If    ${ismcRNC}==${false}    upload_plan
    ${val}=    Run Keyword If    ${ismcRNC}==${false}    get_plan_param_value    ${ul_xml}    ${RNC-ID}/COCO-1    CNBAPCDVT01Egr
    Run Keyword If    ${ismcRNC}==${false}    Should Not Be True    ${val}==333010
    ${val}=    Run Keyword If    ${ismcRNC}==${false}    get_plan_param_value    ${ul_xml}    ${RNC-ID}/COCO-1    CNBAPCDVT01Ing
    Run Keyword If    ${ismcRNC}==${false}    Should Not Be True    ${val}==250010

COCO Object VPLTP list check - list can contain multiple items only if flex_vpc_enabled feature is ON
    [Documentation]    When flex_vpc_enabled feature is OFF, VPLTP list must not contain more than one item
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    COCO    create_object_itself=${False}
    ${ismcRNC} =    ismcRNC
    Run Keyword If    ${ismcRNC}==${false}    COCO_atm_interface_creation
    # When feature is ON, multiple items in VPLTP list should be accepted
    ${output}=    Run Keyword If    ${ismcRNC}==${false}    download_plan    RNWPLAND_COCO_VPLTP_list.XML    should_succeed=${True}    activate=${False}
    Run Keyword If    ${ismcRNC}==${false}    Should Not Contain    ${output}    ${RNC-ID}/DN:COCO-1\ \ -> Parameter VPLTPList skipped because of missing license
    # disable feature opt_type_t_flex_vpc_enabled_c --> VPLTP can contain only one item
    Run Keyword If    ${ismcRNC}==${false}    disable_optionality    32
    ${output}=    Run Keyword If    ${ismcRNC}==${false}    download_plan    RNWPLAND_COCO_VPLTP_list.XML    should_succeed=${True}    activate=${False}
    Run Keyword If    ${ismcRNC}==${false}    Should Contain    ${output}    ${RNC-ID}/DN:COCO-1\ \ -> Parameter VPLTPList skipped because of missing license
    [Teardown]    License Check Teardown

COCO Object GenerateAAL2Num check - GenerateAAL2Num is none
    [Documentation]    When GenerateAAL2Num is none, values for AAL2PathId and COCOA2EA are taken from the plan
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    COCO    create_object_itself=${False}
    ${ismcRNC} =    ismcRNC
    Run Keyword If    ${ismcRNC}==${false}    COCO_atm_interface_creation
    Run Keyword If    ${ismcRNC}==${false}    download_plan    RNWPLAND_COCO_GenerateAAL2Num_none.XML    should_succeed=${True}
    ${ul_xml} =    Run Keyword If    ${ismcRNC}==${false}    upload_plan
    Run Keyword If    ${ismcRNC}==${false}    Should Contain    ${ul_xml}    <p name="AAL2PathId">1</p>
    Run Keyword If    ${ismcRNC}==${false}    Should Contain    ${ul_xml}    <p name="COCOA2EA">1</p>

COCO Object GenerateAAL2Num check - GenerateAAL2Num is not none
    [Documentation]    When GenerateAAL2Num is not none (default 2 in minimal plan), values for AAL2PathId and COCOA2EA are not taken from the plan, but generated
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    COCO    create_object_itself=${False}
    ${ismcRNC} =    ismcRNC
    Run Keyword If    ${ismcRNC}==${false}    COCO_atm_interface_creation
    Run Keyword If    ${ismcRNC}==${false}    download_plan    RNWPLAND_COCO_minimal.XML    should_succeed=${True}
    ${ul_xml} =    Run Keyword If    ${ismcRNC}==${false}    upload_plan
    Run Keyword If    ${ismcRNC}==${false}    Should Not Contain    ${ul_xml}    <p name="AAL2PathId">1</p>
    Run Keyword If    ${ismcRNC}==${false}    Should Not Contain    ${ul_xml}    <p name="COCOA2EA">1</p>

IUR Object NRncId check - Values over 4095 are accepted when opt_type_t_ext_rnc_in_use_c is ON
    [Documentation]    When opt_type_t_ext_rnc_in_use_c is ON, parameter value range 1-65534
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    IUR    create_object_itself=${False}
    ${plan} =    generate_empty_download_plan    IUR    ${RNC-ID}/IUR-1    create
    add_plan_param    ${plan}    <p name="NRncId">4096</p>
    add_plan_param    ${plan}    <p name="NRncNetworkInd">255</p>
    add_plan_param    ${plan}    <p name="NRncVersion">5</p>
    add_plan_param    ${plan}    <p name="NRncSignPointCode">1</p>
    add_plan_param    ${plan}    <p name="NeighbouringRNWElement">1</p>
    add_plan_param    ${plan}    <list name="NeighbouringPLMNid">
    add_plan_param    ${plan}    <item>
    add_plan_param    ${plan}    <p name="MCC">1</p>
    add_plan_param    ${plan}    <p name="MNC">2</p>
    add_plan_param    ${plan}    </item>
    add_plan_param    ${plan}    </list>
    Log    ${plan}
    Create File    testplan.xml    ${plan}
    upload_a_file    testplan.xml
    # When feature is ON, NRncId value 4096 is accepted
    enable_optionality    193
    ${output}=    download_plan    testplan.xml    should_succeed=${true}
    [Teardown]    License Check Teardown

IUR Object NRncId check - Values over 4095 are not accepted when opt_type_t_ext_rnc_in_use_c is OFF
    [Documentation]    When opt_type_t_ext_rnc_in_use_c is OFF, parameter value range is 1-4095
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    IUR    create_object_itself=${False}
    ${plan} =    generate_empty_download_plan    IUR    ${RNC-ID}/IUR-1    create
    add_plan_param    ${plan}    <p name="NRncId">4096</p>
    add_plan_param    ${plan}    <p name="NRncNetworkInd">255</p>
    add_plan_param    ${plan}    <p name="NRncVersion">5</p>
    add_plan_param    ${plan}    <p name="NRncSignPointCode">1</p>
    add_plan_param    ${plan}    <p name="NeighbouringRNWElement">1</p>
    add_plan_param    ${plan}    <list name="NeighbouringPLMNid">
    add_plan_param    ${plan}    <item>
    add_plan_param    ${plan}    <p name="MCC">1</p>
    add_plan_param    ${plan}    <p name="MNC">2</p>
    add_plan_param    ${plan}    </item>
    add_plan_param    ${plan}    </list>
    Log    ${plan}
    Create File    testplan.xml    ${plan}
    upload_a_file    testplan.xml
    # When feature is ON, NRncId value 4096 is accepted
    disable_optionality    193
    ${output}=    download_plan    testplan.xml    should_succeed=${false}
    Should Contain    ${output}    If option EXTENDED RNC IN USE is OFF then value of NRncId is in range 1-4095
    [Teardown]    License Check Teardown

CMOB Object Forced CMOB check - Forced CMOB can be modified
    [Documentation]    Forced CMOB (id 1,2,3) can be modified
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    CMOB    create_object_itself=${True}
    ${plan} =    generate_empty_download_plan    CMOB    ${RNC-ID}/CMOB-1    create
    add_plan_param    ${plan}    <p name="RestrictionGroupName">NewName</p>
    Log    ${plan}
    Create File    testplan.xml    ${plan}
    upload_a_file    testplan.xml
    ${output}=    download_plan    testplan.xml    should_succeed=${True}
    ${ul_xml}=    upload_plan
    Should Contain    ${ul_xml}    <p name="RestrictionGroupName">NewName</p>

CMOB Object Forced CMOB check - Forced CMOB cannot be created
    [Documentation]    Forced CMOB activation should fail, if the object does not already exist in DB
    [Tags]    ready-for-a-team-jenkins    nightly-test    obsolete
    [Setup]    create_base_config_for_object    CMOB    create_object_itself=${False}
    remove_forced_cmob_objects
    ${plan} =    generate_empty_download_plan    CMOB    ${RNC-ID}/CMOB-1    create
    add_plan_param    ${plan}    <p name="RestrictionGroupType">0</p>
    Log    ${plan}
    Create File    testplan.xml    ${plan}
    upload_a_file    testplan.xml
    ${output}=    download_plan    testplan.xml    should_succeed=${True}    should_activation_succeed=${False}
    Should Contain    ${output}    ${RNC-ID}/DN:CMOB-1\ \ -> 16858 - CMOB CREATION FAILED: CMOB NOT FOUND
    Should Contain    ${output}    16858 - RNW PLAN ACTIVATION FAILED: CMOB NOT FOUND
    [Teardown]    CMOB forced object Teardown

CMOB Object RestrictionGroupType check - Normal CMOB cannot contain forced CMOB's RestrictionGroupType
    [Documentation]    RestrictionGroupTypes 0-2 are reserved for forced CMOBs, only
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    CMOB    create_object_itself=${False}
    ${plan} =    generate_empty_download_plan    CMOB    ${RNC-ID}/CMOB-4    create
    add_plan_param    ${plan}    <p name="RestrictionGroupType">1</p>
    Log    ${plan}
    Create File    testplan.xml    ${plan}
    upload_a_file    testplan.xml
    ${output}=    download_plan    testplan.xml    should_succeed=${False}
    Should Contain    ${output}    ${RNC-ID}/DN:CMOB-4\ \ -> 15384 - CMOB PARAMETER CHECKING FAILED: ILLEGAL VALUES FOR RNW OBJECT PARAMETERS IN RNW PLAN

VCEL Object WACSetIdentifier check - RAYMAN creates default WAC
    [Documentation]    This test case tests, that RAYMAN creates the default WAC object if it does not exist
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    VCEL    create_object_itself=${False}
    delete_object_from_db    WCEL    # just in case: WCEL must be deleted, so that WAC can be deleted
    delete_object_from_db    WAC
    ${output}=    download_plan    RNWPLAND_VCEL_minimal.XML    should_succeed=${True}
    ${output} =    upload_plan
    Should Contain    ${output}    WAC-1

VCEL Object WACSetIdentifier check - RAYMAN does not create default WAC, when WACSetIdentifier is something else than 1
    [Documentation]    This test case tests, that RAYMAN does not create the default WAC
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    VCEL    create_object_itself=${False}
    delete_object_from_db    WCEL    # just in case: WCEL must be deleted, so that WAC can be deleted
    delete_object_from_db    WAC
    # Create WAC-2
    ${plan} =    generate_empty_download_plan    WAC    ${RNC-ID}/WAC-2    create
    Create File    testplan.xml    ${plan}
    upload_a_file    testplan.xml
    ${output}=    download_plan    testplan.xml    should_succeed=${True}
    # Create VCEL with WACSetIdentifier 2
    ${plan} =    generate_empty_download_plan    VCEL    ${RNC-ID}/VBTS-1/VCEL-1    create
    add_plan_param    ${plan}    <p name="WACSetIdentifier">2</p>
    add_plan_param    ${plan}    <p name="EbNoSetIdentifier">1</p>
    add_plan_param    ${plan}    <p name="LAC">65535</p>
    add_plan_param    ${plan}    <p name="NrtFmcsIdentifier">1</p>
    add_plan_param    ${plan}    <p name="NrtHopsIdentifier">1</p>
    add_plan_param    ${plan}    <p name="RAC">255</p>
    add_plan_param    ${plan}    <p name="RtFmcsIdentifier">1</p>
    add_plan_param    ${plan}    <p name="RtHopsIdentifier">1</p>
    Create File    testplan.xml    ${plan}
    upload_a_file    testplan.xml
    ${output}=    download_plan    testplan.xml    should_succeed=${True}
    # Check from upload plan that 1) default WAC not created and 2) WACSetIdentifier is correct
    ${output} =    upload_plan
    Should Not Contain    ${output}    WAC-1
    Should Contain    ${output}    <p name="WACSetIdentifier">2</p>
    [Teardown]    Delete WAC-2 teardown

VCEL Object WACSetIdentifier check - WAC object does not exist in db
    [Documentation]    This test case tests, that RAYMAN does not create the default WAC
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    VCEL    create_object_itself=${False}
    # Create VCEL with WACSetIdentifier 2
    ${plan} =    generate_empty_download_plan    VCEL    ${RNC-ID}/VBTS-1/VCEL-1    create
    add_plan_param    ${plan}    <p name="WACSetIdentifier">2</p>
    add_plan_param    ${plan}    <p name="EbNoSetIdentifier">1</p>
    add_plan_param    ${plan}    <p name="LAC">65535</p>
    add_plan_param    ${plan}    <p name="NrtFmcsIdentifier">1</p>
    add_plan_param    ${plan}    <p name="NrtHopsIdentifier">1</p>
    add_plan_param    ${plan}    <p name="RAC">255</p>
    add_plan_param    ${plan}    <p name="RtFmcsIdentifier">1</p>
    add_plan_param    ${plan}    <p name="RtHopsIdentifier">1</p>
    Create File    testplan.xml    ${plan}
    upload_a_file    testplan.xml
    ${output}=    download_plan    testplan.xml    should_succeed=${False}
    Should Contain    ${output}    ${RNC-ID}/DN:VBTS-1/VCEL-1\ \ -> 1616 - VCEL CREATION FAILED: THE WAC OBJECT COULD NOT BE FOUND IN THE RADIO NETWORK DATABASE

VCEL Object WACSetIdentifier check - modification of WACSetIdentifier
    [Documentation]    This test case tests, that RAYMAN returns an error, if WACSetIdentifier is tried to be modified, but WAC object does not exist
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    VCEL    create_object_itself=${True}
    ${plan} =    generate_empty_download_plan    VCEL    ${RNC-ID}/VBTS-1/VCEL-1    update
    add_plan_param    ${plan}    <p name="WACSetIdentifier">2</p>
    Create File    testplan.xml    ${plan}
    upload_a_file    testplan.xml
    ${output}=    download_plan    testplan.xml    should_succeed=${False}
    Should Contain    ${output}    ${RNC-ID}/DN:VBTS-1/VCEL-1\ \ -> 1616 - VCEL MODIFICATION FAILED: THE WAC OBJECT COULD NOT BE FOUND IN THE RADIO NETWORK DATABASE
    # Create WAC-2
    ${plan} =    generate_empty_download_plan    WAC    ${RNC-ID}/WAC-2    create
    Create File    testplan.xml    ${plan}
    upload_a_file    testplan.xml
    ${output}=    download_plan    testplan.xml    should_succeed=${True}
    # Now modification should succeed
    ${output}=    download_plan    testplan.xml    should_succeed=${True}
    [Teardown]    Delete WAC-2 teardown

VCEL Object id check - VCEL creation with incorrect VBTS id
    [Documentation]    VCEL creation fails, if VBTS id is incorrect
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    VCEL    create_object_itself=${False}
    ${plan} =    generate_empty_download_plan    VCEL    ${RNC-ID}/VBTS-2/VCEL-1    create
    add_plan_param    ${plan}    <p name="EbNoSetIdentifier">1</p>
    add_plan_param    ${plan}    <p name="LAC">65535</p>
    add_plan_param    ${plan}    <p name="NrtFmcsIdentifier">1</p>
    add_plan_param    ${plan}    <p name="NrtHopsIdentifier">1</p>
    add_plan_param    ${plan}    <p name="RAC">255</p>
    add_plan_param    ${plan}    <p name="RtFmcsIdentifier">1</p>
    add_plan_param    ${plan}    <p name="RtHopsIdentifier">1</p>
    Create File    testplan.xml    ${plan}
    upload_a_file    testplan.xml
    ${output}=    download_plan    testplan.xml    should_succeed=${False}
    Should Contain    ${output}    ${RNC-ID}/DN:VBTS-2/VCEL-1\ \ -> 17691 - VCEL CREATION FAILED: VBTS NOT FOUND

VCEL Object id check - VCEL modification with incorrect VBTS id
    [Documentation]    VCEL modification fails, if VBTS id is incorrect
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    VCEL    create_object_itself=${True}
    ${plan} =    generate_empty_download_plan    VCEL    ${RNC-ID}/VBTS-2/VCEL-1    update
    add_plan_param    ${plan}    <p name="InitialBitRateDL">128</p>
    Create File    testplan.xml    ${plan}
    upload_a_file    testplan.xml
    ${output}=    download_plan    testplan.xml    should_succeed=${False}
    Should Contain    ${output}    ${RNC-ID}/DN:VBTS-2/VCEL-1\ \ -> 17691 - VCEL MODIFICATION FAILED: VBTS NOT FOUND

VCEL Object id check - VCEL deletion with incorrect VBTS id
    [Documentation]    VCEL deletion fails, if VBTS id is incorrect
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    VCEL    create_object_itself=${True}
    ${plan} =    generate_empty_download_plan    VCEL    ${RNC-ID}/VBTS-2/VCEL-1    delete
    Create File    testplan.xml    ${plan}
    upload_a_file    testplan.xml
    ${output}=    download_plan    testplan.xml    should_succeed=${False}
    Should Contain    ${output}    ${RNC-ID}/DN:VBTS-2/VCEL-1\ \ -> 17691 - VCEL DELETION FAILED: VBTS NOT FOUND

VCEL Object id check - VCEL creation with incorrect VCEL id
    [Documentation]    VCEL creation fails, if VCEL id is incorrect
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    VCEL    create_object_itself=${False}
    ${plan} =    generate_empty_download_plan    VCEL    ${RNC-ID}/VBTS-1/VCEL-3    create
    add_plan_param    ${plan}    <p name="EbNoSetIdentifier">1</p>
    add_plan_param    ${plan}    <p name="LAC">65535</p>
    add_plan_param    ${plan}    <p name="NrtFmcsIdentifier">1</p>
    add_plan_param    ${plan}    <p name="NrtHopsIdentifier">1</p>
    add_plan_param    ${plan}    <p name="RAC">255</p>
    add_plan_param    ${plan}    <p name="RtFmcsIdentifier">1</p>
    add_plan_param    ${plan}    <p name="RtHopsIdentifier">1</p>
    Create File    testplan.xml    ${plan}
    upload_a_file    testplan.xml
    ${output}=    download_plan    testplan.xml    should_succeed=${False}
    Should Contain    ${output}    ${RNC-ID}/DN:VBTS-1/VCEL-3\ \ -> 15384 - VCEL PARAMETER CHECKING FAILED: ILLEGAL VALUES FOR RNW OBJECT PARAMETERS IN RNW PLAN

VCEL Object id check - VCEL modification with incorrect VCEL id
    [Documentation]    VCEL modification fails, if VCEL id is incorrect
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    VCEL    create_object_itself=${True}
    ${plan} =    generate_empty_download_plan    VCEL    ${RNC-ID}/VBTS-1/VCEL-3    update
    add_plan_param    ${plan}    <p name="InitialBitRateDL">128</p>
    Create File    testplan.xml    ${plan}
    upload_a_file    testplan.xml
    ${output}=    download_plan    testplan.xml    should_succeed=${False}
    Should Contain    ${output}    ${RNC-ID}/DN:VBTS-1/VCEL-3\ \ -> 15384 - VCEL PARAMETER CHECKING FAILED: ILLEGAL VALUES FOR RNW OBJECT PARAMETERS IN RNW PLAN

VCEL Object id check - VCEL deletion with incorrect VCEL id
    [Documentation]    VCEL deletion succeeds, if VCEL id is incorrect, but notifies about non-existent VCEL object
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    VCEL    create_object_itself=${True}
    ${plan} =    generate_empty_download_plan    VCEL    ${RNC-ID}/VBTS-1/VCEL-6    delete
    Create File    testplan.xml    ${plan}
    upload_a_file    testplan.xml
    ${output}=    download_plan    testplan.xml    should_succeed=${True}
    Should Contain    ${output}    VCEL DELETION FAILED: OBJECT DOES NOT EXIST

WSMLC Object id check - WSMLC creation with incorrect WSMLC id
    [Documentation]    WSMLC creation fails, if WSMLC id is incorrect
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    WSMLC    create_object_itself=${False}
    ${plan} =    generate_empty_download_plan    WSMLC    ${RNC-ID}/WSMLC-9    create
    add_plan_param    ${plan}    <p name="ConfAreaLevel">1</p>
    Create File    testplan.xml    ${plan}
    upload_a_file    testplan.xml
    ${output}=    download_plan    testplan.xml    should_succeed=${False}
    Should Contain    ${output}    WSMLC PARAMETER CHECKING FAILED: ILLEGAL VALUES FOR RNW OBJECT PARAMETERS IN RNW PLAN

WSMLC Object id check - WSMLC modification with incorrect WSMLC id
    [Documentation]    WSMLC modification fails, if WSMLC id is incorrect
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    WSMLC    create_object_itself=${True}
    ${plan} =    generate_empty_download_plan    WSMLC    ${RNC-ID}/WSMLC-9    update
    add_plan_param    ${plan}    <p name="SignallingPointCodeOfSAS">128</p>
    Create File    testplan.xml    ${plan}
    upload_a_file    testplan.xml
    ${output}=    download_plan    testplan.xml    should_succeed=${False}
    Should Contain    ${output}    ${RNC-ID}/DN:WSMLC-9\ \ -> 15384 - WSMLC PARAMETER CHECKING FAILED: ILLEGAL VALUES FOR RNW OBJECT PARAMETERS IN RNW PLAN

WSMLC Object id check - WSMLC deletion with incorrect WSMLC id
    [Documentation]    WSMLC deletion succeeds, if WSMLC id is incorrect, but notifies about non-existent WSMLC object
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    WSMLC    create_object_itself=${True}
    ${plan} =    generate_empty_download_plan    WSMLC    ${RNC-ID}/WSMLC-9    delete
    Create File    testplan.xml    ${plan}
    upload_a_file    testplan.xml
    ${output}=    download_plan    testplan.xml    should_succeed=${True}
    Should Contain    ${output}    WSMLC DELETION FAILED: OBJECT DOES NOT EXIST

WSMLC Object id check - WSMLC DA deletion with incorrect WSMLC id
    [Documentation]    WSMLC deletion succeeds, if WSMLC id is incorrect, but notifies about non-existent WSMLC object
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    WSMLC    create_object_itself=${True}
    ${plan} =    generate_empty_download_plan    WSMLC    ${RNC-ID}/WSMLC-9    delete
    Create File    testplan.xml    ${plan}
    upload_a_file    testplan.xml
    ${output}=    direct_activate    testplan.xml    should_succeed=${False}
    Should Contain    ${output}    WSMLC DELETION FAILED: WSMLC NOT FOUND

VBTS Object id check - VBTS creation with incorrect VBTS id
    [Documentation]    VBTS creation fails, if VBTS id is incorrect
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    VBTS    create_object_itself=${False}
    ${plan} =    generate_empty_download_plan    VBTS    ${RNC-ID}/VBTS-9    create
    Create File    testplan.xml    ${plan}
    upload_a_file    testplan.xml
    ${output}=    download_plan    testplan.xml    should_succeed=${False}
    Should Contain    ${output}    ${RNC-ID}/DN:VBTS-9\ \ -> 15384 - VBTS PARAMETER CHECKING FAILED: ILLEGAL VALUES FOR RNW OBJECT PARAMETERS IN RNW PLAN

VBTS Object id check - VBTS modification with incorrect VBTS id
    [Documentation]    VBTS modification fails, if VBTS id is incorrect
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    VBTS    create_object_itself=${True}
    ${plan} =    generate_empty_download_plan    VBTS    ${RNC-ID}/VBTS-9    update
    add_plan_param    ${plan}    <p name="DediMeasRepPeriodCSdata">5</p>
    add_plan_param    ${plan}    <p name="DediMeasRepPeriodPSdata">6</p>
    add_plan_param    ${plan}    <p name="DedicatedMeasReportPeriod">7</p>
    Create File    testplan.xml    ${plan}
    upload_a_file    testplan.xml
    ${output}=    download_plan    testplan.xml    should_succeed=${False}
    Should Contain    ${output}    ${RNC-ID}/DN:VBTS-9\ \ -> 15384 - VBTS PARAMETER CHECKING FAILED: ILLEGAL VALUES FOR RNW OBJECT PARAMETERS IN RNW PLAN

VBTS Object id check - VBTS deletion with incorrect VBTS id
    [Documentation]    VBTS deletion succeeds, if VBTS id is incorrect, but notifies about non-existent VBTS object
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    VBTS    create_object_itself=${True}
    ${plan} =    generate_empty_download_plan    VBTS    ${RNC-ID}/VBTS-9    delete
    Create File    testplan.xml    ${plan}
    upload_a_file    testplan.xml
    ${output}=    download_plan    testplan.xml    should_succeed=${True}
    Should Contain    ${output}    VBTS DELETION FAILED: OBJECT DOES NOT EXIST

VCEL Object id check - VCEL DA creation with incorrect VBTS id
    [Documentation]    VCEL creation fails, if VBTS id is incorrect
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    VCEL    create_object_itself=${False}
    ${plan} =    generate_empty_download_plan    VCEL    ${RNC-ID}/VBTS-2/VCEL-1    create
    add_plan_param    ${plan}    <p name="EbNoSetIdentifier">1</p>
    add_plan_param    ${plan}    <p name="LAC">65535</p>
    add_plan_param    ${plan}    <p name="NrtFmcsIdentifier">1</p>
    add_plan_param    ${plan}    <p name="NrtHopsIdentifier">1</p>
    add_plan_param    ${plan}    <p name="RAC">255</p>
    add_plan_param    ${plan}    <p name="RtFmcsIdentifier">1</p>
    add_plan_param    ${plan}    <p name="RtHopsIdentifier">1</p>
    Create File    testplan.xml    ${plan}
    upload_a_file    testplan.xml
    ${output}=    direct_activate    testplan.xml    should_succeed=${False}
    Should Contain    ${output}    VCEL CREATION FAILED: VBTS NOT FOUND

VCEL Object id check - VCEL DA modification with incorrect VBTS id
    [Documentation]    VCEL modification fails, if VBTS id is incorrect
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    VCEL    create_object_itself=${True}
    ${plan} =    generate_empty_download_plan    VCEL    ${RNC-ID}/VBTS-2/VCEL-1    update
    add_plan_param    ${plan}    <p name="InitialBitRateDL">128</p>
    Create File    testplan.xml    ${plan}
    upload_a_file    testplan.xml
    ${output}=    direct_activate    testplan.xml    should_succeed=${False}
    Should Contain    ${output}    VCEL MODIFICATION FAILED: VBTS NOT FOUND

VCEL Object id check - VCEL DA deletion with incorrect VBTS id
    [Documentation]    VCEL deletion fails, if VBTS id is incorrect
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    VCEL    create_object_itself=${True}
    ${plan} =    generate_empty_download_plan    VCEL    ${RNC-ID}/VBTS-2/VCEL-1    delete
    Create File    testplan.xml    ${plan}
    upload_a_file    testplan.xml
    ${output}=    direct_activate    testplan.xml    should_succeed=${False}
    Should Contain    ${output}    VCEL DELETION FAILED: VBTS NOT FOUND

VCEL Object id check - VCEL DA creation with incorrect VCEL id
    [Documentation]    VCEL creation fails, if VCEL id is incorrect
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    VCEL    create_object_itself=${False}
    ${plan} =    generate_empty_download_plan    VCEL    ${RNC-ID}/VBTS-1/VCEL-3    create
    add_plan_param    ${plan}    <p name="EbNoSetIdentifier">1</p>
    add_plan_param    ${plan}    <p name="LAC">65535</p>
    add_plan_param    ${plan}    <p name="NrtFmcsIdentifier">1</p>
    add_plan_param    ${plan}    <p name="NrtHopsIdentifier">1</p>
    add_plan_param    ${plan}    <p name="RAC">255</p>
    add_plan_param    ${plan}    <p name="RtFmcsIdentifier">1</p>
    add_plan_param    ${plan}    <p name="RtHopsIdentifier">1</p>
    Create File    testplan.xml    ${plan}
    upload_a_file    testplan.xml
    ${output}=    direct_activate    testplan.xml    should_succeed=${False}
    Should Contain    ${output}    VCEL CREATION FAILED: ILLEGAL VALUES FOR RNW OBJECT PARAMETERS IN RNW PLAN:VCELId

VCEL Object id check - VCEL DA modification with incorrect VCEL id
    [Documentation]    VCEL modification fails, if VCEL id is incorrect
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    VCEL    create_object_itself=${True}
    ${plan} =    generate_empty_download_plan    VCEL    ${RNC-ID}/VBTS-1/VCEL-3    update
    add_plan_param    ${plan}    <p name="InitialBitRateDL">128</p>
    Create File    testplan.xml    ${plan}
    upload_a_file    testplan.xml
    ${output}=    direct_activate    testplan.xml    should_succeed=${False}
    Should Contain    ${output}    VCEL MODIFICATION FAILED: ILLEGAL VALUES FOR RNW OBJECT PARAMETERS IN RNW PLAN:VCELId

VCEL Object id check - VCEL DA deletion with incorrect VCEL id
    [Documentation]    VCEL deletion succeeds, if VCEL id is incorrect, but notifies about non-existent VCEL object
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    VCEL    create_object_itself=${True}
    ${plan} =    generate_empty_download_plan    VCEL    ${RNC-ID}/VBTS-1/VCEL-6    delete
    Create File    testplan.xml    ${plan}
    upload_a_file    testplan.xml
    ${output}=    direct_activate    testplan.xml    should_succeed=${False}
    Should Contain    ${output}    VCEL DELETION FAILED: VCEL NOT FOUND

VBTS Object id check - VBTS DA creation with incorrect VBTS id
    [Documentation]    VBTS creation fails, if VBTS id is incorrect
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    VBTS    create_object_itself=${False}
    ${plan} =    generate_empty_download_plan    VBTS    ${RNC-ID}/VBTS-9    create
    Create File    testplan.xml    ${plan}
    upload_a_file    testplan.xml
    ${output}=    direct_activate    testplan.xml    should_succeed=${False}
    Should Contain    ${output}    VBTS CREATION FAILED: ILLEGAL VALUES FOR RNW OBJECT PARAMETERS IN RNW PLAN:VBTSId

VBTS Object id check - VBTS DA modification with incorrect VBTS id
    [Documentation]    VBTS modification fails, if VBTS id is incorrect
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    VBTS    create_object_itself=${True}
    ${plan} =    generate_empty_download_plan    VBTS    ${RNC-ID}/VBTS-9    update
    add_plan_param    ${plan}    <p name="DediMeasRepPeriodCSdata">5</p>
    add_plan_param    ${plan}    <p name="DediMeasRepPeriodPSdata">6</p>
    add_plan_param    ${plan}    <p name="DedicatedMeasReportPeriod">7</p>
    Create File    testplan.xml    ${plan}
    upload_a_file    testplan.xml
    ${output}=    direct_activate    testplan.xml    should_succeed=${False}
    Should Contain    ${output}    VBTS MODIFICATION FAILED: ILLEGAL VALUES FOR RNW OBJECT PARAMETERS IN RNW PLAN:VBTSId

VBTS Object id check - VBTS DA deletion with incorrect VBTS id
    [Documentation]    VBTS deletion succeeds, if VBTS id is incorrect, but notifies about non-existent VBTS object
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    VBTS    create_object_itself=${True}
    ${plan} =    generate_empty_download_plan    VBTS    ${RNC-ID}/VBTS-9    delete
    Create File    testplan.xml    ${plan}
    upload_a_file    testplan.xml
    ${output}=    direct_activate    testplan.xml    should_succeed=${False}
    Should Contain    ${output}    VBTS DELETION FAILED: VBTS NOT FOUND

DA Modify ADJS MNCLength Parameter
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    ADJS    create_object_itself=${False}
    download_plan    RNWPLAND_ADJS_minimal.XML
    ${plan} =    generate_empty_download_plan    ADJS    ${RNC-ID}/WBTS-1/WCEL-1/ADJS-1    update
    add_plan_param    ${plan}    <p name="AdjsMNCLength">3</p>
    Log    ${plan}
    Create File    testplan.xml    ${plan}
    upload_a_file    testplan.xml
    ${output}=    direct_activate    testplan.xml
    ${ul_plan}=    upload_plan
    ${mnclen}=    get_plan_param_value    ${ul_plan}    ${RNC-ID}/WBTS-1/WCEL-1/ADJS-1    AdjsMNCLength
    Should Be True    ${mnclen} == 3
    ${mnc}=    get_plan_param_value    ${ul_plan}    ${RNC-ID}/WBTS-1/WCEL-1/ADJS-1    AdjsMNC
    Should Be True    ${mnc} == 1

Download Modify ADJS MNCLength Parameter
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    ADJS    create_object_itself=${False}
    download_plan    RNWPLAND_ADJS_minimal.XML
    ${plan} =    generate_empty_download_plan    ADJS    ${RNC-ID}/WBTS-1/WCEL-1/ADJS-1    update
    add_plan_param    ${plan}    <p name="AdjsMNCLength">3</p>
    Log    ${plan}
    Create File    testplan.xml    ${plan}
    upload_a_file    testplan.xml
    ${output}=    download_plan    testplan.xml
    ${ul_plan}=    upload_plan
    ${mnclen}=    get_plan_param_value    ${ul_plan}    ${RNC-ID}/WBTS-1/WCEL-1/ADJS-1    AdjsMNCLength
    Should Be True    ${mnclen} == 3
    ${mnc}=    get_plan_param_value    ${ul_plan}    ${RNC-ID}/WBTS-1/WCEL-1/ADJS-1    AdjsMNC
    Should Be True    ${mnc} == 1

WBTS lock and unlock (DA)
    [Documentation]    This test case tests, that RAYMAN does not return Operation Not Neede feedback, when WBTS state is modified with direct activation
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    WBTS    create_object_itself=${True}
    # lock
    ${plan} =    generate_empty_download_plan    WBTS    ${RNC-ID}/WBTS-1    update
    add_plan_param    ${plan}    <p name="AdminWBTSState">0</p>
    Log    ${plan}
    Create File    testplan.xml    ${plan}
    upload_a_file    testplan.xml
    ${output}=    directactivate    testplan.xml
    # unlock
    ${plan} =    generate_empty_download_plan    WBTS    ${RNC-ID}/WBTS-1    update
    add_plan_param    ${plan}    <p name="AdminWBTSState">1</p>
    Log    ${plan}
    Create File    testplan.xml    ${plan}
    upload_a_file    testplan.xml
    ${output}=    directactivate    testplan.xml

WBTS lock and unlock
    [Documentation]    This test case tests, that RAYMAN does not return Operation Not Neede feedback, when WBTS state is modified with direct activation
    [Tags]    ready-for-a-team-jenkins    nightly-test    
    [Setup]    create_base_config_for_object    WBTS    create_object_itself=${True}
    # lock
    ${plan} =    generate_empty_download_plan    WBTS    ${RNC-ID}/WBTS-1    update
    add_plan_param    ${plan}    <p name="AdminWBTSState">0</p>
    Log    ${plan}
    Create File    testplan.xml    ${plan}
    upload_a_file    testplan.xml
    ${output}=    download_plan    testplan.xml
    # unlock
    ${plan} =    generate_empty_download_plan    WBTS    ${RNC-ID}/WBTS-1    update
    add_plan_param    ${plan}    <p name="AdminWBTSState">1</p>
    Log    ${plan}
    Create File    testplan.xml    ${plan}
    upload_a_file    testplan.xml
    ${output}=    download_plan    testplan.xml

Incoming ADJS deletion requested
    [Documentation]    When outgoing ADJS (ADJS-2) is deleted, RAYMAN should also delete the incoming ADJS (ADJS-1), when incoming-adj-deletion is requested (CRS2179)
    [Tags]    ready-for-a-team-jenkins    nightly-test        
    [Setup]    Incoming ADJS deletion setup
    ${output}=    upload_plan
    Should Contain    ${output}    "${RNC-ID}/WBTS-1/WCEL-1/ADJS-1"
    Should Contain    ${output}    "${RNC-ID}/WBTS-2/WCEL-2/ADJS-2"
    Should Contain    ${output}    "${RNC-ID}/WBTS-1/WCEL-1/ADJS-10"
    Temp Update To Newdb for Incoming ADJS Deletion Test
    ${plan} =    generate_empty_download_plan    ADJS    ${RNC-ID}/WBTS-2/WCEL-2/ADJS-2    delete
    Log    ${plan}
    Create File    testplan.xml    ${plan}
    upload_a_file    testplan.xml
    direct_activate    testplan.xml    should_succeed=${True}    delete_incoming_adj=yes
    ${output}=    upload_plan
    Should Not Contain    ${output}    "${RNC-ID}/WBTS-1/WCEL-1/ADJS-1"
    Should Not Contain    ${output}    "${RNC-ID}/WBTS-2/WCEL-2/ADJS-2"
    Should Contain    ${output}    "${RNC-ID}/WBTS-1/WCEL-1/ADJS-10"
    [Teardown]    Test Case Teardown With Delete    RNWPLAND_incoming_ADJS_delete.XML

Incoming ADJS deletion not requested
    [Documentation]    When outgoing ADJS (ADJS-2) is deleted, RAYMAN should not delete the incoming ADJS (ADJS-1), when incoming-adj-deletion is not requested (CRS2179)
    [Tags]    ready-for-a-team-jenkins    nightly-test    
    [Setup]    Incoming ADJS deletion setup
    ${output}=    upload_plan
    Should Contain    ${output}    "${RNC-ID}/WBTS-1/WCEL-1/ADJS-1"
    Should Contain    ${output}    "${RNC-ID}/WBTS-2/WCEL-2/ADJS-2"
    Should Contain    ${output}    "${RNC-ID}/WBTS-1/WCEL-1/ADJS-10"
    Temp Update To Newdb for Incoming ADJS Deletion Test
    ${plan} =    generate_empty_download_plan    ADJS    ${RNC-ID}/WBTS-2/WCEL-2/ADJS-2    delete
    Log    ${plan}
    Create File    testplan.xml    ${plan}
    upload_a_file    testplan.xml
    direct_activate    testplan.xml    should_succeed=${True}    delete_incoming_adj=no
    ${output}=    upload_plan
    Should Contain    ${output}    "${RNC-ID}/WBTS-1/WCEL-1/ADJS-1"
    Should Not Contain    ${output}    "${RNC-ID}/WBTS-2/WCEL-2/ADJS-2"
    Should Contain    ${output}    "${RNC-ID}/WBTS-1/WCEL-1/ADJS-10"
    [Teardown]    Test Case Teardown With Delete    RNWPLAND_incoming_ADJS_delete.XML

Incoming ADJS deletion requested - incoming ADJS not found
    [Documentation]    RAYMAN should report an error, if incoming-adj-deletion is requested, and incoming ADJS is not found. Outgoing ADJS (ADJS-10) should be deleted successfully. (CRS2179)
    [Tags]    ready-for-a-team-jenkins    
    [Setup]    Incoming ADJS deletion setup
    ${output}=    upload_plan
    Should Contain    ${output}    "${RNC-ID}/WBTS-1/WCEL-1/ADJS-1"
    Should Contain    ${output}    "${RNC-ID}/WBTS-2/WCEL-2/ADJS-2"
    Should Contain    ${output}    "${RNC-ID}/WBTS-1/WCEL-1/ADJS-10"
    Temp Update To Newdb for Incoming ADJS Deletion Test
    ${plan} =    generate_empty_download_plan    ADJS    ${RNC-ID}/WBTS-1/WCEL-1/ADJS-10    delete
    Log    ${plan}
    Create File    testplan.xml    ${plan}
    upload_a_file    testplan.xml
    ${output} =    direct_activate    testplan.xml    should_succeed=${False}    delete_incoming_adj=yes
    Should Contain    ${output}    ${RNC-ID}/WBTS-1/WCEL-1/ADJS-10\ \ ADJS DELETION SUCCESSFULLY COMPLETED
    Should Contain    ${output}    ${RNC-ID}/WBTS-1/WCEL-1/ADJS-10\ \ ADJS DELETION FAILED: ADJS NOT FOUND
    ${output}=    upload_plan
    Should Contain    ${output}    "${RNC-ID}/WBTS-1/WCEL-1/ADJS-1"
    Should Contain    ${output}    "${RNC-ID}/WBTS-2/WCEL-2/ADJS-2"
    Should Not Contain    ${output}    "${RNC-ID}/WBTS-1/WCEL-1/ADJS-10"
    [Teardown]    Test Case Teardown With Delete    RNWPLAND_incoming_ADJS_delete.XML

Incoming ADJS deletion requested - outgoing ADJS not found
    [Documentation]    RAYMAN should report an error, if incoming-adj-deletion is requested, and not even outgoing ADJS (ADJS-9) is found. (CRS2179)
    [Tags]    ready-for-a-team-jenkins    nightly-test    Fails-with-org    # different output with org
    [Setup]    Incoming ADJS deletion setup
    ${output}=    upload_plan
    Should Contain    ${output}    "${RNC-ID}/WBTS-1/WCEL-1/ADJS-1"
    Should Contain    ${output}    "${RNC-ID}/WBTS-2/WCEL-2/ADJS-2"
    Should Contain    ${output}    "${RNC-ID}/WBTS-1/WCEL-1/ADJS-10"
    Temp Update To Newdb for Incoming ADJS Deletion Test
    ${plan} =    generate_empty_download_plan    ADJS    ${RNC-ID}/WBTS-1/WCEL-1/ADJS-9    delete
    Log    ${plan}
    Create File    testplan.xml    ${plan}
    upload_a_file    testplan.xml
    ${output} =    direct_activate    testplan.xml    should_succeed=${False}    delete_incoming_adj=yes
    # This is the error with org:
    # Should Contain    ${output}    RNW DIRECT ACTIVATION FAILED: OBJECT DOES NOT EXIST
    Should Contain    ${output}    ADJS DELETION FAILED: ADJS NOT FOUND
    ${output}=    upload_plan
    Should Contain    ${output}    "${RNC-ID}/WBTS-1/WCEL-1/ADJS-1"
    Should Contain    ${output}    "${RNC-ID}/WBTS-2/WCEL-2/ADJS-2"
    Should Contain    ${output}    "${RNC-ID}/WBTS-1/WCEL-1/ADJS-10"
    [Teardown]    Test Case Teardown With Delete    RNWPLAND_incoming_ADJS_delete.XML

Promotion Create DL UL Delete Test
    [Tags]    ready-for-a-team-jenkins    promotion-test    
    [Setup]    clean_all_except_rnc_objs_from_db
    ${ismcRNC} =    ismcRNC
    Run Keyword If    ${ismcRNC}==${false}    COCO_atm_interface_creation
    # Create test plan
    # Problematic objs, BKPRNC and PRNC cannot be combined
    ${excluded_objs}=    Create List    BKPRNC    RNCSRV    DATSYN    PRNC
    ${obj_plan_file_list}=    get_mo_plan_file_list    excluded_objs=${excluded_objs}
    ${obj_dict}=    combine_plans    ${obj_plan_file_list}    test_plan.xml    ${CURDIR}${/}test_files
    upload_a_file    test_plan.xml
    # DL UL
    # RNFC/RIMUtraSIEnab is waiting new RAKTOR with support for RAN3086 CSFB with RIM
    ${ignored_params}=    Create List    RIMUtraSIEnab
    Download Upload Compare Multiple Objects    test_plan.xml    ${obj_dict}    ${ignored_params}
    # delete part, RNXXX objs cannot be deleted with plan
    ${excluded_objs}=    Create List    BKPRNC    RNCSRV    DATSYN    PRNC    RNC
    ...    RNAC    RNFC    RNMOBI    RNHSPA    RNRLC    RNTRM
    ...    RNCERM    RNPS
    ${obj_plan_file_list}=    get_mo_plan_file_list    excluded_objs=${excluded_objs}    plan_type=delete
    ${obj_dict}=    combine_plans    ${obj_plan_file_list}    test_plan.xml    ${CURDIR}${/}test_files
    upload_a_file    test_plan.xml
    Delete Plan Multiple Objects    test_plan.xml    ${obj_dict}

Promotion DA Create Test
    [Tags]    ready-for-a-team-jenkins    promotion-test    
    [Setup]    create_base_config_for_object    WBTS    ${False}
    # DA plan can contain only one object so we just pick one of those
    Directactivate Full    WBTS    ${RNC-ID}/WBTS-1
    Directactivate delete    WBTS    ${RNC-ID}/WBTS-1

Extra unknown parameter in list should be skipped
    [Documentation]    TC for PR 44688ESPE07: PAB is skipping the whole WBTS list RRMULDCHActivityFactor during plan download operation if an extra unknown parameter is added in the list
    [Tags]    ready-for-a-team-jenkins    nightly-test
    [Setup]    create_base_config_for_object    WBTS    create_object_itself=${True}
    ${output}=    upload_plan
    # RRMULActivityFactorPTT is the extra parameter
    ${plan} =    generate_empty_download_plan    WBTS    ${RNC-ID}/WBTS-1    update
    add_plan_param    ${plan}    <list name="RRMULDCHActivityFactor">
    add_plan_param    ${plan}    <item>
    add_plan_param    ${plan}    <p name="RRMULDCHActivityFactorSRB">1</p>
    add_plan_param    ${plan}    <p name="RRMULDCHActivityFactorCSAMR">50</p>
    add_plan_param    ${plan}    <p name="RRMULDCHActivityFactorCSTData">100</p>
    add_plan_param    ${plan}    <p name="RRMULDCHActivityFactorCSNTData">95</p>
    add_plan_param    ${plan}    <p name="RRMULDCHActivityFactorPSStream">95</p>
    add_plan_param    ${plan}    <p name="RRMULDCHActivityFactorPSTHP1">95</p>
    add_plan_param    ${plan}    <p name="RRMULDCHActivityFactorPSTHP2">95</p>
    add_plan_param    ${plan}    <p name="RRMULDCHActivityFactorPSTHP3">95</p>
    add_plan_param    ${plan}    <p name="RRMULDCHActivityFactorPSBackgr">95</p>
    add_plan_param    ${plan}    <p name="RRMULActivityFactorPTT">30</p>
    add_plan_param    ${plan}    </item>
    add_plan_param    ${plan}    </list>
    Log    ${plan}
    Create File    testplan.xml    ${plan}
    upload_a_file    testplan.xml
    ${output}=    download_plan    testplan.xml
    Should Contain    ${output}    UNKNOWN ELEMENT IN XML PLAN FILE: RRMULActivityFactorPTT
    # Check that other parameters in the list were updated successfully
    ${output}=    upload_plan
    Should Contain    ${output}    <p name="RRMULDCHActivityFactorSRB">1</p>
    Should Contain    ${output}    <p name="RRMULDCHActivityFactorCSAMR">50</p>
    Should Contain    ${output}    <p name="RRMULDCHActivityFactorCSTData">100</p>
    Should Contain    ${output}    <p name="RRMULDCHActivityFactorCSNTData">95</p>
    Should Contain    ${output}    <p name="RRMULDCHActivityFactorPSStream">95</p>
    Should Contain    ${output}    <p name="RRMULDCHActivityFactorPSTHP1">95</p>
    Should Contain    ${output}    <p name="RRMULDCHActivityFactorPSTHP2">95</p>
    Should Contain    ${output}    <p name="RRMULDCHActivityFactorPSTHP3">95</p>
    Should Contain    ${output}    <p name="RRMULDCHActivityFactorPSBackgr">95</p>
    Should Not Contain    ${output}    RRMULActivityFactorPTT

*** Keywords ***
Generate WCELL AdminCellState plan
    [Arguments]    ${lock_or_unlock}
    ${plan} =    generate_empty_download_plan    WCEL    ${RNC-ID}/WBTS-1/WCEL-1    update
    add_plan_param    ${plan}    <p name="AdminCellState">${lock_or_unlock}</p>
    Log    ${plan}
    Create File    testplan.xml    ${plan}
    upload_a_file    testplan.xml

Incoming ADJS deletion setup
    [Documentation]    Delete IUCS object first
    delete_object_hierarchy_down_to    IUCS    remain_object_itself=${False}
    download_plan    RNWPLAND_incoming_ADJS.XML

Temp Update To Newdb for Incoming ADJS Deletion Test
    # One update to new database, which is not activated --> direct activation will update the new db
    ${plan} =    generate_empty_download_plan    RNC    ${RNC-ID}    update
    add_plan_param    ${plan}    <p name="RNCName">tmp</p>
    Log    ${plan}
    Create File    testplan.xml    ${plan}
    upload_a_file    testplan.xml
    download_plan    testplan.xml    activate=${false}

Modification Not Needed (DA)
    [Arguments]    ${obj_name}    ${different_plans}=${false}
    ${ismcRNC} =    ismcRNC
    ${plan_file}=    get_modify_plan_file_name    ${obj_name}    ${different_plans}
    ${output}=    upload_plan
    ${output} =    download_plan    ${plan_file}
    ${output} =    direct_activate    ${plan_file}    should_succeed=${false}
    Run Keyword If    ${ismcRNC}==${True}    Should Contain    ${output}    OPERATION IS UNNEEDED, BECAUSE REQUESTED SITUATION ALREADY EXISTS
    Run Keyword If    ${ismcRNC}==${False}    Should Contain    ${output}    Unneeded

Download RNC with MNC
    [Arguments]    ${mnc}    ${mnclen}    ${operation}=create    ${should_succeed}=${true}
    ${plan} =    generate_empty_download_plan    RNC    ${RNC-ID}    ${operation}
    Run Keyword If    "${mnc}" != "${empty}"    add_plan_param    ${plan}    <p name="CommonMNC">${mnc}</p>
    Run Keyword If    "${mnclen}" != "${empty}"    add_plan_param    ${plan}    <p name="CommonMNCLength">${mnclen}</p>
    add_plan_param    ${plan}    <p name="OMSIpAddress">1.2.3.4</p>    # mandatory
    Log    ${plan}
    Create File    testplan.xml    ${plan}
    upload_a_file    testplan.xml
    ${output}=    download_plan    testplan.xml    ${should_succeed}
    [Return]    ${output}

License Check Teardown
    Enable All Features
    Test Case Teardown

Create Upload and Compare With Original
    [Arguments]    ${obj_name}    ${dist_name}    ${ignored_params}=${empty}
    download_plan    RNWPLAND_${obj_name}_minimal.XML
    Upload and Compare With Original    ${obj_name}    ${dist_name}    ${ignored_params}

Upload and Compare With Original
    [Arguments]    ${obj_name}    ${dist_name}    ${ignored_params}=${empty}
    ${new_xml} =    upload_plan
    ${cmdata_new} =    get_cmdata_elem_from_text    ${new_xml}
    ${ismcRNC} =    ismcRNC
    ${tmp1} =    Run Keyword If    ${ismcRNC}==True    get_cmdata_from_file    ${CURDIR}${/}test_files/RNWPLANU_${obj_name}_org.XML
    ${tmp2} =    Run Keyword Unless    ${ismcRNC}==True    get_cmdata_from_file    ${CURDIR}${/}test_files/RNWPLANU_${obj_name}_org_cRNC.XML
    ${cmdata_org} =    Set Variable If    ${ismcRNC}==True    ${tmp1}    ${tmp2}
    Compare To Original    ${cmdata_org}    ${cmdata_new}    ${obj_name}    ${dist_name}    ${ignored_params}

Upload And Compare Plan
    [Arguments]    ${plan_file}    ${obj_name}    ${dist_name}    ${ignored_params}=${empty}
    ${dl_xml} =    type_a_file    ${plan_file}
    ${ul_xml} =    upload_plan
    ${cmdata_dl} =    get_cmdata_elem_from_text    ${dl_xml}
    ${cmdata_ul} =    get_cmdata_elem_from_text    ${ul_xml}
    Compare Plans    ${cmdata_dl}    ${cmdata_ul}    ${obj_name}    ${dist_name}    ${ignored_params}

Download Upload Compare
    [Arguments]    ${obj_name}    ${dist_name}    ${ignored_params}=${empty}
    download_plan    RNWPLAND_${obj_name}.XML
    Upload And Compare Plan    ${XML_PATH}//RNWPLAND_${obj_name}.XML    ${obj_name}    ${dist_name}    ${ignored_params}

Upload And Compare Multiple
    [Arguments]    ${plan_file_name}    ${dist_names_dict}    ${ignored_params}=${empty}
    ${output} =    upload_plan
    ${dl_xml} =    type_a_file    ${XML_PATH}/${plan_file_name}
    ${ul_xml} =    upload_plan
    ${cmdata_dl} =    get_cmdata_elem_from_text    ${dl_xml}
    ${cmdata_ul} =    get_cmdata_elem_from_text    ${ul_xml}
    @{objects} =    Get Dictionary Keys    ${dist_names_dict}
    : FOR    ${obj_name}    IN    @{objects}
    \    ${dist_name}=    Get From Dictionary    ${dist_names_dict}    ${obj_name}
    \    Compare Plans    ${cmdata_dl}    ${cmdata_ul}    ${obj_name}    ${dist_name}    ${ignored_params}

Download Upload Compare Multiple Objects
    [Arguments]    ${plan_file_name}    ${dist_names_dict}    ${ignored_params}=${empty}
    ${output} =    download_plan    ${plan_file_name}
    Upload And Compare Multiple    ${plan_file_name}    ${dist_names_dict}    ${ignored_params}

Directactivate Upload Compare Multiple Objects
    [Arguments]    ${plan_file_name}    ${dist_names_dict}    ${ignored_params}=${empty}
    ${output} =    direct_activate    ${plan_file_name}
    Upload And Compare Multiple    ${plan_file_name}    ${dist_names_dict}    ${ignored_params}

Directactivate Upload Compare
    [Arguments]    ${plan}    ${obj_name}    ${dist_name}    ${ignored_params}=${empty}
    download_plan    RNWPLAND_${obj_name}_minimal.XML    activate=${false}
    direct_activate    ${plan}
    Upload And Compare Plan    ${XML_PATH}//${plan}    ${obj_name}    ${dist_name}    ${ignored_params}
    # newdb update is controlled by AutomDLPlanUpdEnabled parameter in RNFC.
    # Since whole rnc object (rnc_gen,rnfc,rnmobi,rnac,...) must be present before newdb can be updated we check
    # if this is the case with this object
    ${newdb_cannot_be_updated}=    isRNCObject    ${obj_name}
    Run Keyword Unless    ${newdb_cannot_be_updated}    activate_plan
    Run Keyword Unless    ${newdb_cannot_be_updated}    Upload And Compare Plan    ${XML_PATH}//${plan}    ${obj_name}    ${dist_name}    ${ignored_params}

Directactivate Create Upload Compare
    [Arguments]    ${plan}    ${obj_name}    ${dist_name}    ${ignored_params}=${empty}
    direct_activate    ${plan}
    Upload And Compare Plan    ${XML_PATH}//${plan}    ${obj_name}    ${dist_name}    ${ignored_params}
    # newdb update is controlled by AutomDLPlanUpdEnabled parameter in RNFC.
    # Since whole rnc object (rnc_gen,rnfc,rnmobi,rnac,...) must be present before newdb can be updated we check
    # if this is the case with this object
    ${newdb_cannot_be_updated}=    isRNCObject    ${obj_name}
    Run Keyword If    ${newdb_cannot_be_updated}    activate_plan
    Run Keyword If    ${newdb_cannot_be_updated}    Upload And Compare Plan    ${XML_PATH}//${plan}    ${obj_name}    ${dist_name}    ${ignored_params}

Directactivate Full
    [Arguments]    ${obj_name}    ${dist_name}    ${ignored_params}=${empty}
    Directactivate Upload Compare    RNWPLAND_${obj_name}.XML    ${obj_name}    ${dist_name}    ${ignored_params}

Directactivate Create
    [Arguments]    ${obj_name}    ${dist_name}    ${ignored_params}=${empty}
    # different_plans argument tells if mcRNC and cRNC have different modify plans
    Directactivate Create Upload Compare    RNWPLAND_${obj_name}.XML    ${obj_name}    ${dist_name}    ${ignored_params}

Directactivate Modify
    [Arguments]    ${obj_name}    ${dist_name}    ${ignored_params}=${empty}    ${different_plans}=${false}
    # different_plans argument tells if mcRNC and cRNC have different modify plans
    ${plan_file}=    get_modify_plan_file_name    ${obj_name}    ${different_plans}
    Directactivate Upload Compare    ${plan_file}    ${obj_name}    ${dist_name}    ${ignored_params}

Directactivate Delete
    [Arguments]    ${obj_name}    ${dist_name}
    download_plan    RNWPLAND_${obj_name}_minimal.XML    activate=${false}
    direct_activate    RNWPLAND_${obj_name}_delete.XML
    ${ul} =    upload_plan
    Should Not Contain    ${ul}    <managedObject class="${obj_name}" distName="${dist_name}"
    activate_plan
    ${ul} =    upload_plan
    Should Not Contain    ${ul}    <managedObject class="${obj_name}" distName="${dist_name}"

Invalid Directactivate Delete
    [Arguments]    ${obj_name}    ${dist_name}
    ${output} =    direct_activate    RNWPLAND_${obj_name}_delete.XML    should_succeed=${False}
    Should Contain    ${output}    RNW DIRECT ACTIVATION FAILED: ILLEGAL OPERATION FOR RNC OBJECT IN RNW PLAN
    ${ul} =    upload_plan
    Should Contain    ${ul}    <managedObject class="${obj_name}" distName="${dist_name}"

Invalid Delete Plan
    [Arguments]    ${obj_name}
    ${output} =    download_plan    RNWPLAND_${obj_name}_delete.XML    should_succeed=${false}
    Should Contain    ${output}    ${RNC-ID}/DN:${obj_name}-1\ \ -> 15409 - ${obj_name} HANDLING FAILED: ILLEGAL OPERATION FOR RNC OBJECT IN RNW PLAN
    Should Contain    ${output}    Error in RNW Plan download:
    Should Contain    ${output}    15409 - ${obj_name} HANDLING FAILED: ILLEGAL OPERATION FOR RNC OBJECT IN RNW PLAN

Delete Plan
    [Arguments]    ${obj_name}    ${dist_name}
    ${output} =    download_plan    RNWPLAND_${obj_name}_delete.XML    should_succeed=${true}
    Should Contain    ${output}    DELETION SUCCESSFULLY COMPLETED
    ${ul} =    upload_plan
    Should Not Contain    ${ul}    <managedObject class="${obj_name}" distName="${dist_name}"

Delete Plan Multiple Objects
    [Arguments]    ${plan_file_name}    ${dist_names_dict}
    ${output} =    download_plan    ${plan_file_name}    should_succeed=${true}
    Should Contain    ${output}    DELETION SUCCESSFULLY COMPLETED
    ${ul} =    upload_plan
    @{objects} =    Get Dictionary Keys    ${dist_names_dict}
    : FOR    ${obj_name}    IN    @{objects}
    \    Should Contain    ${output}    ${obj_name} DELETION SUCCESSFULLY COMPLETED
    \    ${dist_name}=    Get From Dictionary    ${dist_names_dict}    ${obj_name}
    \    Should Not Contain    ${ul}    <managedObject class="${obj_name}" distName="${dist_name}"

Invalid Create Delete Plan
    [Arguments]    ${obj_name}
    ${output} =    download_plan    RNWPLAND_${obj_name}_minimal.XML    should_succeed=${false}
    Should Contain    ${output}    Error in RNW Plan download:
    Should Contain    ${output}    17449 - RNW PLAN DOWNLOAD FAILED: UNKNOWN RNW OBJECT NAME IN XML PLAN FILE
    ${output} =    download_plan    RNWPLAND_${obj_name}_delete.XML    should_succeed=${false}
    Should Contain    ${output}    Error in RNW Plan download:
    Should Contain    ${output}    17449 - RNW PLAN DOWNLOAD FAILED: UNKNOWN RNW OBJECT NAME IN XML PLAN FILE

Invalid Directactivate Plan
    [Arguments]    ${obj_name}
    ${output} =    direct_activate    RNWPLAND_${obj_name}.XML    ${false}
    Should Contain    ${output}    RNW DIRECT ACTIVATION FAILED: UNKNOWN RNW OBJECT NAME IN XML PLAN FILE

CMOB forced object Teardown
    [Documentation]    Clears the database so that the next RNC object creation will re-create the forced CMOB objects again
    #clear_rnwdb
    Test Case Teardown

Delete WAC-2 teardown
    [Documentation]    Deletes VCEL-1 and then WAC-2 objects from the db (WAC cannot be deleted, if VCEL refers to it)
    ${output} =    download_plan    RNWPLAND_VCEL_delete.XML    should_succeed=${true}
    ${plan} =    generate_empty_download_plan    WAC    ${RNC-ID}/WAC-2    delete
    Create File    testplan.xml    ${plan}
    upload_a_file    testplan.xml
    ${output}=    download_plan    testplan.xml    should_succeed=${True}
    Test Case Teardown

Disable List Of Features
    [Arguments]    ${disabled_feature_list}
    set_raktor_test_mode    ON
    @{disabled_feature_list}    set variable    ${disabled_feature_list}
    : FOR    ${disabled_feature}    IN    @{disabled_feature_list}
    \    disable_optionality    ${disabled_feature}

Feature Not Enabled (Download)
    [Arguments]    ${obj_name}    ${disabled_feature_list}    ${expected_error_text}
    [Documentation]    Test that RAYMAN skips the whole object object when the feature is not enabled
    Disable List Of Features    ${disabled_feature_list}
    ${output}=    download_plan    RNWPLAND_${obj_name}_minimal.XML    should_succeed=${true}
    Should Contain    ${output}    ${expected_error_text}

Feature Not Enabled (DA)
    [Arguments]    ${obj_name}    ${disabled_feature_list}    ${expected_error_text}
    [Documentation]    Test that RAYMAN skips the whole object object when the feature is not enabled
    Disable List Of Features    ${disabled_feature_list}
    ${output}=    direct_activate    RNWPLAND_${obj_name}.XML    should_succeed=${false}
    Should Contain    ${output}    ${expected_error_text}

Feature Not Enabled (Upload)
    [Arguments]    ${obj_name}    ${disabled_feature_list}
    [Documentation]    Test that RAYMAN skips the whole object object in upload when the feature is not enabled
    Disable List Of Features    ${disabled_feature_list}
    ${ul_xml} =    upload_plan
    Should Not Contain    ${ul_xml}    ${obj_name}

